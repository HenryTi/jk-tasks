{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VDetailContent.tsx","salestask/types/common/VComplet.tsx","salestask/types/CTaskType.tsx","salestask/types/大包装报价跟踪/VCreate.tsx","salestask/types/typeA/index.tsx","salestask/types/common/VCreate.tsx","salestask/types/common/index.tsx","salestask/types/commonTypes/common1.tsx","salestask/types/commonTypes/common2.tsx","salestask/types/commonTypes/phone/NonReagent.tsx","salestask/types/createTaskTypes.ts","salestask/types/commonTypes/phone/Reagent.tsx","salestask/selectType/VSelectType.tsx","salestask/selectType/VAi.tsx","salestask/selectType/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/CCustomer.tsx","tools/productImage.tsx","product/VProductList.tsx","product/CProduct.tsx","me/VMe.tsx","me/CMe.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","param","task","id","typeName","obj","name","description","remindDate","deadline","controller","showTaskDetailEdit","onSalesTaskAdd","createTask","_a","sent","renderSalesTask","salesTask","index","createTime","priorty","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","taskIcon","right","date","v","page","index_module","tasks","undefined","none","add","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","member","VSalesTaskExtension_schema","required","VSalesTaskExtension_SomeDay","SomeDay","dateVisible","value","title","onChange","evt","val","currentTarget","day2","Date","setDate","getDate","setValue","onDateChange","style","height","defaultValue","toDateString","mobx_module","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","uiSchema","resulttype","visible","widget","label","WidgetClass","result","placeholder","rows","submit","onExtensionTask","model","form","buttonClick","onFormButtonClick","context","data","extensionTask","_b","closePage","product","footer","ref","schema","onButtonClick","openPage","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","user","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","VActionsBottom_VActionsBottom","VActionsBottom","showTaskComplet","showTaskExtension","showTaskInvalid","VDetailContent_VDetailContent","VDetailContent","completuiSchema","getCTaskType","taskCommonType","fields","fieldName","fixWidth","selectItem","find","VComplet_VComplet","VComplet","onCompletionTask","completSchema","fieldValues","completionTask","_c","requiredFlag","CTaskType_CTaskType","CTaskType","icon","renderComplet","caption","renderCompletContent","renderView","renderDetailEdit","renderDetailTop","renderActionsBottom","renderDetailContent","renderDetailValues","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showComplet","showCreate","VCreate_schema","VCreate_VCreate","VCreate","onAddSalesTask","addTask","typeA_TypeA","TypeA","internalStart","openVPage","common_VCreate_VCreate","common_CTaskCommonType","CTaskCommonType","res","call","common1","size","common2","description2","NonReagent","taskTypeConstuctors","typeA","试剂报价跟踪","大包装报价跟踪","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ceasePage","ai","aiClick","tasktypelist","VAi_VAi","VAi","finished","setTimeout","CSelectType_CSelectType","CSelectType","returnCall","cUqSalesTask","cApp","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","postPone","remove","t","lodash_default","a","clone","dateTasks","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","VCustomerHistory_VCustomerHistory","VCustomerHistory","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","tt","completionTaskAction","taskType","selectCustomer","cCustomer","cSalesTaskType","customerId","typeId","sourceID","sourceType","sourceNo","addTaskAction","ret","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","query","createTaskTypes","consts","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchCustomer","first","loadCustomerDetail","imagePath","altimagePath","ProductImage","props","chemicalId","src","substr","altImage","VProductList_VProductList","VProductList","renderBrand","brand","productPropItem","renderProduct","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","pageProduct","more","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","rowCom","iconName","iconColor","VMe_VMe","VMe","logout","showLogout","CMe_CMe","CMe","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cProduct","cMe","start","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3024a432.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            typeName: param.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.createTask();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { description, deadline, createTime, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.taskIcon(typeName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <div className=\"text-muted\">{tv(type, (v) => <>{v.name}</>)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >推迟</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR right={principal.id !== nav.user.id && <span className=\"text-muted small\">{tv(principal)}</span>}>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { propTypes } from 'mobx-react';\r\nimport { Task } from '../../model';\r\n\r\nexport class VDetailTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"w-100 py-3\" onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className=\"w-100 py-2\"\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onShowSalesTaskHistory}\r\n                    left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>} />,\r\n                //label: '执行过程',\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer my-2 w-100\" onClick={onClickCustoemr}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            typeName: task.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View, Widget, UiSelectBase } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { CTaskCommonType } from '../common';\r\n\r\nexport class VDetailContent extends View<CTaskType> {\r\n\r\n    render(task: Task): JSX.Element {\r\n        let model = this.controller.cSalesTask.getCTaskType(task.type.obj.name);\r\n\r\n        let ss: CTaskCommonType = model as CTaskCommonType;\r\n\r\n        let { completuiSchema } = ss.taskCommonType;\r\n\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n\r\n        return <div className='w-100'>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let { label, list } = completuiSchema.items[fieldName] as UiSelectBase;\r\n                let left = <div className=''><FA name='caret-right' className='small text-info' fixWidth={true} />{label || fieldName}</div>;\r\n                let selectItem = list.find(v => v.value === value);\r\n                return <div className='row bg-white py-2' key={index}>\r\n                    <div className=\"col-4 align-self-center\">{left}</div>\r\n                    <div className=\"col-8\">{selectItem ? selectItem.title : value} </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CTaskCommonType } from '.';\r\n\r\nexport class VComplet extends VPage<CTaskCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n\r\n        await this.controller.cSalesTask.completionTask(this.salestask, fieldValues);\r\n        this.closePage(2);\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.salestask = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n        return <div>\r\n            <Form ref={v => this.form = v} className=\"my-3\"\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >完结</button>\r\n        </div>\r\n\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VComplet } from './common/VComplet';\r\n\r\nexport abstract class CTaskType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n    //显示明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderDetailEdit(tasks)\r\n        );\r\n    }\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VComplet, task);\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openPage(<Page header={task.typeName}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CTaskType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary'  >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import { CTaskType } from '../CTaskType';\r\nimport { VDetail } from './VDetail';\r\nimport { Task } from '../../model';\r\nimport { VCreate } from '../大包装报价跟踪/VCreate';\r\n\r\nexport class TypeA extends CTaskType {\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CTaskCommonType } from '.';\r\n\r\nexport class VCreate extends VPage<CTaskCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\n\r\nexport class CTaskCommonType extends CTaskType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const common1: TaskCommonType = {\r\n    caption: 'Common1',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const common2: TaskCommonType = {\r\n    caption: 'Common2',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: [\r\n                    { title: '有机化学', value: 1 },\r\n                    { title: '生物', value: 2 },\r\n                    { title: '甲醇', value: 3 },\r\n                    { title: '无机', value: 4 },\r\n                ]\r\n            } as UiRadio,\r\n            priorty: { widget: 'radio', label: '状态', defaultValue: 1, list: [{ value: 1, title: '有效' }, { value: 0, title: '无效' }] } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ]\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","export * from './CTaskType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { TypeA } from './typeA';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CTaskType } from './CTaskType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CTaskCommonType } from './common';\r\nimport { common1, common2, NonReagent, Reagent } from './commonTypes';\r\n\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CTaskType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    typeA: TypeA,\r\n    试剂报价跟踪: Reagent,\r\n    大包装报价跟踪: NonReagent,\r\n    common1: common1,\r\n    common2: common2,\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CTaskType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CTaskType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CTaskCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.taskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{name}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">抱歉，未找到相关产品，请重新搜索！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List before={''} none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { VSalesTaskAdd } from '../views/VSalesTaskAdd';\r\nimport { CTaskType } from '../types/CTaskType';\r\nimport { createTaskTypes } from '../types/createTaskTypes';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: TuidMain;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >取消</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.name))}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showDetailFromId(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                {tv(task, v => tv(v.type, vs => vs.name))}\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskComplet } from './views/VSalesTaskComplet';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CTaskType, createTaskTypes } from 'salestask/types/createTaskTypes';\r\nimport { CSelectType } from './selectType';\r\nimport { Task, TaskField } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\nimport { TaskCommonType } from './types/taskCommonType';\r\nimport { CTaskCommonType } from './types/common';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSalesTaskType: CSelectType;\r\n\r\n    private taskTypes: { [type: string]: CTaskType } = {};\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    private taskTuid: TuidMain;\r\n    private tuidCustomer: TuidMain;\r\n    private taskTypeTuid: TuidMain;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        this.cSalesTaskType = new CSelectType(this, undefined);\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchByKey(param);\r\n    }\r\n\r\n    //搜索所有未处理任务\r\n    searchByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, { tasks: tasks });\r\n    }\r\n\r\n    //获取类型的图表\r\n    taskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            throw typeName + ' is not defined';\r\n        }\r\n        return tt.icon;\r\n    }\r\n\r\n    //获取任务类型\r\n    getCTaskType(typeName: string): CTaskType {\r\n        return this.taskTypes[typeName];\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        let { typeName } = task;\r\n        let tt = this.getCTaskType(typeName);\r\n        if (tt !== undefined) tt.showDetailEdit(task);\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showDetailFromId(task.id);\r\n    }\r\n\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showComplet(task);\r\n    }\r\n    //完结任务\r\n    async completionTask(task: Task, fieldValues: TaskField[]) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: fieldValues\r\n            /*[\r\n                { fieldName: 'a', value: 1 },\r\n                { fieldName: 'b', value: 2 },\r\n                { fieldName: 'a', value: 3 },\r\n            ]*/\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    createTask = async () => {\r\n        let taskType = await this.selectTaskType();\r\n        let customer = await this.selectCustomer();\r\n        let typeName = (taskType as any).name\r\n        let task = {\r\n            id: null,\r\n            type: taskType,\r\n            typeName: typeName,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: customer\r\n        }\r\n        this.getCTaskType(typeName).showCreate(task);\r\n    }\r\n\r\n    //显示查询客户页面\r\n    private selectCustomer = async () => {\r\n        let { cCustomer } = this.cApp\r\n        return await cCustomer.call();\r\n    }\r\n\r\n    private selectTaskType = async () => {\r\n        return await this.cSalesTaskType.call();\r\n    }\r\n\r\n    //添加任务\r\n    addTask = async (param: any, task: Task) => {\r\n        let { description, priorty, deadline } = param;\r\n        let { customer, type } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        priorty = priorty ? 1 : 0;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        model.id = ret.id;\r\n\r\n        await this.searchByKey(param);\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n    }\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.selectCustomer(model);\r\n        this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageCustomer = null;\r\n        this.openVPage(VCustomerSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(null, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Nav, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-3 align-items-center\" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>{caption}</LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('tag', 'text-info', '已完成任务', onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('line-chart', 'text-danger', '销量', undefined),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let right = < div className='mr-3' ><FA name='bars' /></div>;\r\n        let footer = <button type=\"button\" className=\"btn btn-danger w-100\" onClick={this.logout} >退出</button>;\r\n        return <Page header='我的' footer={footer} headerClassName='bg-primary py-1 px-3'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqSalesTask.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/selectType';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CTaskType } from 'salestask/types/createTaskTypes';\r\nimport { CMe } from 'me/CMe';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        this.cSalesTask.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user' }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}