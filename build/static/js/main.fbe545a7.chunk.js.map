{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskComplet.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VContent.tsx","salestask/types/CTaskType.tsx","salestask/types/试剂报价跟踪/VCreate.tsx","salestask/types/试剂报价跟踪/index.tsx","salestask/types/大包装报价跟踪/VCreate.tsx","salestask/types/typeA/index.tsx","salestask/types/大包装报价跟踪/index.tsx","salestask/types/common/VCreate.tsx","salestask/types/common/index.tsx","salestask/types/createTaskTypes.ts","salestask/types/commonTypes/common1.tsx","salestask/types/commonTypes/common2.tsx","salestask/selectType/VSelectType.tsx","salestask/selectType/VAi.tsx","salestask/selectType/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/CCustomer.tsx","tools/productImage.tsx","product/VProductList.tsx","product/CProduct.tsx","me/VMe.tsx","me/CMe.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","task","controller","showTaskDetailEdit","onSalesTaskAdd","createTask","_a","sent","renderSalesTask","salesTask","index","description","deadline","createTime","typeName","priorty","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","taskIcon","right","date","v","name","page","index_module","tasks","undefined","none","add","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","param","member","VSalesTaskComplet_schema","required","VSalesTaskComplet_VSalesTaskComplet","VSalesTaskComplet","uiSchema","resulttype","visible","result","widget","label","placeholder","rows","submit","onCompletionTask","model","form","buttonClick","onFormButtonClick","context","data","completionTask","_b","closePage","footer","ref","schema","onButtonClick","openPage","VSalesTaskExtension_schema","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","onExtensionTask","extensionTask","product","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","id","user","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","VActionsBottom_VActionsBottom","VActionsBottom","showSalesTaskComplet","showTaskComplet","showSalesTaskExtension","showTaskExtension","showSalesTaskInvalid","showTaskInvalid","VContent_VContent","VContent","fields","fieldName","value","CTaskType_CTaskType","CTaskType","icon","renderDetailEdit","caption","renderDetailTop","renderActionsBottom","renderContent","renderDetailValues","renderView","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showCreate","VCreate_schema","VCreate_VCreate","VCreate","onAddSalesTask","addTask","requiredFlag","_","试剂报价跟踪","size","fixWidth","internalStart","openVPage","_VCreate_schema","_VCreate_VCreate","typeA_TypeA","TypeA","types_","大包装报价跟踪","common_VCreate_VCreate","taskCommonType","common_CTaskCommonType","CTaskCommonType","res","call","taskTypeConstuctors","typeA","common1","common2","description2","defaultValue","title","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ceasePage","ai","aiClick","tasktypelist","VAi_VAi","VAi","finished","setTimeout","mobx_module","CSelectType_CSelectType","CSelectType","returnCall","cUqSalesTask","cApp","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","postPone","remove","t","lodash_default","a","clone","remindDate","dateTasks","find","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","obj","VCustomerHistory_VCustomerHistory","VCustomerHistory","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","getCTaskType","completionTaskAction","taskType","selectCustomer","cCustomer","cSalesTaskType","customerId","typeId","sourceID","sourceType","sourceNo","addTaskAction","ret","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","query","tt","createTaskTypes","consts","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchCustomer","first","loadCustomerDetail","imagePath","altimagePath","ProductImage","props","style","chemicalId","src","substr","altImage","VProductList_VProductList","VProductList","renderBrand","brand","productPropItem","renderProduct","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","pageProduct","more","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","VMe_VMe","VMe","logout","showLogout","CMe_CMe","CMe","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cProduct","cMe","start","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbe545a7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (task: any) => {\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.createTask();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { description, deadline, createTime, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.taskIcon(typeName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <div className=\"text-muted\">{tv(type, (v) => <>{v.name}</>)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: true },\r\n];\r\n\r\n\r\nexport class VSalesTaskComplet extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.completionTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >完结</button>;\r\n        return <Page header=\"完结\" footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'date', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: { widget: 'date', label: '日期', placeholder: '请输入日期！' } as UiInputItem,\r\n            result: { widget: 'textarea', label: '原因', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >完结</button>;\r\n        return <Page header=\"推迟\" footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR right={principal.id !== nav.user.id && <span className=\"text-muted small\">{tv(principal)}</span>}>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { propTypes } from 'mobx-react';\r\nimport { Task } from '../../model';\r\n\r\nexport class VDetailTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"w-100 py-3\" onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className=\"w-100 py-2\"\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onShowSalesTaskHistory}\r\n                    left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>} />,\r\n                //label: '执行过程',\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer my-2 w-100\" onClick={onClickCustoemr}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet: showSalesTaskComplet, showTaskExtension: showSalesTaskExtension, showTaskInvalid: showSalesTaskInvalid } = this.controller.cSalesTask;\r\n\r\n        let onProcess = async () => await showSalesTaskComplet(task);\r\n        let onPostpond = async () => await showSalesTaskExtension(task);\r\n        let onInvalid = async () => await showSalesTaskInvalid(task);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { values } from 'mobx';\r\n\r\nexport class VContent extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n        return <>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n\r\n                let left = <div className='mx-3'><FA name='circle' className='small text-info mx-3' ></FA>{fieldName}</div>;\r\n                return <LMR className='bg-white row' left={left}  >\r\n                    <div>{value}</div>\r\n                </LMR>\r\n            })}\r\n        </>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VContent } from './share/VContent';\r\n\r\nexport abstract class CTaskType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderDetailEdit(tasks)\r\n        );\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} >\r\n            {renderDetailTop(task)}\r\n            {renderContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderContent } = this;\r\n        return <Page header={caption}>\r\n            {renderDetailTop(task)}\r\n            {renderContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openPage(<Page header={task.typeName}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'customer', type: 'id', required: false },\r\n    { name: 'type', type: 'id', required: false },\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CTaskType> {\r\n    private task: Task;\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            id: { visible: false },\r\n            customer: { visible: false },\r\n            type: { visible: false },\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(salestask: any) {\r\n        this.task = salestask;\r\n        this.openPage(this.page, salestask);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.task);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreate } from './VCreate';\r\nimport { Task } from '../../model';\r\n\r\nexport class 试剂报价跟踪 extends CTaskType {\r\n    icon = <FA name='flask' size=\"lg\" fixWidth={true} />;\r\n\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     protected renderContent = (task: Task): JSX.Element => {\r\n         return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CTaskType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import { CTaskType } from '../CTaskType';\r\nimport { VDetail } from './VDetail';\r\nimport { Task } from '../../model';\r\nimport { VCreate } from '../大包装报价跟踪/VCreate';\r\n\r\nexport class TypeA extends CTaskType {\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreate } from './VCreate';\r\nimport { Task } from '../../model';\r\n\r\nexport class 大包装报价跟踪 extends CTaskType {\r\n\r\n    icon = <FA name='flask' size=\"lg\" fixWidth={true} />;\r\n    caption = '大包装报价跟踪';\r\n\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CTaskCommonType } from '.';\r\n\r\nexport class VCreate extends VPage<CTaskCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\n\r\nexport class CTaskCommonType extends CTaskType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n}\r\n","export * from './CTaskType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { TypeA } from './typeA';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CTaskType } from './CTaskType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CTaskCommonType } from './common';\r\nimport { common1, common2 } from './commonTypes';\r\nimport { common3 } from './commonTypes/common3';\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CTaskType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    typeA: TypeA,\r\n    试剂报价跟踪: 试剂报价跟踪,\r\n    大包装报价跟踪: 大包装报价跟踪,\r\n    common1: common1,\r\n    common2: common2\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CTaskType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CTaskType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CTaskCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const common1: TaskCommonType = {\r\n    caption: 'Common1',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const common2: TaskCommonType = {\r\n    caption: 'Common2',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.taskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{name}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { tasktypelist, selectTaskType } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">抱歉，未找到相关产品，请重新搜索！</div>;\r\n        return <Page header=\"新建任务\" >\r\n            {this.ai()}\r\n            <List before={''} none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { VSalesTaskAdd } from '../views/VSalesTaskAdd';\r\nimport { CTaskType } from '../types/CTaskType';\r\nimport { createTaskTypes } from '../types/createTaskTypes';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: TuidMain;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: true },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >完结</button>;\r\n        return <Page header=\"拒绝\" footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.name))}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showDetailFromId(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                {tv(task, v => tv(v.type, vs => vs.name))}\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskComplet } from './views/VSalesTaskComplet';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CTaskType, createTaskTypes } from 'salestask/types/createTaskTypes';\r\nimport { CSelectType } from './selectType';\r\nimport { Task } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSalesTaskType: CSelectType;\r\n\r\n    private taskTypes: { [type: string]: CTaskType } = {};\r\n\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    private taskTuid: TuidMain;\r\n    private tuidCustomer: TuidMain;\r\n    private taskTypeTuid: TuidMain;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        this.cSalesTaskType = new CSelectType(this, undefined);\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchByKey(param);\r\n    }\r\n\r\n    //搜索所有未处理任务\r\n    searchByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, { tasks: tasks });\r\n    }\r\n\r\n\r\n    //获取类型的图表\r\n    taskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            throw typeName + ' is not defined';\r\n        }\r\n        return tt.icon;\r\n    }\r\n\r\n    //获取任务类型\r\n    private getCTaskType(typeName: string): CTaskType {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            throw typeName + ' is not defined';\r\n        }\r\n        return tt;\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showDetailEdit(task);\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showDetailFromId(task.id);\r\n    }\r\n\r\n    //显示任务完结页面\r\n    showTaskComplet = async (model: any) => {\r\n        this.openVPage(VSalesTaskComplet, model);\r\n    }\r\n    //完结任务\r\n    async completionTask(task: Task, result: string, resulttype: string) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: result,\r\n            fields: [\r\n                { fieldName: 'a', value: 1 },\r\n                { fieldName: 'b', value: 2 },\r\n                { fieldName: 'a', value: 3 },\r\n            ]\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    createTask = async () => {\r\n        let taskType = await this.selectTaskType();\r\n        let customer = await this.selectCustomer();\r\n        let typeName = (taskType as any).name\r\n        let task = {\r\n            id: null,\r\n            type: taskType,\r\n            typeName: typeName,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: customer\r\n        }\r\n        this.getCTaskType(typeName).showCreate(task);\r\n    }\r\n\r\n    //显示查询客户页面\r\n    private selectCustomer = async () => {\r\n        let { cCustomer } = this.cApp\r\n        return await cCustomer.call();\r\n    }\r\n\r\n    private selectTaskType = async () => {\r\n        return await this.cSalesTaskType.call();\r\n    }\r\n\r\n    //添加任务\r\n    addTask = async (param: any, task: Task) => {\r\n        let { description, priorty, deadline } = param;\r\n        let { customer, type } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        priorty = priorty ? 1 : 0;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        model.id = ret.id;\r\n\r\n        await this.searchByKey(param);\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n    }\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.selectCustomer(model);\r\n        this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n\r\n        let size: any = \"md\";\r\n        return <Page header=\"选择客户\">\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size={size}\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' right={add} headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageCustomer = null;\r\n        this.openVPage(VCustomerSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} right={add} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(null, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Nav, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowEmployeeHistory}\r\n                    left={< div  > <small><FA name='tag' className='text-info' /></small> &nbsp;已完成任务</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='line-chart' className='text-danger' /></small> &nbsp;销量</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='usd ' className='text-warning' /></small> &nbsp;工资</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='car' className='text-info' /></small> &nbsp;拜访</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let right = < div className='mr-3' ><FA name='bars' /></div>;\r\n        let footer = <button type=\"button\" className=\"btn btn-danger w-100\" onClick={this.logout} >退出</button>;\r\n        return <Page header='我的' right={right} footer={footer} headerClassName='bg-primary py-1 px-3'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqSalesTask.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/selectType';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CTaskType } from 'salestask/types/createTaskTypes';\r\nimport { CMe } from 'me/CMe';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        this.cSalesTask.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user' }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}