{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VDetailContent.tsx","salestask/types/common/VComplet.tsx","salestask/types/CTaskType.tsx","salestask/types/大包装报价跟踪/VCreate.tsx","salestask/types/typeA/index.tsx","salestask/types/common/VCreate.tsx","salestask/types/common/index.tsx","salestask/types/commonTypes/common1.tsx","salestask/types/commonTypes/common2.tsx","salestask/types/commonTypes/phone/NonReagent.tsx","salestask/types/createTaskTypes.ts","salestask/types/commonTypes/phone/Reagent.tsx","salestask/selectType/VSelectType.tsx","salestask/selectType/VAi.tsx","salestask/selectType/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/CCustomer.tsx","tools/productImage.tsx","product/VProductList.tsx","product/CProduct.tsx","me/VMe.tsx","me/CMe.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","param","task","id","typeName","obj","name","description","remindDate","deadline","controller","showTaskDetailEdit","onSalesTaskAdd","createTask","_a","sent","renderSalesTask","salesTask","index","createTime","priorty","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","taskIcon","right","date","v","page","index_module","tasks","undefined","none","add","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","member","VSalesTaskExtension_schema","required","VSalesTaskExtension_SomeDay","SomeDay","dateVisible","value","title","onChange","evt","val","currentTarget","day2","Date","setDate","getDate","setValue","onDateChange","style","height","defaultValue","toDateString","mobx_module","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","uiSchema","resulttype","visible","widget","label","WidgetClass","result","placeholder","rows","submit","onExtensionTask","model","form","buttonClick","onFormButtonClick","context","data","extensionTask","_b","closePage","product","footer","ref","schema","onButtonClick","openPage","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","user","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","VActionsBottom_VActionsBottom","VActionsBottom","showTaskComplet","showTaskExtension","showTaskInvalid","VDetailContent_VDetailContent","VDetailContent","fields","fieldName","VComplet_VComplet","VComplet","onCompletionTask","taskCommonType","completSchema","completuiSchema","fieldValues","completionTask","_c","requiredFlag","CTaskType_CTaskType","CTaskType","icon","renderComplet","caption","renderCompletContent","renderView","renderDetailEdit","renderDetailTop","renderActionsBottom","renderDetailContent","renderDetailValues","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showComplet","showCreate","VCreate_schema","VCreate_VCreate","VCreate","onAddSalesTask","addTask","typeA_TypeA","TypeA","internalStart","openVPage","common_VCreate_VCreate","common_CTaskCommonType","CTaskCommonType","res","call","common1","size","fixWidth","common2","description2","NonReagent","taskTypeConstuctors","typeA","试剂报价跟踪","大包装报价跟踪","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ceasePage","ai","aiClick","tasktypelist","VAi_VAi","VAi","finished","setTimeout","CSelectType_CSelectType","CSelectType","returnCall","cUqSalesTask","cApp","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","postPone","remove","t","lodash_default","a","clone","dateTasks","find","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","VCustomerHistory_VCustomerHistory","VCustomerHistory","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","getCTaskType","completionTaskAction","taskType","selectCustomer","cCustomer","cSalesTaskType","customerId","typeId","sourceID","sourceType","sourceNo","addTaskAction","ret","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","query","tt","createTaskTypes","consts","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchCustomer","first","loadCustomerDetail","imagePath","altimagePath","ProductImage","props","chemicalId","src","substr","altImage","VProductList_VProductList","VProductList","renderBrand","brand","productPropItem","renderProduct","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","pageProduct","more","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","rowCom","iconName","iconColor","VMe_VMe","VMe","logout","showLogout","CMe_CMe","CMe","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cProduct","cMe","start","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f45c7ce2.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            typeName: param.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.createTask();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { description, deadline, createTime, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.taskIcon(typeName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <div className=\"text-muted\">{tv(type, (v) => <>{v.name}</>)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >推迟</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR right={principal.id !== nav.user.id && <span className=\"text-muted small\">{tv(principal)}</span>}>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { propTypes } from 'mobx-react';\r\nimport { Task } from '../../model';\r\n\r\nexport class VDetailTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"w-100 py-3\" onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className=\"w-100 py-2\"\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onShowSalesTaskHistory}\r\n                    left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>} />,\r\n                //label: '执行过程',\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer my-2 w-100\" onClick={onClickCustoemr}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            typeName: task.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VDetailContent extends View<CTaskType> {\r\n\r\n    render(task: Task) {\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n        return <>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let left = <div className='mx-3'><FA name='circle' className='small text-info mx-3' ></FA>{fieldName}</div>;\r\n                return <LMR className='bg-white row' left={left}  >\r\n                    <div>{value}</div>\r\n                </LMR>\r\n            })}\r\n        </>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CTaskCommonType } from '.';\r\n\r\nexport class VComplet extends VPage<CTaskCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n\r\n        await this.controller.cSalesTask.completionTask(this.salestask, fieldValues);\r\n        this.closePage(2);\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.salestask = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n        return <div>\r\n            <Form ref={v => this.form = v} className=\"my-3\"\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >完结</button>\r\n        </div>\r\n\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VComplet } from './common/VComplet';\r\n\r\nexport abstract class CTaskType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n    //显示明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderDetailEdit(tasks)\r\n        );\r\n    }\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VComplet, task);\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openPage(<Page header={task.typeName}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CTaskType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary'  >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import { CTaskType } from '../CTaskType';\r\nimport { VDetail } from './VDetail';\r\nimport { Task } from '../../model';\r\nimport { VCreate } from '../大包装报价跟踪/VCreate';\r\n\r\nexport class TypeA extends CTaskType {\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CTaskCommonType } from '.';\r\n\r\nexport class VCreate extends VPage<CTaskCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.addTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CTaskType } from '../CTaskType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\n\r\nexport class CTaskCommonType extends CTaskType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const common1: TaskCommonType = {\r\n    caption: 'Common1',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const common2: TaskCommonType = {\r\n    caption: 'Common2',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: [\r\n                    { title: '有机化学', value: 1 },\r\n                    { title: '生物', value: 2 },\r\n                    { title: '甲醇', value: 3 },\r\n                    { title: '无机', value: 4 },\r\n                ]\r\n            } as UiRadio,\r\n            priorty: { widget: 'radio', label: '状态', defaultValue: 1, list: [{ value: 1, title: '有效' }, { value: 0, title: '无效' }] } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ]\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","export * from './CTaskType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { TypeA } from './typeA';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CTaskType } from './CTaskType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CTaskCommonType } from './common';\r\nimport { common1, common2, NonReagent, Reagent } from './commonTypes';\r\n\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CTaskType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    typeA: TypeA,\r\n    试剂报价跟踪: Reagent,\r\n    大包装报价跟踪: NonReagent,\r\n    common1: common1,\r\n    common2: common2,\r\n\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CTaskType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CTaskType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CTaskCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.taskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{name}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">抱歉，未找到相关产品，请重新搜索！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List before={''} none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { VSalesTaskAdd } from '../views/VSalesTaskAdd';\r\nimport { CTaskType } from '../types/CTaskType';\r\nimport { createTaskTypes } from '../types/createTaskTypes';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: TuidMain;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >取消</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.name))}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showDetailFromId(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR>\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> {tv(status, (v) => v.name)}</small></div>\r\n                {tv(task, v => tv(v.type, vs => vs.name))}\r\n            </LMR>\r\n            <small>{result}</small>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            typeName: tasks.type.obj.name,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskComplet } from './views/VSalesTaskComplet';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CTaskType, createTaskTypes } from 'salestask/types/createTaskTypes';\r\nimport { CSelectType } from './selectType';\r\nimport { Task, TaskField } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSalesTaskType: CSelectType;\r\n\r\n    private taskTypes: { [type: string]: CTaskType } = {};\r\n\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    private taskTuid: TuidMain;\r\n    private tuidCustomer: TuidMain;\r\n    private taskTypeTuid: TuidMain;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        this.cSalesTaskType = new CSelectType(this, undefined);\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchByKey(param);\r\n    }\r\n\r\n    //搜索所有未处理任务\r\n    searchByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, { tasks: tasks });\r\n    }\r\n\r\n    //获取类型的图表\r\n    taskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            throw typeName + ' is not defined';\r\n        }\r\n        return tt.icon;\r\n    }\r\n\r\n    //获取任务类型\r\n    private getCTaskType(typeName: string): CTaskType {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            throw typeName + ' is not defined';\r\n        }\r\n        return tt;\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showDetailEdit(task);\r\n    }\r\n\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showDetailFromId(task.id);\r\n    }\r\n\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        this.getCTaskType(task.typeName).showComplet(task);\r\n    }\r\n    //完结任务\r\n    async completionTask(task: Task, fieldValues: TaskField[]) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: fieldValues\r\n            /*[\r\n                { fieldName: 'a', value: 1 },\r\n                { fieldName: 'b', value: 2 },\r\n                { fieldName: 'a', value: 3 },\r\n            ]*/\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    createTask = async () => {\r\n        let taskType = await this.selectTaskType();\r\n        let customer = await this.selectCustomer();\r\n        let typeName = (taskType as any).name\r\n        let task = {\r\n            id: null,\r\n            type: taskType,\r\n            typeName: typeName,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: customer\r\n        }\r\n        this.getCTaskType(typeName).showCreate(task);\r\n    }\r\n\r\n    //显示查询客户页面\r\n    private selectCustomer = async () => {\r\n        let { cCustomer } = this.cApp\r\n        return await cCustomer.call();\r\n    }\r\n\r\n    private selectTaskType = async () => {\r\n        return await this.cSalesTaskType.call();\r\n    }\r\n\r\n    //添加任务\r\n    addTask = async (param: any, task: Task) => {\r\n        let { description, priorty, deadline } = param;\r\n        let { customer, type } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        priorty = priorty ? 1 : 0;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        model.id = ret.id;\r\n\r\n        await this.searchByKey(param);\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n    }\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.selectCustomer(model);\r\n        this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageCustomer = null;\r\n        this.openVPage(VCustomerSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(null, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Nav, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-3 align-items-center\" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>{caption}</LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('tag', 'text-info', '已完成任务', onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('line-chart', 'text-danger', '销量', undefined),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let right = < div className='mr-3' ><FA name='bars' /></div>;\r\n        let footer = <button type=\"button\" className=\"btn btn-danger w-100\" onClick={this.logout} >退出</button>;\r\n        return <Page header='我的' footer={footer} headerClassName='bg-primary py-1 px-3'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqSalesTask.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/selectType';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CTaskType } from 'salestask/types/createTaskTypes';\r\nimport { CMe } from 'me/CMe';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        this.cSalesTask.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user' }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}