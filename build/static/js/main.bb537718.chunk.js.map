{
    "version": 3,
    "sources": [
        "ui/salestask.tsx",
        "salestask/views/VMain.tsx",
        "salestask/views/VSalesTaskExtension.tsx",
        "salestask/views/VTaskHistory.tsx",
        "salestask/types/share/VDetailTop.tsx",
        "salestask/types/share/VCreateTop.tsx",
        "salestask/types/share/VActionsBottom.tsx",
        "salestask/types/share/VDetailContent.tsx",
        "salestask/types/commonType/VFinish.tsx",
        "salestask/types/CType.tsx",
        "salestask/types/大包装报价跟踪/VCreate.tsx",
        "salestask/types/typeA/index.tsx",
        "salestask/views/VCreateCheck.tsx",
        "salestask/types/commonType/VCreate.tsx",
        "salestask/types/commonType/CCommonType.tsx",
        "salestask/types/templets/visit/common1.tsx",
        "salestask/types/templets/visit/common2.tsx",
        "salestask/types/templets/visit/Visit.tsx",
        "salestask/types/templets/visit/Exhibition.tsx",
        "salestask/types/templets/phone/NonReagent.tsx",
        "salestask/types/createTypes.ts",
        "salestask/types/templets/phone/Reagent.tsx",
        "salestask/type/VSelectType.tsx",
        "salestask/type/VAi.tsx",
        "salestask/type/CSelectType.tsx",
        "salestask/model/tasks.ts",
        "salestask/views/VSalesTaskInvalid.tsx",
        "salestask/views/VEmployeeHistory.tsx",
        "salestask/views/VCustomerHistory.tsx",
        "salestask/type/VSelectBiz.tsx",
        "salestask/type/CSelectBiz.tsx",
        "salestask/types/commonType/VCreateProduct.tsx",
        "salestask/CSalesTask.tsx",
        "consts.ts",
        "customer/VCustomerSelect.tsx",
        "customer/VCustomerDetail.tsx",
        "customer/VCustomerList.tsx",
        "customer/CCustomer.tsx",
        "tools/productImage.tsx",
        "product/VProductList.tsx",
        "product/VProductSelect.tsx",
        "product/CProduct.tsx",
        "me/VMe.tsx",
        "me/CMe.tsx",
        "CSalesTaskApp.tsx",
        "ui/main.tsx",
        "ui/index.tsx",
        "App.tsx",
        "registerServiceWorker.ts",
        "index.tsx"
    ],
    "names": [
        "ui_salestask",
        "tuid",
        "salestask",
        "content",
        "values",
        "desciption",
        "customer",
        "type",
        "sourceid",
        "react",
        "Object",
        "dist",
        "VMain_VMain",
        "_super",
        "VMain",
        "_this",
        "apply",
        "this",
        "arguments",
        "onScrollBottom",
        "tslib_es6",
        "onSalesTaskClick",
        "param",
        "task",
        "id",
        "biz",
        "description",
        "remindDate",
        "deadline",
        "controller",
        "showTaskDetailEdit",
        "onSalesTaskAdd",
        "showSelectTaskType",
        "_a",
        "sent",
        "renderSalesTask",
        "salesTask",
        "index",
        "bizName",
        "priorty",
        "typeName",
        "cnFlag",
        "classnames_default",
        "my-1 mr-3",
        "text-danger",
        "text-info",
        "left",
        "className",
        "getTaskIcon",
        "right",
        "date",
        "v",
        "name",
        "page",
        "index_module",
        "tasks",
        "undefined",
        "none",
        "add",
        "onClick",
        "item",
        "render",
        "tasksNow",
        "dateTasksList",
        "header",
        "headerClassName",
        "length",
        "before",
        "items",
        "map",
        "list",
        "key",
        "prototype",
        "open",
        "member",
        "VSalesTaskExtension_schema",
        "required",
        "VSalesTaskExtension_SomeDay",
        "SomeDay",
        "dateVisible",
        "value",
        "title",
        "onChange",
        "evt",
        "val",
        "currentTarget",
        "day2",
        "Date",
        "setDate",
        "getDate",
        "setValue",
        "onDateChange",
        "style",
        "height",
        "defaultValue",
        "toDateString",
        "mobx_module",
        "VSalesTaskExtension_VSalesTaskExtension",
        "VSalesTaskExtension",
        "uiSchema",
        "resulttype",
        "visible",
        "widget",
        "label",
        "WidgetClass",
        "result",
        "placeholder",
        "rows",
        "submit",
        "onExtensionTask",
        "model",
        "form",
        "buttonClick",
        "onFormButtonClick",
        "context",
        "data",
        "extensionTask",
        "_b",
        "closePage",
        "product",
        "footer",
        "ref",
        "schema",
        "onButtonClick",
        "openPage",
        "VTaskHistory_VTaskHistory",
        "VTaskHistory",
        "renderHistory",
        "taskhistory",
        "status",
        "principal",
        "user",
        "cnRowCustor",
        "VDetailTop_right",
        "VDetailTop_VDetailTop",
        "VDetailTop",
        "cSalesTask",
        "showCustomerDetail",
        "showTaskHistory",
        "component",
        "push",
        "VCreateTop_VCreateTop",
        "VCreateTop",
        "itemss",
        "VActionsBottom_VActionsBottom",
        "VActionsBottom",
        "showTaskComplet",
        "showTaskExtension",
        "showTaskInvalid",
        "VDetailContent_VDetailContent",
        "VDetailContent",
        "completuiSchema",
        "getCTaskType",
        "obj",
        "taskCommonType",
        "fields",
        "fieldName",
        "fixWidth",
        "selectItem",
        "find",
        "VFinish_VFinish",
        "VFinish",
        "onCompletionTask",
        "completSchema",
        "fieldValues",
        "finishTask",
        "onCreateProduct",
        "showPorductSelect",
        "onShowProduct",
        "alert",
        "cssLMR",
        "requiredFlag",
        "CType_CType",
        "CType",
        "icon",
        "renderDetailValues",
        "caption",
        "renderDetailTop",
        "renderDetailContent",
        "renderDetailEdit",
        "renderActionsBottom",
        "renderView",
        "renderComplet",
        "renderCompletContent",
        "renderCreateTop",
        "showDetailFromId",
        "taskid",
        "Promise",
        "loadTask",
        "showDetailEdit",
        "showComplet",
        "showCreate",
        "VCreate_schema",
        "VCreate_VCreate",
        "VCreate",
        "onAddSalesTask",
        "createTask",
        "typeA_TypeA",
        "TypeA",
        "internalStart",
        "openVPage",
        "VCreateCheck_VCreateCheck",
        "VCreateCheck",
        "onAddTask",
        "onFinishTask",
        "createAndFinishTask",
        "cApp",
        "onClickCustoemr",
        "commonType_VCreate_VCreate",
        "CCommonType_CCommonType",
        "CCommonType",
        "res",
        "call",
        "showCrateCheck",
        "common1",
        "size",
        "radioClassName",
        "common2",
        "description2",
        "Visit",
        "priortya",
        "Exhibition",
        "NonReagent",
        "taskTypeConstuctors",
        "typeA",
        "reagent",
        "nonreagent",
        "visit",
        "exhibition",
        "VSelectType_VSelectType",
        "VSelectType",
        "renderList",
        "onClickTaskType",
        "selectTaskType",
        "ai",
        "aiClick",
        "tasktypelist",
        "VAi_VAi",
        "VAi",
        "finished",
        "setTimeout",
        "CSelectType_CSelectType",
        "CSelectType",
        "cSalesTaskBiz",
        "start",
        "returnTaskType",
        "returnCall",
        "cUqSalesTask",
        "tuidTaskType",
        "customerid",
        "searchByKey",
        "search",
        "tasks_Tasks",
        "Tasks",
        "taskArr",
        "array",
        "deep",
        "_i",
        "taskArr_1",
        "postPone",
        "remove",
        "t",
        "lodash_default",
        "a",
        "clone",
        "dateTasks",
        "findIndex",
        "splice",
        "len",
        "i",
        "VSalesTaskInvalid_schema",
        "VSalesTaskInvalid_VSalesTaskInvalid",
        "VSalesTaskInvalid",
        "onInvalidTask",
        "VEmployeeHistory_VEmployeeHistory",
        "VEmployeeHistory",
        "vs",
        "onTaskClick",
        "VCustomerHistory_VCustomerHistory",
        "VCustomerHistory",
        "VSelectBiz_VSelectBiz",
        "VSelectBiz",
        "renderItem",
        "onClickTaskBiz",
        "selectTaskBiz",
        "taskType",
        "taskBizs",
        "ret",
        "CSelectBiz_CSelectBiz",
        "CSelectBiz",
        "taskbiz",
        "cCustomer",
        "returnTaskBiz",
        "mapTaskBiz",
        "getBizFromTaskTypeId",
        "query",
        "VCreateProduct_schema",
        "VCreateProduct_VCreateProduct",
        "VCreateProduct",
        "note",
        "onCreateTaskProduct",
        "createproduct",
        "createProduct",
        "CSalesTask_CSalesTask",
        "PageSalesTask",
        "searchsalestskQuery",
        "firstSize",
        "pageSize",
        "load",
        "pageStart",
        "setPageStart",
        "CSalesTask",
        "taskTypes",
        "searchTaskByKey",
        "qeurySearchTask",
        "table",
        "taskTuid",
        "searchTaskCompletion",
        "qeurySearchTaskCompletion",
        "qeurySearchHistory",
        "showEmployeeHistory",
        "qeurySearchEmployeeHistory",
        "showCustomerHistory",
        "qeurySearchCustomerHistory",
        "tt",
        "createTasks",
        "newtask",
        "completionTaskAction",
        "cProduct",
        "productid",
        "createTaskProductAction",
        "cSelectType",
        "customerId",
        "typeId",
        "bizIds",
        "sourceID",
        "sourceType",
        "sourceNo",
        "addTaskAction",
        "tab",
        "cUqCustomer",
        "tuidCustomer",
        "taskTypeTuid",
        "taskBook",
        "book",
        "action",
        "extensionTaskAction",
        "createTaskTypes",
        "consts",
        "VCustomerSelect_VCustomerSelect",
        "VCustomerSelect",
        "onClickCustomer",
        "selectCustomer",
        "pageCustomer",
        "onSearch",
        "renderCustomer",
        "VCustomerDetail_VCustomerDetail",
        "VCustomerDetail",
        "vAlign",
        "alignValue",
        "VCustomerList_VCustomerList",
        "VCustomerList",
        "CCustomer_PageCustomer",
        "PageCustomer",
        "searchCustomerQuery",
        "CCustomer_CCustomer",
        "CCustomer",
        "querySearchCustomer",
        "first",
        "loadCustomerDetail",
        "returnCustomer",
        "imagePath",
        "altimagePath",
        "ProductImage",
        "props",
        "chemicalId",
        "src",
        "substr",
        "altImage",
        "VProductList_VProductList",
        "VProductList",
        "renderBrand",
        "brand",
        "productPropItem",
        "renderProduct",
        "descriptionC",
        "CAS",
        "purity",
        "molecularFomula",
        "molecularWeight",
        "origin",
        "imageUrl",
        "pageProduct",
        "more",
        "VProductSelect_VProductSelect",
        "VProductSelect",
        "returnProduct",
        "CProduct_PageProduct",
        "PageProduct",
        "searchProductQuery",
        "CProduct_CProduct",
        "CProduct",
        "querySearchProduct",
        "salesRegion",
        "cUqProduct",
        "rowCom",
        "iconName",
        "iconColor",
        "VMe_VMe",
        "VMe",
        "logout",
        "showLogout",
        "CMe_CMe",
        "CMe",
        "CSalesTaskApp_CSalesTaskApp",
        "CSalesTaskApp",
        "getCUq",
        "cMe",
        "color",
        "selected",
        "src_ui",
        "appName",
        "CApp",
        "main",
        "VHome",
        "faceTabs",
        "notify",
        "tabs",
        "uqs",
        "百灵威系统工程部/salestask",
        "src_App_0",
        "App",
        "onLogined",
        "isLocalhost",
        "Boolean",
        "window",
        "location",
        "hostname",
        "match",
        "registerValidSW",
        "swUrl",
        "navigator",
        "serviceWorker",
        "register",
        "then",
        "registration",
        "onupdatefound",
        "installingWorker",
        "installing",
        "onstatechange",
        "state",
        "console",
        "log",
        "catch",
        "error",
        "react_dom",
        "document",
        "getElementById",
        "URL",
        "toString",
        "addEventListener",
        "fetch",
        "response",
        "headers",
        "get",
        "indexOf",
        "ready",
        "unregister",
        "reload",
        "checkValidServiceWorker"
    ],
    "mappings": "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",
    "file": "static/js/main.bb537718.chunk.js",
    "sourcesContent": [
        "import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n",
        "import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            biz: param.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.showSelectTaskType();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { bizName, deadline, biz, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.getTaskIcon(bizName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <LMR className=\"\" right={<div className=\"text-muted\"><small>{tv(type, (v) => <>{v.description}</>)}</small></div>}>\r\n                <div className=\"text-muted\" ><small>{tv(biz, (v) => <>{v.description}</>)}</small></div>\r\n            </LMR>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >推迟</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        let right = <small className=\"text-muted\">{principal.id !== nav.user.id && <span className=\"text-muted small\"></span>}{tv(status, (v) => v.name)} </small>;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR left={<small className=\"text-muted\">{<EasyDate date={date} />} </small>}\r\n                right={<small className=\"text-muted\">{right}</small>}>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { propTypes } from 'mobx-react';\r\nimport { Task } from '../../model';\r\n\r\nconst cnRow = 'w-100 py-3';\r\nconst cnRowCustor = classNames(cnRow, 'cursor-pointer');\r\nconst right = <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>;\r\n\r\nexport class VDetailTop extends View<CType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={cnRowCustor} onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={right}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        if (deadline) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className={cnRow}\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp);\r\n        }\r\n        rows.push({\r\n            type: 'component',\r\n            name: 'customer',\r\n            component: <LMR className={cnRowCustor} onClick={onShowSalesTaskHistory}\r\n                left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                right={right} />,\r\n            //label: '执行过程',\r\n        } as ComponentProp);\r\n\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CType> {\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            biz: task.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport { View, Widget, UiSelectBase } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { CCommonType } from '../commontype/CCommonType';\r\n\r\nexport class VDetailContent extends View<CType> {\r\n\r\n    render(task: Task): JSX.Element {\r\n        let model = this.controller.cSalesTask.getCTaskType(task.biz.obj.name);\r\n\r\n        let ss: CCommonType = model as CCommonType;\r\n\r\n        let { completuiSchema } = ss.taskCommonType;\r\n\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n\r\n        return <div className='w-100'>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let { label, list } = completuiSchema.items[fieldName] as UiSelectBase;\r\n                let left = <div className=''><FA name='caret-right' className='small text-info' fixWidth={true} />{label || fieldName}</div>;\r\n                let selectItem = list.find(v => v.value === value);\r\n                return <div className='row bg-white py-2' key={index}>\r\n                    <div className=\"col-4 align-self-center\">{left}</div>\r\n                    <div className=\"col-8\">{selectItem ? selectItem.title : value} </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, LMR, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\nimport classNames from 'classnames';\r\n\r\nexport class VFinish extends VPage<CCommonType> {\r\n\r\n    private task: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { completSchema } = this.controller.taskCommonType;\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n        this.task.fields = fieldValues;\r\n        await this.controller.cSalesTask.finishTask(this.task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private onCreateProduct = async () => {\r\n        await this.controller.showPorductSelect(this.task);\r\n    }\r\n\r\n    private onShowProduct = async () => {\r\n        alert('查看');\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.task = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n\r\n        let cssLMR = \"bg-white row my-1 py-2\";\r\n        return <div className=\"mx-3\">\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProduct} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\">产品列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProduct} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\">包装列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProduct} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\">项目列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <Form ref={v => this.form = v}\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >完结</button>\r\n        </div >\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VFinish } from './commonType/VFinish';\r\n\r\nexport abstract class CType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    //显示任务明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderDetailEdit(tasks)\r\n        );\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VFinish, task);\r\n    }\r\n\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openPage(<Page header={task.biz.name}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary'  >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}",
        "import { CType } from '../CType';\r\nimport { VDetail } from './VDetail';\r\nimport { Task } from '../../model';\r\nimport { VCreate } from '../大包装报价跟踪/VCreate';\r\n\r\nexport class TypeA extends CType {\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, LMR, Prop, ComponentProp, FA, tv, PropGrid } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\n\r\nexport class VCreateCheck extends VPage<CSalesTask> {\r\n\r\n    private task: Task\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddTask = async (model: any) => {\r\n        this.task.description = undefined;\r\n        this.task.deadline = undefined;\r\n        this.controller.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    private onFinishTask = async () => {\r\n        this.task.priorty = 0;\r\n        await this.controller.createAndFinishTask(this.task);\r\n        this.closePage();\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cApp.cSalesTask;\r\n        let { customer, type, biz } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"circle\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    {tv(type, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        let footer = <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.onAddTask} >&nbsp;新建&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={this.onFinishTask} >处理</button>\r\n        </div>\r\n\r\n        let header = <div>{this.task.biz.description}&nbsp;</div>;\r\n\r\n        return <Page header={header} footer={footer} headerClassName='bg-primary'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={task} />\r\n        </Page>\r\n    }\r\n\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\n\r\nexport class VCreate extends VPage<CCommonType> {\r\n\r\n    private task: Task;\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { description, priorty, deadline } = context.form.data;\r\n        this.task.description = description;\r\n        this.task.priorty = priorty;\r\n        this.task.deadline = deadline;\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.task);\r\n        this.closePage(5);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { CType } from '../CType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreateCheck } from '../../views/VCreateCheck';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\nimport { VCreateProduct } from './VCreateProduct';\r\n\r\nexport class CCommonType extends CType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n    //显示查询客户页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n    //显示选择产品页面\r\n    showPorductSelect = async (task: Task) => {\r\n        await this.cSalesTask.showPorductSelect(task);\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const common1: TaskCommonType = {\r\n    caption: 'Common1',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const common2: TaskCommonType = {\r\n    caption: 'Common2',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Visit: TaskCommonType = {\r\n    caption: '拜访客户',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '拜访结果', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Exhibition: TaskCommonType = {\r\n    caption: '会展活动',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '会展评价', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "import * as React from 'react';\r\nimport { FA, toUiSelectItems } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: {\r\n                widget: 'radio', label: '重要性', defaultValue: 0,\r\n                list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: toUiSelectItems(['1:有机化学', '2:生物', '3:甲醇', '4:无机']),\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            priorty: {\r\n                widget: 'radio', label: '状态', defaultValue: 1,\r\n                list: [\r\n                    { value: 1, title: '有效' },\r\n                    { value: 0, title: '无效' }\r\n                ]\r\n            } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "export * from './CType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { TypeA } from './typeA';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CType } from './CType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CCommonType } from './commonType/CCommonType';\r\nimport { common1, common2, NonReagent, Reagent, Visit, Exhibition } from './templets';\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    typeA: TypeA,\r\n    reagent: Reagent,\r\n    nonreagent: NonReagent,\r\n    visit: Visit,\r\n    exhibition: Exhibition,\r\n    common1: common1,\r\n    common2: common2,\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}",
        "import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.getTaskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{description}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = ((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无任务类型！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: Tuid;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    private task: Task;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: TaskType) => {\r\n        this.task = {\r\n            id: null,\r\n            type: type,\r\n            biz: null,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: null\r\n        }\r\n        this.cSalesTask.cSalesTaskBiz.start(this.task)\r\n    }\r\n\r\n    returnTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n",
        "import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >取消</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, biz, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> </small></div>\r\n                <LMR right={<small>  {tv(status, (v) => v.name)}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.description || '#'))}</small>}\r\n                    left={<small>{tv(task, (v) => tv(v.biz, (vs) => vs.description || '#'))}</small>}>\r\n                </LMR>\r\n\r\n            </LMR>\r\n\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            biz: tasks.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showDetailFromId(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR className='small' left={<small className=\"text-muted\"><EasyDate date={date} /></small>}\r\n                right={<small>{tv(status, (v) => v.name)}</small>}>\r\n            </LMR>\r\n            <LMR left={<small>{tv(task, v => tv(v.biz, vs => vs.description))}</small>}\r\n                right={<small>{tv(task, v => tv(v.type, vs => vs.description))}</small>}></LMR>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            biz: tasks.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, LMR, List, FA, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectBiz } from './CSelectBiz';\r\n\r\nexport class VSelectBiz extends VPage<CSelectBiz> {\r\n\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderItem = (model: any, index: number) => {\r\n        let { biz, type } = model;\r\n        let left = <div className='text-info mr-3' >{tv(type, (obj) => this.controller.cSalesTask.getTaskIcon(biz.obj.name))}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{tv(biz, obj => obj.description)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskBiz = async (model: any) => {\r\n        await this.controller.selectTaskBiz(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return null;\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = () => {\r\n        let { taskType, taskBizs } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">正在筹备中</div>;\r\n        return <Page header={taskType.description || taskType.name} headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={taskBizs.ret} item={{ render: this.renderItem, onClick: this.onClickTaskBiz }} />\r\n        </Page>\r\n    };\r\n}",
        "import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller, Map } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectBiz extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private mapTaskBiz: Map;\r\n    taskBizs: any;\r\n    taskType: TaskType;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.mapTaskBiz = cUqSalesTask.map('taskbiz');\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.task = task;\r\n        this.taskType = task.type;\r\n        await this.getBizFromTaskTypeId(this.taskType);\r\n        this.openVPage(VSelectBiz);\r\n    }\r\n\r\n    //搜索任务类型\r\n    private async getBizFromTaskTypeId(taskType: TaskType) {\r\n        this.taskBizs = await this.mapTaskBiz.query({ type: taskType.id });\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskBiz = async (taskbiz: any) => {\r\n        this.task.biz = taskbiz.biz.obj;\r\n        this.cSalesTask.cApp.cCustomer.start(this.task)\r\n    }\r\n\r\n    //返回添加任务页面\r\n    returnTaskBiz = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct } from '../../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProduct extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private createproduct: CreateProduct\r\n    async open(param: CreateProduct) {\r\n        this.createproduct = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n\r\n    private onCreateTaskProduct = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        this.createproduct.note = context.data.note;\r\n        await this.controller.createProduct(this.createproduct);\r\n        this.closePage(2);\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加产品\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProduct} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, Tuid, Action, FA } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CType, createTaskTypes } from 'salestask/types/createTypes';\r\nimport { CSelectType } from './type';\r\nimport { Task, TaskField, TaskType, BizType, CreateProduct } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\nimport { CSelectBiz } from './type/CSelectBiz';\r\nimport { VCreateCheck } from './views/VCreateCheck';\r\nimport { VCreateProduct } from './types/commonType/VCreateProduct';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSelectType: CSelectType;\r\n    cSalesTaskBiz: CSelectBiz;\r\n\r\n    private taskTypes: { [type: string]: CType } = {};\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected createTaskProductAction: Action;\r\n    protected addTaskAction: Action;\r\n    private taskTuid: Tuid;\r\n    private tuidCustomer: Tuid;\r\n    private taskTypeTuid: Tuid;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n        this.cSelectType = new CSelectType(this, undefined);\r\n        this.cSalesTaskBiz = new CSelectBiz(this, undefined);\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n        this.createTaskProductAction = cUqSalesTask.action('CreateTaskProduct');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchTaskByKey(param);\r\n    }\r\n\r\n    //搜索开始------------------------------------------------\r\n    //搜索所有未处理任务\r\n    searchTaskByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n    //搜索单个任务\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理结果的记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, { tasks: tasks });\r\n    }\r\n    //获取类型的图表\r\n    getTaskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            if (typeName == 'phone') {\r\n                return <FA name='fax' size=\"lg\" fixWidth={true} />;\r\n            } else {\r\n                return <FA name='car' size=\"lg\" fixWidth={true} />;\r\n            }\r\n        }\r\n        return tt.icon;\r\n    }\r\n    //获取任务类型\r\n    getCTaskType(typeName: string): CType {\r\n        return this.taskTypes[typeName];\r\n    }\r\n    //搜索结束------------------------------------------------\r\n\r\n\r\n    //显示开始------------------------------------------------\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        let tt = this.getCTaskType(task.biz.obj.name);\r\n        if (tt !== undefined) tt.showDetailEdit(task);\r\n    }\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.biz.obj.name).showDetailFromId(task.id);\r\n    }\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        let name = task.biz.name ? task.biz.name : task.biz.obj.name;\r\n        this.getCTaskType(name).showComplet(task);\r\n    }\r\n    //显示结束------------------------------------------------\r\n\r\n\r\n    //处理任务开始------------------------------------------------\r\n    //完结任务\r\n    async finishTask(task: Task) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: task.fields\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n    }\r\n\r\n    //添加并完结任务\r\n    createAndFinishTask = async (task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.showTaskComplet(newtask);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    //显示选择产品页面\r\n    showPorductSelect = async (task: Task) => {\r\n        let { cProduct } = this.cApp;\r\n        let product = await cProduct.call();\r\n\r\n        let createproduct = {\r\n            task: task,\r\n            product: product,\r\n            note: null\r\n        }\r\n        this.openVPage(VCreateProduct, createproduct);\r\n    }\r\n\r\n    //添加产品\r\n    createProduct = async (createProduct: CreateProduct) => {\r\n        let { product, task, note } = createProduct;\r\n        note = note ? note : undefined;\r\n        let param = { taskid: task.id, productid: product.id, note: note };\r\n        this.createTaskProductAction.submit(param);\r\n    }\r\n    //处理任务结束------------------------------------------------\r\n\r\n\r\n    //添加任务开始------------------------------------------------\r\n    //显示任务类页面\r\n    showSelectTaskType = async () => {\r\n        //return await this.cSalesTaskType.call();\r\n        await this.cSelectType.start();\r\n    }\r\n    //显示选择处理方式的页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n    //添加任务\r\n    createTask = async (param: any, task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.searchTaskByKey('');\r\n    }\r\n\r\n    private createTasks = async (task: Task) => {\r\n        let { customer, type, biz, description, priorty, deadline } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        let bizIds = biz.id;\r\n        priorty = priorty ? 1 : 0;\r\n        deadline = deadline ? deadline : undefined;\r\n        description = description ? description : undefined;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, biz: bizIds, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        task.id = ret.id;\r\n        return task;\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n\r\n    }\r\n    //添加任务结束------------------------------------------------\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n\r\n",
        "export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n        let { name } = salesTask;\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n        await this.controller.selectCustomer(model);\r\n        //this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\nimport { Task } from 'salestask/model';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: Tuid;\r\n    private querySearchCustomer: Query;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.pageCustomer = null;\r\n        this.task = task;\r\n        this.openVPage(VCustomerSelect);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.task.customer = customer;\r\n        this.cApp.cSalesTask.showCrateCheck(this.task);\r\n        //this.cApp.cSalesTask.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n",
        "import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductSelect extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct, returnProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='添加产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: returnProduct }} />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\nimport { VProductSelect } from './VProductSelect';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.openVPage(VProductSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnProduct = async (product: any): Promise<any> => {\r\n        this.returnCall(product);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}",
        "import * as React from 'react';\r\nimport { VPage, Page, PageItems, Nav, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-3 align-items-center\" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>{caption}</LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('tag', 'text-info', '已完成任务', onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('line-chart', 'text-danger', '销量', undefined),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let right = < div className='mr-3' ><FA name='bars' /></div>;\r\n        let footer = <button type=\"button\" className=\"btn btn-danger w-100\" onClick={this.logout} >退出</button>;\r\n        return <Page header='我的' footer={footer} headerClassName='bg-primary py-1 px-3'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}",
        "import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    private tuidCustomer: Tuid;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqSalesTask.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n",
        "//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/type';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CType } from 'salestask/types/createTypes';\r\nimport { CMe } from 'me/CMe';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        this.cSalesTask.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}",
        "import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user' }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n",
        "import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n",
        "\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/",
        "// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
        "import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"
    ],
    "sourceRoot": ""
}