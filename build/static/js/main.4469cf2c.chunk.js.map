{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VDetailContent.tsx","salestask/types/commonType/VFinish.tsx","salestask/types/CType.tsx","salestask/views/VCreateCheck.tsx","salestask/types/commonType/VCreate.tsx","salestask/types/commonType/CCommonType.tsx","salestask/types/templets/legend/Marketing.tsx","salestask/types/templets/legend/Trial.tsx","salestask/types/templets/legend/BagOrderCancel.tsx","salestask/types/templets/legend/BagOrder.tsx","salestask/types/templets/legend/NotUptoStandard.tsx","salestask/types/templets/legend/RepeatPurchase.tsx","salestask/types/templets/orders/NonReagent.tsx","salestask/types/templets/orders/Reagent.tsx","salestask/types/templets/orders/Signback.tsx","salestask/types/templets/qualify/CustomerDev.tsx","salestask/types/templets/qualify/NewCustomerDev.tsx","salestask/types/createTypes.ts","salestask/types/templets/qualify/CustomerInfoDev.tsx","salestask/types/templets/qualify/Graduation.tsx","salestask/type/VSelectType.tsx","salestask/type/VAi.tsx","salestask/type/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/type/VSelectBiz.tsx","salestask/type/CSelectBiz.tsx","tools/productImage.tsx","salestask/views/VCreateProduct.tsx","salestask/views/VProductDetail.tsx","salestask/views/VCreateProject.tsx","salestask/views/VProjectDetail.tsx","salestask/views/VCreateProductPack.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/CCustomer.tsx","product/VProductList.tsx","product/VProductSelect.tsx","product/CProduct.tsx","me/VMe.tsx","me/VMeDetail.tsx","me/VAchievement.tsx","me/CMe.tsx","start/VStart.tsx","start/VOK.tsx","start/VError.tsx","start/CStart.tsx","me/VTeam.tsx","me/VTeamDetail.tsx","me/CTeam.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","param","task","id","biz","description","remindDate","deadline","controller","showTaskDetailEdit","onSalesTaskAdd","showSelectTaskType","_a","sent","renderSalesTask","salesTask","index","bizName","priorty","typeName","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","getTaskIcon","right","date","v","name","page","index_module","tasks","undefined","none","add","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","member","VSalesTaskExtension_schema","required","VSalesTaskExtension_SomeDay","SomeDay","dateVisible","value","title","onChange","evt","val","currentTarget","day2","Date","setDate","getDate","ss","getFullYear","getMonth","setValue","onDateChange","style","height","defaultValue","toDateString","mobx_module","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","uiSchema","resulttype","visible","widget","label","WidgetClass","result","placeholder","rows","submit","onExtensionTask","model","form","buttonClick","onFormButtonClick","context","data","extensionTask","_b","closePage","product","footer","ref","schema","onButtonClick","openPage","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","user","cnRowCustor","VDetailTop_right","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","itemss","VActionsBottom_VActionsBottom","VActionsBottom","showTaskComplet","showTaskExtension","showTaskInvalid","VDetailContent_VDetailContent","VDetailContent","completuiSchema","getCommonType","obj","taskCommonType","fields","selectItem","fieldName","fixWidth","find","VFinish_VFinish","VFinish","onCompletionTask","completSchema","fieldValues","finishTask","onCreateProduct","showPorductSelect","onCreateProject","showCreateProject","onCreateProjectPack","showPorductPackSelect","showTaskProductDetail","showTaskProjectDetail","onShowProject","cssLMR","requiredFlag","CType_CType","CType","icon","renderDetailValues","caption","renderDetailTop","renderDetailContent","renderDetailEdit","renderActionsBottom","renderView","renderComplet","renderCompletContent","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showComplet","showCreate","assure","VCreateCheck_VCreateCheck","VCreateCheck","onAddTask","getCTaskType","onFinishTask","createAndFinishTask","cApp","VCreate_VCreate","VCreate","onAddSalesTask","createTask","CCommonType_CCommonType","CCommonType","res","call","showCrateCheck","openVPage","internalStart","Marketing","size","radioClassName","Trial","description2","BagOrderCancel","priortya","BagOrder","NotUptoStandard","RepeatPurchase","NonReagent","Reagent","Signback","CustomerDev","NewCustomerDev","taskTypeConstuctors","reagent","nonreagent","signback","bagorder","bagordercancel","marketing","notuptostandard","repeatpurchase","trial","customerdev","customerinfodev","newcustomerdev","graduation","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ai","aiClick","tasktypelist","VAi_VAi","VAi","finished","setTimeout","CSelectType_CSelectType","CSelectType","cSalesTaskBiz","start","returnTaskType","returnCall","cUqSalesTask","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","postPone","remove","t","lodash_default","a","clone","dateTasks","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","VCustomerHistory_VCustomerHistory","VCustomerHistory","VSelectBiz_VSelectBiz","VSelectBiz","renderItem","onClickTaskBiz","selectTaskBiz","taskType","taskBizs","CSelectBiz_CSelectBiz","CSelectBiz","taskbiz","cCustomer","returnTaskBiz","mapTaskBiz","getBizFromTaskTypeId","query","ret","imagePath","altimagePath","ProductImage","props","chemicalId","src","substr","altImage","VCreateProduct_schema","VCreateProduct_VCreateProduct","VCreateProduct","note","onCreateTaskProduct","createproduct","createTaskProduct","renderBrand","brand","productPropItem","productItem","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","VProductDetail_VProductDetail","VProductDetail","products","VCreateProject_schema","VCreateProject_VCreateProject","VCreateProject","onCreateTaskProject","createTaskProject","VProjectDetail_VProjectDetail","VProjectDetail","project","projects","VCreateProductPack_schema","VCreateProductPack_VCreateProductPack","VCreateProductPack","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","searchTaskByKey","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","tt","createTasks","newtask","completionTaskAction","cProduct","createProduct","productid","createTaskProductAction","qeurySearchTaskProduct","createTaskProjectPack","createTaskProjectAction","showTaskProjectPackDetail","qeurySearchTaskProject","cSelectType","customerId","typeId","bizIds","sourceID","sourceType","sourceNo","addTaskAction","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","createTaskTypes","consts","uqSalesTask","uqCustomer","uqProduct","appIcon","headerClass","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","selectCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchCustomer","first","loadCustomerDetail","returnCustomer","VProductList_VProductList","VProductList","renderProduct","pageProduct","more","VProductSelect_VProductSelect","VProductSelect","returnProduct","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","rowCom","iconName","iconColor","VMe_VMe","VMe","logout","showLogout","meInfo","showMeDetail","nick","userSpan","inviteCode","showTeam","showOrderHistory","achievemen","VMeDetail_VMeDetail","VMeDetail","onItemChanged","itemSchema","newValue","preValue","userSetProp","saveLocalUser","position","VAchievement_VAchievement","VAchievement","achievements","pack","quantity","price","radiox","radioy","unit","CMe_CMe","CMe","querySearchPosition","code","String","p1","p2","searchAchievement","searchPosition","cTeam","showAchievement","userid","querySearchAchievement","achievement","SaleVolume","searchOrderHistory","querySearchOrderHistory","clear","VStart_schema","maxLength","VStart_VStart","VStart","invitacode","onCreatePosition","createPosition","onEnter","VOK_VOK","VOK","startApp","VError_VError","VError","back","CStart_CStart","CStart","isPosition","isNaN","actionPosition","succeed","ceasePage","tuidUser","save","VTeam_VTeam","VTeam","team","showPeerDetail","children","codes","assigned","VTeamDetail_VTeamDetail","VTeamDetail","assigend","savePeerAssigned","peer","CTeam_CTeam","CTeam","searchTeam","qeurySearchTeam","Assigned","actionSavePeerAssigned","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cMe","cStart","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4469cf2c.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            biz: param.biz,\r\n            description: param.description,\r\n            remindDate: null,\r\n            deadline: param.deadline,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.showSelectTaskType();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { bizName, deadline, biz, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.getTaskIcon(bizName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <LMR className=\"\" right={<div className=\"text-muted\"><small>{tv(type, (v) => <>{v.description}</>)}</small></div>}>\r\n                <div className=\"text-muted\" ><small>{tv(biz, (v) => <>{v.description}</>)}</small></div>\r\n            </LMR>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3 py-2\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            let ss = day2.getFullYear() + \"-\" + (day2.getMonth() + 1) + \"-\" + day2.getDate();\r\n            this.setValue(ss);\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            let ss = day2.getFullYear() + \"-\" + (day2.getMonth() + 1) + \"-\" + day2.getDate();\r\n            this.setValue(ss);\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >提交</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        let right = <small className=\"text-muted\">{principal.id !== nav.user.id && <span className=\"text-muted small\"></span>}{tv(status, (v) => v.name)} </small>;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR left={<small className=\"text-muted\">{<EasyDate date={date} />} </small>}\r\n                right={<small className=\"text-muted\">{right}</small>}>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nconst cnRow = 'w-100 py-3';\r\nconst cnRowCustor = classNames(cnRow, 'cursor-pointer');\r\nconst right = <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>;\r\n\r\nexport class VDetailTop extends View<CType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, biz, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={cnRowCustor}\r\n                    left={<div className=\"mr-2 \"> <FA name=\"bookmark-o\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    <span className=\"font-weight-bold mr-3 my-3\">{tv(type, v => <>{v.description}</>)} </span>  {tv(biz, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={cnRowCustor} onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={right}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n\r\n        ];\r\n        if (deadline) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className={cnRow}\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp);\r\n        }\r\n        /** \r\n        rows.push({\r\n            type: 'component',\r\n            name: 'customer',\r\n            component: <LMR className={cnRowCustor} onClick={onShowSalesTaskHistory}\r\n                left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                right={right} />,\r\n            //label: '执行过程',\r\n        } as ComponentProp);\r\n        */\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CType> {\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            biz: task.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View, Widget, UiSelectBase } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { CCommonType } from '../commontype/CCommonType';\r\n\r\nexport class VDetailContent extends View<CType> {\r\n\r\n    render(task: Task): JSX.Element {\r\n\r\n        let model = this.controller.cSalesTask.getCommonType(task.biz.obj.name);\r\n        let { completuiSchema } = model.taskCommonType;\r\n\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n\r\n        return <div className='w-100'>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let { label, list } = completuiSchema.items[fieldName] as UiSelectBase;\r\n                let left = <div className=''><FA name='caret-right' className='small text-info' fixWidth={true} />{label || fieldName}</div>;\r\n                var selectItem: any;\r\n                if (list) {\r\n                    selectItem = list.find(v => v.value === value);\r\n                }\r\n                return <div className='row bg-white py-2' key={index}>\r\n                    <div className=\"col-4 align-self-center\">{left}</div>\r\n                    <div className=\"col-8\">{selectItem ? selectItem.title : value} </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, LMR, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\nimport classNames from 'classnames';\r\n\r\nexport class VFinish extends VPage<CCommonType> {\r\n\r\n    private task: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { completSchema } = this.controller.taskCommonType;\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n        this.task.fields = fieldValues;\r\n        await this.controller.cSalesTask.finishTask(this.task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private onCreateProduct = async () => {\r\n        await this.controller.cSalesTask.showPorductSelect(this.task);\r\n    }\r\n\r\n    private onCreateProject = async () => {\r\n        await this.controller.cSalesTask.showCreateProject(this.task);\r\n    }\r\n\r\n    private onCreateProjectPack = async () => {\r\n        await this.controller.cSalesTask.showPorductPackSelect(this.task);\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.task = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n        let { showTaskProductDetail, showTaskProjectDetail, showPorductPackSelect } = this.controller.cSalesTask;\r\n        let onShowProduct = async () => await showTaskProductDetail(this.task);\r\n        let onShowProject = async () => await showTaskProjectDetail(this.task);\r\n\r\n        let cssLMR = \"bg-white row my-1 py-2\";\r\n        return <div className=\"mx-3\">\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProduct} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProduct} >产品列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProjectPack} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProject} >包装列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProject} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProject} >项目列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <Form ref={v => this.form = v}\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >提交</button>\r\n        </div >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VFinish } from './commonType/VFinish';\r\nimport { CCommonType } from './commonType';\r\n\r\nexport abstract class CType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    //显示任务明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        task.fields = tasks.fields\r\n        this.openPage(\r\n            this.renderDetailEdit(task)\r\n        );\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VFinish, task);\r\n    }\r\n\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        await task.biz.assure();\r\n        this.openPage(<Page header={\"biz.name\"}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, LMR, Prop, ComponentProp, FA, tv, PropGrid } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\n\r\nexport class VCreateCheck extends VPage<CSalesTask> {\r\n\r\n    private task: Task\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddTask = async (model: any) => {\r\n        this.task.description = undefined;\r\n        this.task.deadline = undefined;\r\n        this.controller.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    private onFinishTask = async () => {\r\n        this.task.priorty = 0;\r\n        await this.controller.createAndFinishTask(this.task);\r\n        this.closePage();\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cApp.cSalesTask;\r\n        let { customer, type, biz } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={this.itemss}\r\n                    left={<div> <FA name=\"bookmark-o\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    <span className=\"font-weight-bold mr-3\">{tv(type, v => <>{v.description}</>)} </span>  {tv(biz, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n\r\n        ];\r\n        let footer = <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.onAddTask} >&nbsp;新建&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={this.onFinishTask} >处理</button>\r\n        </div>\r\n\r\n        let header = <div>{this.task.biz.description}&nbsp;</div>;\r\n\r\n        return <Page header={header} footer={footer} headerClassName='bg-primary'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={task} />\r\n        </Page>\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\n\r\nexport class VCreate extends VPage<CCommonType> {\r\n\r\n    private task: Task;\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { description, priorty, deadline } = context.form.data;\r\n        this.task.description = description;\r\n        this.task.priorty = priorty;\r\n        this.task.deadline = deadline;\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.task);\r\n        this.closePage(5);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CType } from '../CType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreateCheck } from '../../views/VCreateCheck';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\nimport { VCreateProduct } from '../../views/VCreateProduct';\r\n\r\nexport class CCommonType extends CType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n    //显示查询客户页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const Marketing: TaskCommonType = {\r\n    caption: '组合营销',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Trial: TaskCommonType = {\r\n    caption: '产品试用',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const BagOrderCancel: TaskCommonType = {\r\n    caption: '大额订单取消',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '拜访结果', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const BagOrder: TaskCommonType = {\r\n    caption: '大额订单跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '会展评价', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const NotUptoStandard: TaskCommonType = {\r\n    caption: '客户计划未达标',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const RepeatPurchase: TaskCommonType = {\r\n    caption: '单一产品重复采购',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA, toUiSelectItems } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: {\r\n                widget: 'radio', label: '重要性', defaultValue: 0,\r\n                list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: toUiSelectItems(['1:有机化学', '2:生物', '3:甲醇', '4:无机']),\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            priorty: {\r\n                widget: 'radio', label: '状态', defaultValue: 1,\r\n                list: [\r\n                    { value: 1, title: '有效' },\r\n                    { value: 0, title: '无效' }\r\n                ]\r\n            } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Signback: TaskCommonType = {\r\n    caption: '订单催签返',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const CustomerDev: TaskCommonType = {\r\n    caption: '客服开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NewCustomerDev: TaskCommonType = {\r\n    caption: '新客服开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","export * from './CType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CType } from './CType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CCommonType } from './commonType/CCommonType';\r\nimport { Marketing, Trial, NonReagent, Reagent, BagOrderCancel, BagOrder, Signback, NotUptoStandard, RepeatPurchase, CustomerDev, CustomerInfoDev, NewCustomerDev, Graduation } from './templets';\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    reagent: Reagent,\r\n    nonreagent: NonReagent,\r\n    signback: Signback,\r\n\r\n    bagorder: BagOrder,\r\n    bagordercancel: BagOrderCancel,\r\n    marketing: Marketing,\r\n    notuptostandard: NotUptoStandard,\r\n    repeatpurchase: RepeatPurchase,\r\n    trial: Trial,\r\n\r\n    customerdev: CustomerDev,\r\n    customerinfodev: CustomerInfoDev,\r\n    newcustomerdev: NewCustomerDev,\r\n    graduation: Graduation,\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const CustomerInfoDev: TaskCommonType = {\r\n    caption: '客服信息开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Graduation: TaskCommonType = {\r\n    caption: '毕业清洗',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.getTaskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{description}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = ((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无任务类型！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: Tuid;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    private task: Task;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: any) => {\r\n        this.task = {\r\n            id: null,\r\n            type: type,\r\n            biz: null,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: null\r\n        }\r\n        this.cSalesTask.cSalesTaskBiz.start(this.task)\r\n    }\r\n\r\n    returnTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '原因', placeholder: '请输入取消原因！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >提交</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav, BoxId } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, biz, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> </small></div>\r\n                <LMR right={<small>  {tv(status, (v) => v.name)}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.description || '#'))}</small>}\r\n                    left={<small>{tv(task, (v) => tv(v.biz, (vs) => vs.description || '#'))}</small>}>\r\n                </LMR>\r\n\r\n            </LMR>\r\n\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        this.controller.showDetailFromId(param.task.obj);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    private tasks: any;\r\n    async open(tasks: any) {\r\n        if (tasks.length > 0) {\r\n            this.tasks = tasks;\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR className='small' left={<small className=\"text-muted\"><EasyDate date={date} /></small>}\r\n                right={<small>{tv(status, (v) => v.name)}</small>}>\r\n            </LMR>\r\n            <LMR left={<small>{tv(task, v => tv(v.biz, vs => vs.description))}</small>}\r\n                right={<small>{tv(task, v => tv(v.type, vs => vs.description))}</small>}></LMR>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        this.controller.showTaskDetailEdit(param.task.obj);\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={this.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, LMR, List, FA, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectBiz } from './CSelectBiz';\r\n\r\nexport class VSelectBiz extends VPage<CSelectBiz> {\r\n\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderItem = (model: any, index: number) => {\r\n        let { biz, type } = model;\r\n        let left = <div className='text-info mr-3' >{tv(type, (obj) => this.controller.cSalesTask.getTaskIcon(biz.obj.name))}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{tv(biz, obj => obj.description)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskBiz = async (model: any) => {\r\n        await this.controller.selectTaskBiz(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return null;\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = () => {\r\n        let { taskType, taskBizs } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">正在筹备中</div>;\r\n        return <Page header={taskType.description || taskType.name} headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={taskBizs} item={{ render: this.renderItem, onClick: this.onClickTaskBiz }} />\r\n        </Page>\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller, Map } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectBiz extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private mapTaskBiz: Map;\r\n    taskBizs: any[];\r\n    taskType: TaskType;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.mapTaskBiz = cUqSalesTask.map('taskbiz');\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.task = task;\r\n        this.taskType = task.type;\r\n        await this.getBizFromTaskTypeId(this.taskType);\r\n        this.openVPage(VSelectBiz);\r\n    }\r\n\r\n    //搜索任务类型\r\n    private async getBizFromTaskTypeId(taskType: TaskType) {\r\n        let ret = await this.mapTaskBiz.query({ type: taskType });\r\n        this.taskBizs = ret.ret;\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskBiz = async (taskbiz: any) => {\r\n        this.task.biz = taskbiz.biz.obj;\r\n        this.cSalesTask.cApp.cCustomer.start(this.task)\r\n    }\r\n\r\n    //返回添加任务页面\r\n    returnTaskBiz = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProduct extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private createproduct: CreateProduct\r\n    async open(param: CreateProduct) {\r\n        this.createproduct = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n\r\n    private onCreateTaskProduct = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        this.createproduct.note = context.data.note;\r\n        await this.controller.createTaskProduct(this.createproduct);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n\r\n    private productItem = (param: CreateProduct) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加产品\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                {this.productItem(param)}\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProduct} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Schema, tv, List } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VProductDetail extends VPage<CSalesTask> {\r\n    private products: any[];\r\n\r\n    async open(param: any) {\r\n\r\n        this.products = param;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return this.render();\r\n    });\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderItem = (param: any, index: number) => {\r\n        //param.product.assure();\r\n        //let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product.obj;\r\n        return tv(param.product, (product) => {\r\n            let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n            return <div className=\"d-block mb-4 px-2\">\r\n                <div className=\"py-2\">\r\n                    <div><strong>{description}</strong></div>\r\n                    <div>{descriptionC}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"row\">\r\n                            {this.productPropItem('CAS', CAS)}\r\n                            {this.productPropItem('纯度', purity)}\r\n                            {this.productPropItem('分子式', molecularFomula)}\r\n                            {this.productPropItem('分子量', molecularWeight)}\r\n                            {this.productPropItem('产品编号', origin)}\r\n                            {tv(brand, this.renderBrand)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无产品</div>;\r\n        return <Page header=\"产品详情\" headerClassName='bg-primary'>\r\n            <div>\r\n                <List before=\"\" none={none} items={this.products} item={{ render: this.renderItem }} />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct, Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProject extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private task: Task;\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCreateTaskProject = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.createTaskProject(this.task, context.data.note);\r\n        this.closePage();\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加项目\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProject} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page, List, tv } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\n\r\nexport class VProjectDetail extends VPage<CSalesTask> {\r\n\r\n    private projects: any;\r\n\r\n    async open(projects: any) {\r\n        this.projects = projects;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return this.render();\r\n    });\r\n\r\n    private renderItem = (param: any, index: number) => {\r\n        return tv(param.project, (project) => {\r\n            let { name } = project;\r\n            return <div className=\"px-3\" >{name}</div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无项目</div>;\r\n        return <Page header=\"项目详情\" headerClassName=\"bg-primary py-1\">\r\n            < List before={''} none={none} items={this.projects} item={{ render: this.renderItem }} />\r\n        </Page >\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProductPack extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private createproduct: CreateProduct\r\n    async open(param: CreateProduct) {\r\n        this.createproduct = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n\r\n    private onCreateTaskProduct = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        this.createproduct.note = context.data.note;\r\n        await this.controller.createTaskProduct(this.createproduct);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n\r\n    private productItem = (param: CreateProduct) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加产品包装\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                {this.productItem(param)}\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProduct} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, Tuid, Action, FA } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CType, createTaskTypes } from 'salestask/types/createTypes';\r\nimport { CSelectType } from './type';\r\nimport { Task, TaskField, TaskType, BizType, CreateProduct } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\nimport { CSelectBiz } from './type/CSelectBiz';\r\nimport { VCreateCheck } from './views/VCreateCheck';\r\nimport { VCreateProduct } from './views/VCreateProduct';\r\nimport { async } from 'q';\r\nimport { VProductDetail } from './views/VProductDetail';\r\nimport { CCommonType } from './types/commonType';\r\nimport { VCreateProject } from './views/VCreateProject';\r\nimport { VProjectDetail } from './views/VProjectDetail';\r\nimport { VCreateProductPack } from './views/VCreateProductPack';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSelectType: CSelectType;\r\n    cSalesTaskBiz: CSelectBiz;\r\n\r\n    private taskTypes: { [type: string]: CType } = {};\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    protected createTaskProductAction: Action;\r\n    protected createTaskProjectAction: Action;\r\n    private taskTuid: Tuid;\r\n    private tuidCustomer: Tuid;\r\n    private taskTypeTuid: Tuid;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n    private qeurySearchTaskProduct: Query;\r\n    private qeurySearchTaskProject: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n        this.cSelectType = new CSelectType(this, undefined);\r\n        this.cSalesTaskBiz = new CSelectBiz(this, undefined);\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n        this.createTaskProductAction = cUqSalesTask.action('CreateTaskProduct');\r\n        this.createTaskProjectAction = cUqSalesTask.action('CreateTaskProject');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n        this.qeurySearchTaskProduct = cUqSalesTask.query(\"SearchTaskProduct\");\r\n        this.qeurySearchTaskProject = cUqSalesTask.query(\"SearchTaskProject\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchTaskByKey(param);\r\n    }\r\n\r\n    //搜索开始------------------------------------------------\r\n    //搜索所有未处理任务\r\n    searchTaskByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n    //搜索单个任务\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理结果的记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, tasks);\r\n    }\r\n    //获取类型的图表\r\n    getTaskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            if (typeName == 'phone') {\r\n                return <FA name='fax' size=\"lg\" fixWidth={true} />;\r\n            } else {\r\n                return <FA name='car' size=\"lg\" fixWidth={true} />;\r\n            }\r\n        }\r\n        return tt.icon;\r\n    }\r\n    //获取任务类型\r\n    getCTaskType(typeName: string): CType {\r\n        return this.taskTypes[typeName];\r\n    }\r\n    //获取任务类型\r\n    getCommonType(bizName: string): CCommonType {\r\n        let model = this.getCTaskType(bizName);\r\n        return model as CCommonType;\r\n    }\r\n    //搜索结束------------------------------------------------\r\n\r\n\r\n    //显示开始------------------------------------------------\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        let tt = this.getCTaskType(task.biz.obj.name);\r\n        if (tt !== undefined) tt.showDetailEdit(task);\r\n    }\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.biz.obj.name).showDetailFromId(task.id);\r\n    }\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        let name = task.biz.obj ? task.biz.obj.name : task.biz.name;\r\n        this.getCTaskType(name).showComplet(task);\r\n    }\r\n    //显示结束------------------------------------------------\r\n\r\n\r\n    //处理任务开始------------------------------------------------\r\n    //完结任务\r\n    async finishTask(task: Task) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: task.fields\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n    }\r\n\r\n    //添加并完结任务\r\n    createAndFinishTask = async (task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.showTaskComplet(newtask);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    //显示选择产品页面\r\n    showPorductSelect = async (task: Task) => {\r\n        let { cProduct } = this.cApp;\r\n        let product = await cProduct.call();\r\n\r\n        let createproduct = {\r\n            task: task,\r\n            product: product,\r\n            note: null\r\n        }\r\n        this.openVPage(VCreateProduct, createproduct);\r\n    }\r\n\r\n    //添加产品\r\n    createTaskProduct = async (createProduct: CreateProduct) => {\r\n        let { product, task, note } = createProduct;\r\n        note = note ? note : undefined;\r\n        let param = { taskid: task.id, productid: product.productid, note: note };\r\n        this.createTaskProductAction.submit(param);\r\n    }\r\n\r\n    //显示产品列表\r\n    showTaskProductDetail = async (task: Task) => {\r\n        let products = await this.qeurySearchTaskProduct.table({ taskid: task.id });\r\n        /*\r\n        products.map((v, index) => {\r\n            await v.product.assure();\r\n            let aa = v.product;\r\n            let aaa = 1;\r\n        })*/\r\n        await this.openVPage(VProductDetail, products);\r\n    }\r\n\r\n    //添加包装-显示\r\n    showPorductPackSelect = async (task: Task) => {\r\n        let { cProduct } = this.cApp;\r\n        let product = await cProduct.call();\r\n\r\n        let createproduct = {\r\n            task: task,\r\n            product: product,\r\n            note: null\r\n        }\r\n        this.openVPage(VCreateProductPack, createproduct);\r\n    }\r\n\r\n\r\n    //添加包装\r\n    createTaskProjectPack = async (task: Task, note: string) => {\r\n        let param = { taskid: task.id, note: note };\r\n        this.createTaskProjectAction.submit(param);\r\n    }\r\n\r\n    //显示包装列表\r\n    showTaskProjectPackDetail = async (task: Task) => {\r\n        let projects = await this.qeurySearchTaskProject.table({ taskid: task.id });\r\n        this.openVPage(VProjectDetail, projects);\r\n    }\r\n\r\n\r\n    //添加项目-显示\r\n    showCreateProject = async (task: Task) => {\r\n        this.openVPage(VCreateProject, task);\r\n    }\r\n\r\n    //添加项目\r\n    createTaskProject = async (task: Task, note: string) => {\r\n        let param = { taskid: task.id, note: note };\r\n        this.createTaskProjectAction.submit(param);\r\n    }\r\n\r\n    //显示项目列表\r\n    showTaskProjectDetail = async (task: Task) => {\r\n        let projects = await this.qeurySearchTaskProject.table({ taskid: task.id });\r\n        this.openVPage(VProjectDetail, projects);\r\n    }\r\n\r\n    //处理任务结束------------------------------------------------\r\n\r\n\r\n    //添加任务开始------------------------------------------------\r\n    //显示任务类页面\r\n    showSelectTaskType = async () => {\r\n        //return await this.cSalesTaskType.call();\r\n        await this.cSelectType.start();\r\n    }\r\n    //显示选择处理方式的页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n    //添加任务\r\n    createTask = async (param: any, task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.searchTaskByKey('');\r\n    }\r\n\r\n    private createTasks = async (task: Task) => {\r\n        let { customer, type, biz, description, priorty, deadline } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        let bizIds = biz.id;\r\n        priorty = priorty ? 1 : 0;\r\n        deadline = deadline ? deadline : undefined;\r\n        description = description ? description : undefined;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, biz: bizIds, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        task.id = ret.id;\r\n        return task;\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n\r\n    }\r\n    //添加任务结束------------------------------------------------\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n\r\n\r\n    headerClass: 'bg-primary py-1',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n        let { name } = salesTask;\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n        await this.controller.selectCustomer(model);\r\n        //this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\nimport { Task } from 'salestask/model';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: Tuid;\r\n    private querySearchCustomer: Query;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.pageCustomer = null;\r\n        this.task = task;\r\n        this.openVPage(VCustomerSelect);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.task.customer = customer;\r\n        this.cApp.cSalesTask.showCrateCheck(this.task);\r\n        //this.cApp.cSalesTask.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductSelect extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct, returnProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='添加产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: returnProduct }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\nimport { VProductSelect } from './VProductSelect';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageProduct = null;\r\n        this.openVPage(VProductSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        await this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnProduct = async (product: any): Promise<any> => {\r\n        this.returnCall(product);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, VPage, nav, Image, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, value: any, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-2 my-2 align-items-center  \" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={<div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div>}>\r\n        {caption}<span className=\" ml-3\">{value}</span>\r\n    </LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n    private user: any;\r\n    private inviteCode: any;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        let { user, inviteCode } = this.controller;\r\n        this.user = user;\r\n        this.inviteCode = inviteCode;\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n\r\n    private userSpan(name: string, nick: string): JSX.Element {\r\n        return nick ?\r\n            <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n            : <b>{name}</b>\r\n    }\r\n\r\n    private meInfo = observer(() => {\r\n        let { showMeDetail } = this.controller;\r\n        let onshowMeDetail = async () => await showMeDetail();\r\n\r\n        let { id, name, nick, icon } = this.user;\r\n        return <LMR className=\"py-2 cursor-pointer w-100\" onClick={onshowMeDetail}\r\n            left={<Image className=\"w-3c h-3c mr-3\" src={icon} />}\r\n            right={<FA className=\"align-self-end\" name=\"chevron-right\" />}>\r\n            <div>\r\n                <div>{this.userSpan(name, nick)}</div>\r\n                <div className=\"small\"><span className=\"text-muted\">邀请码:</span> {this.inviteCode}</div>\r\n            </div>\r\n        </LMR>;\r\n    });\r\n\r\n\r\n    private page = observer(() => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let { showTeam, showOrderHistory, achievemen } = this.controller;\r\n\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n        let onshowTeam = async () => await showTeam();\r\n        let onshowOrderHistory = async () => await showOrderHistory(this.user.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                component: <this.meInfo />\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('tag', 'text-info', '已完成任务', undefined, onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('line-chart', 'text-danger', '个人业绩', achievemen + \" ￥\", onshowOrderHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('sitemap', 'text-info', '我的团队', undefined, onshowTeam),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let footer = <button type=\"button\" className=\"btn btn-danger flex-grow-1 mx-3 my-1\" onClick={this.logout} ><FA name=\"sign-out\" size=\"lg\" /> 退出</button>;\r\n        return <div>\r\n            <PropGrid className=\"my-2\" rows={rows} values={null} alignValue=\"right\" />\r\n            <div className=\"mt-3 d-flex\">{footer}</div>\r\n        </div>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, ImageSchema, StringSchema, UiSchema, UiTextItem, UiImageItem, Edit, nav, userApi, LMR, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VMeDetail extends VPage<CMe> {\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'icon', type: 'image' } as ImageSchema,\r\n        { name: 'nick', type: 'string' } as StringSchema,\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            icon: { widget: 'image', label: '头像' } as UiImageItem,\r\n            nick: { widget: 'text', label: '昵称', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n        }\r\n    }\r\n\r\n    @observable private data: any;\r\n    async open(position: any) {\r\n        let { nick, icon } = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        };\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header='个人信息' headerClassName='bg-primary py-1' >\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged}\r\n            />\r\n            <LMR className=\"d-flex px-3 py-2 bg-white align-items-center cursor-pointer\"\r\n                right={this.controller.inviteCode}>\r\n                邀请码\r\n            </LMR>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, StringSchema, UiSchema, UiTextItem, Edit, LMR, List, EasyDate, tv } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { consts } from 'consts';\r\nimport { CMe } from './CMe';\r\n\r\nexport class VAchievement extends VPage<CMe> {\r\n\r\n    private achievements: any;\r\n    async open(param: any) {\r\n        this.achievements = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private renderItem(model: any, index: number) {\r\n        let { date, customer, product, pack, quantity, price } = model;\r\n        let left = <small className=\"text-muted\"><EasyDate date={date} /><span className=\"ml-3\">{tv(customer, v => v.name)}</span></small>;\r\n        let right = <small className=\"text-muted\"><div className=\"px-3 py-2 \">  {quantity} * {price}￥</div></small>;\r\n        return <div className=\"d-block\">\r\n            <div>\r\n                <LMR className=\"px-3 py-2 \" left={left} right={right}></LMR>\r\n            </div>\r\n            <div>\r\n                {tv(product, v => <div className=\"px-3 py-2 \"><div>{v.description}</div> <div>{v.descriptionC}</div></div>)}\r\n                {tv(pack, v => <div className=\"px-3 py-2 \"><div>{v.radiox} * {v.radioy}{v.unit}</div></div>)}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无记录</div>;\r\n        return <Page header=\"业绩\" headerClassName={consts.headerClass}>\r\n            <List none={none} items={this.achievements} item={{ render: this.renderItem, onClick: null }} />\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav, loadAppUqs } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\nimport { VTeam } from './VTeam';\r\nimport { async } from 'q';\r\nimport { VMeDetail } from './VMeDetail';\r\nimport { VTeamDetail } from './VTeamDetail';\r\nimport { VAchievement } from './VAchievement';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    inviteCode: string;\r\n    position: any;\r\n    achievemen: number;\r\n\r\n    private querySearchPosition: Query;\r\n    private querySearchAchievement: Query;\r\n    private querySearchOrderHistory: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask } = this.cApp;\r\n        this.querySearchPosition = cUqSalesTask.query(\"searchposition\");\r\n        this.querySearchAchievement = cUqSalesTask.query(\"SearchAchievement\");\r\n        this.querySearchOrderHistory = cUqSalesTask.query(\"SearchOrderHistory\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.load();\r\n        nav.clear();\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    //加载邀请码\r\n    load = async () => {\r\n        this.position = await this.querySearchPosition.table({});\r\n        let code = String(this.position[0].code + 100000000);\r\n        let p1 = code.substr(1, 4);\r\n        let p2 = code.substr(5);\r\n        this.inviteCode = p1 + ' ' + p2;\r\n        await this.searchAchievement(this.user.id);\r\n    }\r\n\r\n    //显示我的个人信息\r\n    showMeDetail = async () => {\r\n        this.openVPage(VMeDetail)\r\n    }\r\n\r\n    //搜索我的邀请码\r\n    searchPosition = async () => {\r\n        let position = await this.querySearchPosition.table({});\r\n        return position;\r\n    }\r\n\r\n    //显示我的团队\r\n    showTeam = async () => {\r\n        let { cTeam } = this.cApp\r\n        await cTeam.start();\r\n    }\r\n\r\n    //显示业绩\r\n    showAchievement = async (param: any) => {\r\n        this.openVPage(VAchievement, param);\r\n    }\r\n\r\n    //搜索业绩\r\n    searchAchievement = async (userid: number) => {\r\n        let param = { user: userid };\r\n        let achievement = await this.querySearchAchievement.table(param);\r\n        if (achievement.length > 0) {\r\n            this.achievemen = achievement[0].SaleVolume\r\n        }\r\n    }\r\n\r\n    //显示订单历史记录\r\n    showOrderHistory = async (userid: number) => {\r\n        let list = await this.searchOrderHistory(userid);\r\n        this.openVPage(VAchievement, list);\r\n    }\r\n\r\n    //订单记录\r\n    searchOrderHistory = async (userid: number) => {\r\n        let param = { user: 47 };\r\n        let list = await this.querySearchOrderHistory.table(param);\r\n        return list;\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Schema, Context, StringSchema } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CStart } from './CStart';\r\nimport { consts } from 'consts';\r\n\r\n\r\nconst schema: Schema = [\r\n    { name: 'invitacode', type: 'string', required: true, maxLength: 8 } as StringSchema,\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VStart extends VPage<CStart> {\r\n\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            invitacode: { widget: 'text', label: '邀请码', placeholder: '请输入邀请码' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', className: 'btn btn-primary w-8c' },\r\n        }\r\n    }\r\n\r\n    async open(position: any) {\r\n\r\n        this.openPage(this.page, position);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onCreatePosition = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.createPosition(context.form.data);\r\n\r\n    }\r\n\r\n    private onEnter = async (name: string, context: Context): Promise<any> => {\r\n        if (name === 'invitacode') {\r\n            await this.onCreatePosition();\r\n        }\r\n    }\r\n\r\n    private page = observer((position: any) => {\r\n        //let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreatePosition}>保存</button>;\r\n        return <Page header='轻代理' headerClassName={consts.headerClass}>\r\n            <Form ref={v => this.form = v} className=\"m-3\"\r\n                schema={schema}\r\n                uiSchema={this.uiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n                onEnter={this.onEnter}\r\n            />\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { CStart } from './CStart';\r\nimport { VPage, Page, FA } from 'tonva';\r\nimport { consts } from 'consts';\r\n\r\nexport class VOK extends VPage<CStart> {\r\n    async open(position: any) {\r\n\r\n        this.openPage(this.page, position);\r\n    }\r\n\r\n    private page = (position: any) => {\r\n        return <Page header=\"通过\" headerClassName={consts.headerClass}>\r\n            <div className=\"p-5 text-center\">\r\n                <p className=\"text-primary mb-5\">欢迎加入轻代理体系。 &nbsp; <FA name=\"hand-peace-o\" size=\"2x\" className=\"text-danger\" /></p>\r\n                <button className=\"btn btn-outline-primary w-6c\" onClick={this.controller.startApp}>开始体验</button>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CStart } from './CStart';\r\nimport { VPage, Page, FA } from 'tonva';\r\nimport { consts } from 'consts';\r\n\r\nexport class VError extends VPage<CStart> {\r\n    async open(position: any) {\r\n        await this.openPage(this.page, position);\r\n    }\r\n\r\n    private page = (position: any) => {\r\n        return <Page header=\"无法通过\" back=\"none\" headerClassName={consts.headerClass}>\r\n            <div className=\"p-5 text-center\">\r\n                <p className=\"text-primary mb-5\">\r\n                    <FA name=\"minus-circle\" size=\"2x\" className=\"text-danger\" />\r\n                    <br /><br />\r\n                    无效的邀请码</p>\r\n                <button className=\"btn btn-outline-primary w-6c\" onClick={this.controller.startApp}>返回</button>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VStart } from './VStart';\r\nimport { VOK } from './VOK';\r\nimport { VError } from './VError';\r\nimport { isNumber } from 'util';\r\n\r\n\r\n/**\r\n *\r\n */\r\nexport class CStart extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n\r\n    private tuidUser: Tuid;\r\n    private querySearchPosition: Query;\r\n    private actionPosition: Action;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, } = this.cApp;\r\n        this.tuidUser = cUqSalesTask.tuid(\"$user\")\r\n        this.querySearchPosition = cUqSalesTask.query(\"searchposition\");\r\n        this.actionPosition = cUqSalesTask.action(\"CreatePosition\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        // await this.openVPage(VPositionOK);\r\n        // return;\r\n        var isPosition: Boolean;\r\n        isPosition = await this.isPosition();\r\n        if (!isPosition) {\r\n            nav.clear();\r\n            await this.openVPage(VStart, param);\r\n        }\r\n        else {\r\n            await this.cApp.cSalesTask.start();\r\n        }\r\n    }\r\n\r\n    //判断是否有邀请码\r\n    isPosition = async () => {\r\n        let position = await this.searchPosition();\r\n        if (position && position.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //搜索识别码\r\n    searchPosition = async () => {\r\n        let position = await this.querySearchPosition.table({});\r\n        return position;\r\n    }\r\n\r\n    startApp = async () => {\r\n        await this.cApp.start();\r\n    }\r\n\r\n    //新建识别码\r\n    createPosition = async (param: any) => {\r\n        let { invitacode } = param;\r\n        if (isNaN(invitacode) === true) {\r\n            await this.openVPage(VError);\r\n            return;\r\n        }\r\n        let position = await this.actionPosition.submit({ invitacode: invitacode });\r\n        let { succeed } = position;\r\n        this.ceasePage();\r\n        if (succeed === 1) {\r\n            await this.tuidUser.save(this.user.id, this.user);\r\n            await this.openVPage(VOK, position);\r\n        } else if (succeed === -1) {\r\n            await this.openVPage(VError, position);\r\n        }\r\n        return position;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, List, LMR, tv, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport { CTeam } from './CTeam';\r\n\r\nexport class VTeam extends VPage<CTeam> {\r\n\r\n    private team: any;\r\n    async open(team: any) {\r\n        this.team = team;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private userSpan(name: any, nick: string): JSX.Element {\r\n        return nick ?\r\n            <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n            : <b>{name}</b>\r\n    }\r\n\r\n\r\n    private renderItem = (team: any, index: number) => {\r\n\r\n        let { showPeerDetail } = this.controller;\r\n        let onshowPeerDetail = async () => await showPeerDetail(team);\r\n\r\n        let { children } = team;\r\n        let codes = tv(children, v => v.name);\r\n        return <LMR className=\"px-3 py-2 \" onClick={onshowPeerDetail}\r\n            left={<FA name='user' className=' my-2 mr-3 text-info' />}\r\n            right={<div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div>}>\r\n            <div className=\"font-weight-bold \">{this.userSpan(codes, team.assigned)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = () => {\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无团队</div>;\r\n        return <Page header='我的团队' headerClassName='bg-primary py-1' >\r\n            <List before={''} none={none} items={this.team} item={{ render: this.renderItem }} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, StringSchema, UiSchema, UiTextItem, Edit, LMR } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { consts } from 'consts';\r\nimport { CTeam } from './CTeam';\r\n\r\nexport class VTeamDetail extends VPage<CTeam> {\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'assigend', type: 'string' } as StringSchema,\r\n    ];\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            assigend: { widget: 'text', label: '昵称', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n        }\r\n    }\r\n\r\n    @observable private data: any;\r\n    private peer: any;\r\n    async open(param: any) {\r\n        let { assigned, children } = param;\r\n        this.peer = children;\r\n        this.data = {\r\n            assigend: assigned,\r\n        };\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await this.controller.savePeerAssigned(this.peer, newValue);\r\n        this.data[name] = newValue;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"粉丝信息\" headerClassName={consts.headerClass}>\r\n            <Edit\r\n                schema={this.schema}\r\n                uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n            <LMR className=\" bg-white pl-3 py-2\"\r\n                left={<div><span>销量</span></div>}>\r\n                <div className=\" w-100 pl-3\">1000000</div>\r\n            </LMR>\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav, loadAppUqs } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\nimport { VTeam } from './VTeam';\r\nimport { async } from 'q';\r\nimport { VMeDetail } from './VMeDetail';\r\nimport { VTeamDetail } from './VTeamDetail';\r\n\r\n/**\r\n *\r\n */\r\nexport class CTeam extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n\r\n    private qeurySearchTeam: Query;\r\n    private actionSavePeerAssigned: Action;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask } = this.cApp;\r\n        this.qeurySearchTeam = cUqSalesTask.query(\"searchteam\");\r\n        this.actionSavePeerAssigned = cUqSalesTask.action(\"savePeerassigned\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart() {\r\n        let team = await this.searchTeam();\r\n        this.openVPage(VTeam, team);\r\n    }\r\n\r\n    //搜索我的团队\r\n    searchTeam = async () => {\r\n        let team = await this.qeurySearchTeam.table({});\r\n        return team;\r\n    }\r\n\r\n    //显示粉丝信息\r\n    showPeerDetail = async (team: any) => {\r\n        this.openVPage(VTeamDetail, team);\r\n    }\r\n\r\n    //保存粉丝自定义信息\r\n    savePeerAssigned = async (peer: any, newValue: any) => {\r\n        let param = { peer: peer.id, Assigned: newValue };\r\n        this.actionSavePeerAssigned.submit(param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/type';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CType } from 'salestask/types/createTypes';\r\nimport { CMe } from 'me/CMe';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\nimport { CStart } from 'start/CStart';\r\nimport { CTeam } from 'me/CTeam';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n    cTeam: CTeam;\r\n    cStart: CStart;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n        this.cTeam = new CTeam(this, undefined);\r\n        this.cStart = new CStart(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        //this.cSalesTask.start();\r\n\r\n        /** 启动邀请码页面 */\r\n        this.cStart.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs, TabProp } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs: any[] = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user', load: cMe.load }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify, load } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n                load: load,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}