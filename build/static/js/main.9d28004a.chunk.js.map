{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VDetailContent.tsx","salestask/types/commonType/VFinish.tsx","salestask/types/CType.tsx","salestask/views/VCreateCheck.tsx","salestask/types/commonType/VCreate.tsx","salestask/types/commonType/CCommonType.tsx","salestask/types/templets/legend/Marketing.tsx","salestask/types/templets/legend/Trial.tsx","salestask/types/templets/legend/BagOrderCancel.tsx","salestask/types/templets/legend/BagOrder.tsx","salestask/types/templets/legend/NotUptoStandard.tsx","salestask/types/templets/legend/RepeatPurchase.tsx","salestask/types/templets/orders/NonReagent.tsx","salestask/types/templets/orders/Reagent.tsx","salestask/types/templets/orders/Signback.tsx","salestask/types/templets/qualify/CustomerDev.tsx","salestask/types/templets/qualify/NewCustomerDev.tsx","salestask/types/createTypes.ts","salestask/types/templets/qualify/CustomerInfoDev.tsx","salestask/types/templets/qualify/Graduation.tsx","salestask/type/VSelectType.tsx","salestask/type/VAi.tsx","salestask/type/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/type/VSelectBiz.tsx","salestask/type/CSelectBiz.tsx","tools/productImage.tsx","salestask/views/VCreateProduct.tsx","salestask/views/VProductDetail.tsx","salestask/views/VCreateProject.tsx","salestask/views/VProjectDetail.tsx","salestask/views/VCreateProductPack.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/VCreateCustomer.tsx","customer/VCreateCustomerFinish.tsx","customer/CCustomer.tsx","product/VProductList.tsx","product/VProductSelect.tsx","product/CProduct.tsx","me/VMe.tsx","me/VMeDetail.tsx","me/VAchievement.tsx","me/CMe.tsx","start/VStart.tsx","start/VOK.tsx","start/VError.tsx","start/CStart.tsx","me/VTeam.tsx","me/VTeamDetail.tsx","me/CTeam.tsx","message/VMessage.tsx","message/CMessage.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","param","task","id","biz","description","remindDate","deadline","controller","showTaskDetailEdit","onSalesTaskAdd","showSelectTaskType","_a","sent","renderSalesTask","salesTask","index","bizName","priorty","typeName","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","getTaskIcon","right","date","v","name","page","index_module","tasks","undefined","none","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","member","VSalesTaskExtension_schema","required","VSalesTaskExtension_SomeDay","SomeDay","dateVisible","value","title","onChange","evt","val","currentTarget","day2","Date","setDate","getDate","ss","getFullYear","getMonth","setValue","onDateChange","style","height","defaultValue","toDateString","mobx_module","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","uiSchema","resulttype","visible","widget","label","WidgetClass","result","placeholder","rows","submit","onExtensionTask","model","form","buttonClick","onFormButtonClick","context","data","extensionTask","_b","closePage","product","footer","ref","schema","onButtonClick","openPage","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","user","cnRowCustor","VDetailTop_right","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","itemss","VActionsBottom_VActionsBottom","VActionsBottom","showTaskComplet","showTaskExtension","showTaskInvalid","VDetailContent_VDetailContent","VDetailContent","completuiSchema","getCommonType","obj","taskCommonType","fields","selectItem","fieldName","fixWidth","find","VFinish_VFinish","VFinish","onCompletionTask","completSchema","fieldValues","finishTask","onCreateProduct","showPorductSelect","onCreateProject","showCreateProject","onCreateProjectPack","showPorductPackSelect","showTaskProductDetail","showTaskProjectDetail","onShowProject","cssLMR","requiredFlag","CType_CType","CType","icon","renderDetailValues","caption","renderDetailTop","renderDetailContent","renderDetailEdit","renderActionsBottom","renderView","renderComplet","renderCompletContent","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showComplet","showCreate","assure","VCreateCheck_VCreateCheck","VCreateCheck","onAddTask","getCTaskType","onFinishTask","createAndFinishTask","cApp","VCreate_VCreate","VCreate","onAddSalesTask","createTask","CCommonType_CCommonType","CCommonType","res","call","showCrateCheck","openVPage","internalStart","Marketing","size","radioClassName","Trial","description2","BagOrderCancel","priortya","BagOrder","NotUptoStandard","RepeatPurchase","NonReagent","Reagent","Signback","CustomerDev","NewCustomerDev","taskTypeConstuctors","reagent","nonreagent","signback","bagorder","bagordercancel","marketing","notuptostandard","repeatpurchase","trial","customerdev","customerinfodev","newcustomerdev","graduation","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ai","cCustomer","aiClick","showCreateCustomer","tasktypelist","VAi_VAi","VAi","finished","setTimeout","CSelectType_CSelectType","CSelectType","cSalesTaskBiz","start","returnTaskType","returnCall","cUqSalesTask","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","add","postPone","remove","t","lodash_default","a","clone","dateTasks","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","VCustomerHistory_VCustomerHistory","VCustomerHistory","VSelectBiz_VSelectBiz","VSelectBiz","renderItem","onClickTaskBiz","selectTaskBiz","taskType","taskBizs","CSelectBiz_CSelectBiz","CSelectBiz","taskbiz","returnTaskBiz","mapTaskBiz","getBizFromTaskTypeId","query","ret","imagePath","altimagePath","ProductImage","props","chemicalId","src","substr","altImage","VCreateProduct_schema","VCreateProduct_VCreateProduct","VCreateProduct","note","onCreateTaskProduct","createproduct","createTaskProduct","renderBrand","brand","productPropItem","productItem","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","VProductDetail_VProductDetail","VProductDetail","products","VCreateProject_schema","VCreateProject_VCreateProject","VCreateProject","onCreateTaskProject","createTaskProject","VProjectDetail_VProjectDetail","VProjectDetail","project","projects","VCreateProductPack_schema","VCreateProductPack_VCreateProductPack","VCreateProductPack","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","searchTaskByKey","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","tt","createTasks","newtask","completionTaskAction","cProduct","createProduct","productid","createTaskProductAction","qeurySearchTaskProduct","createTaskProjectPack","createTaskProjectAction","showTaskProjectPackDetail","qeurySearchTaskProject","cSelectType","customerId","typeId","bizIds","sourceID","sourceType","sourceNo","addTaskAction","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","createTaskTypes","consts","uqSalesTask","uqCustomer","uqProduct","appIcon","headerClass","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","selectCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","VCreateCustomer_schema","VCreateCustomer_VCreateCustomer","VCreateCustomer","Name","FirstName","LastName","Salutation","Gender","BirthDay","createMyCustomer","VCreateCustomerFinish_VCreateCustomerFinish","VCreateCustomerFinish","comeBack","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchMyCustomer","first","loadCustomerDetail","tuidMyCustomer","returnCustomer","par","no","firstName","lastName","gender","salutation","birthDay","actionCreateMyCustomer","querySearchCustomer","VProductList_VProductList","VProductList","renderProduct","pageProduct","more","VProductSelect_VProductSelect","VProductSelect","returnProduct","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","rowCom","iconName","iconColor","VMe_VMe","VMe","logout","showLogout","meInfo","pointer","badge","showMeDetail","showMessage","count","cMessage","get","onshowMeDetail","nick","userSpan","inviteCode","showTeam","showOrderHistory","achievemen","VMeDetail_VMeDetail","VMeDetail","onItemChanged","itemSchema","newValue","preValue","userSetProp","saveLocalUser","position","VAchievement_VAchievement","VAchievement","achievements","pack","quantity","price","radiox","radioy","unit","CMe_CMe","CMe","querySearchPosition","code","String","p1","p2","searchAchievement","searchPosition","cTeam","showAchievement","userid","querySearchAchievement","achievement","SaleVolume","searchOrderHistory","querySearchOrderHistory","clear","VStart_schema","maxLength","VStart_VStart","VStart","invitacode","onCreatePosition","createPosition","onEnter","VOK_VOK","VOK","startApp","VError_VError","VError","back","CStart_CStart","CStart","isPosition","isNaN","actionPosition","succeed","ceasePage","tuidUser","save","VTeam_VTeam","VTeam","team","showPeerDetail","children","codes","assigned","VTeamDetail_VTeamDetail","VTeamDetail","assigend","savePeerAssigned","peer","CTeam_CTeam","CTeam","searchTeam","qeurySearchTeam","Assigned","actionSavePeerAssigned","VMessage_VMessage","VMessage","rigth","message","CMessage_PageMessage","PageMessage","searchQuery","CMessage_CMessage","CMessage","box","searchNowMessage","querySearchNowMessage","messages","set","updateNowMessage","actionUpdateNowMessage","searchMessage","pageMessage","querySearchMessage","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cMe","cStart","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","calcSum","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d28004a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            biz: param.biz,\r\n            description: param.description,\r\n            remindDate: null,\r\n            deadline: param.deadline,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.showSelectTaskType();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { bizName, deadline, biz, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.getTaskIcon(bizName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <LMR className=\"\" right={<div className=\"text-muted\"><small>{tv(type, (v) => <>{v.description}</>)}</small></div>}>\r\n                <div className=\"text-muted\" ><small>{tv(biz, (v) => <>{v.description}</>)}</small></div>\r\n            </LMR>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let right = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3 py-2\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={right} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            let ss = day2.getFullYear() + \"-\" + (day2.getMonth() + 1) + \"-\" + day2.getDate();\r\n            this.setValue(ss);\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            let ss = day2.getFullYear() + \"-\" + (day2.getMonth() + 1) + \"-\" + day2.getDate();\r\n            this.setValue(ss);\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >提交</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        let right = <small className=\"text-muted\">{principal.id !== nav.user.id && <span className=\"text-muted small\"></span>}{tv(status, (v) => v.name)} </small>;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR left={<small className=\"text-muted\">{<EasyDate date={date} />} </small>}\r\n                right={<small className=\"text-muted\">{right}</small>}>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nconst cnRow = 'w-100 py-3';\r\nconst cnRowCustor = classNames(cnRow, 'cursor-pointer');\r\nconst right = <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>;\r\n\r\nexport class VDetailTop extends View<CType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, biz, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={cnRowCustor}\r\n                    left={<div className=\"mr-2 \"> <FA name=\"bookmark-o\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    <span className=\"font-weight-bold mr-3 my-3\">{tv(type, v => <>{v.description}</>)} </span>  {tv(biz, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={cnRowCustor} onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={right}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n\r\n        ];\r\n        if (deadline) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className={cnRow}\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp);\r\n        }\r\n        /** \r\n        rows.push({\r\n            type: 'component',\r\n            name: 'customer',\r\n            component: <LMR className={cnRowCustor} onClick={onShowSalesTaskHistory}\r\n                left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                right={right} />,\r\n            //label: '执行过程',\r\n        } as ComponentProp);\r\n        */\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CType> {\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            biz: task.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View, Widget, UiSelectBase } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { CCommonType } from '../commontype/CCommonType';\r\n\r\nexport class VDetailContent extends View<CType> {\r\n\r\n    render(task: Task): JSX.Element {\r\n\r\n        let model = this.controller.cSalesTask.getCommonType(task.biz.obj.name);\r\n        let { completuiSchema } = model.taskCommonType;\r\n\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n\r\n        return <div className='w-100'>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let { label, list } = completuiSchema.items[fieldName] as UiSelectBase;\r\n                let left = <div className=''><FA name='caret-right' className='small text-info' fixWidth={true} />{label || fieldName}</div>;\r\n                var selectItem: any;\r\n                if (list) {\r\n                    selectItem = list.find(v => v.value === value);\r\n                }\r\n                return <div className='row bg-white py-2' key={index}>\r\n                    <div className=\"col-4 align-self-center\">{left}</div>\r\n                    <div className=\"col-8\">{selectItem ? selectItem.title : value} </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, LMR, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\nimport classNames from 'classnames';\r\n\r\nexport class VFinish extends VPage<CCommonType> {\r\n\r\n    private task: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { completSchema } = this.controller.taskCommonType;\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n        this.task.fields = fieldValues;\r\n        await this.controller.cSalesTask.finishTask(this.task);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private onCreateProduct = async () => {\r\n        await this.controller.cSalesTask.showPorductSelect(this.task);\r\n    }\r\n\r\n    private onCreateProject = async () => {\r\n        await this.controller.cSalesTask.showCreateProject(this.task);\r\n    }\r\n\r\n    private onCreateProjectPack = async () => {\r\n        await this.controller.cSalesTask.showPorductPackSelect(this.task);\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.task = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n        let { showTaskProductDetail, showTaskProjectDetail, showPorductPackSelect } = this.controller.cSalesTask;\r\n        let onShowProduct = async () => await showTaskProductDetail(this.task);\r\n        let onShowProject = async () => await showTaskProjectDetail(this.task);\r\n\r\n        let cssLMR = \"bg-white row my-1 py-2\";\r\n        return <div className=\"mx-3\">\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProduct} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProduct} >产品列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProjectPack} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProject} >包装列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <LMR className={cssLMR} right={<div onClick={this.onCreateProject} className=\"mr-3\"><FA name=\"plus\" /></div>} >\r\n                <div className=\"w-100 ml-3\" onClick={onShowProject} >项目列表 <span className=\"fa-stack\">4</span></div>\r\n            </LMR>\r\n            <Form ref={v => this.form = v}\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >提交</button>\r\n        </div >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VFinish } from './commonType/VFinish';\r\nimport { CCommonType } from './commonType';\r\n\r\nexport abstract class CType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    //显示任务明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        task.fields = tasks.fields\r\n        this.openPage(\r\n            this.renderDetailEdit(task)\r\n        );\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VFinish, task);\r\n    }\r\n\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        await task.biz.assure();\r\n        this.openPage(<Page header={\"biz.name\"}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, LMR, Prop, ComponentProp, FA, tv, PropGrid } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\n\r\nexport class VCreateCheck extends VPage<CSalesTask> {\r\n\r\n    private task: Task\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddTask = async (model: any) => {\r\n        this.task.description = undefined;\r\n        this.task.deadline = undefined;\r\n        this.controller.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    private onFinishTask = async () => {\r\n        this.task.priorty = 0;\r\n        await this.controller.createAndFinishTask(this.task);\r\n        this.closePage();\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cApp.cSalesTask;\r\n        let { customer, type, biz } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={this.itemss}\r\n                    left={<div> <FA name=\"bookmark-o\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    <span className=\"font-weight-bold mr-3\">{tv(type, v => <>{v.description}</>)} </span>  {tv(biz, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n\r\n        ];\r\n        let footer = <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.onAddTask} >&nbsp;新建&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={this.onFinishTask} >处理</button>\r\n        </div>\r\n\r\n        let header = <div>{this.task.biz.description}&nbsp;</div>;\r\n\r\n        return <Page header={header} footer={footer} headerClassName='bg-primary'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={task} />\r\n        </Page>\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\n\r\nexport class VCreate extends VPage<CCommonType> {\r\n\r\n    private task: Task;\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { description, priorty, deadline } = context.form.data;\r\n        this.task.description = description;\r\n        this.task.priorty = priorty;\r\n        this.task.deadline = deadline;\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.task);\r\n        this.closePage(5);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CType } from '../CType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreateCheck } from '../../views/VCreateCheck';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\nimport { VCreateProduct } from '../../views/VCreateProduct';\r\n\r\nexport class CCommonType extends CType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n    //显示查询客户页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const Marketing: TaskCommonType = {\r\n    caption: '组合营销',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Trial: TaskCommonType = {\r\n    caption: '产品试用',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const BagOrderCancel: TaskCommonType = {\r\n    caption: '大额订单取消',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '拜访结果', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const BagOrder: TaskCommonType = {\r\n    caption: '大额订单跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '会展评价', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const NotUptoStandard: TaskCommonType = {\r\n    caption: '客户计划未达标',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const RepeatPurchase: TaskCommonType = {\r\n    caption: '单一产品重复采购',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA, toUiSelectItems } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: {\r\n                widget: 'radio', label: '重要性', defaultValue: 0,\r\n                list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: toUiSelectItems(['1:有机化学', '2:生物', '3:甲醇', '4:无机']),\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            priorty: {\r\n                widget: 'radio', label: '状态', defaultValue: 1,\r\n                list: [\r\n                    { value: 1, title: '有效' },\r\n                    { value: 0, title: '无效' }\r\n                ]\r\n            } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Signback: TaskCommonType = {\r\n    caption: '订单催签返',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const CustomerDev: TaskCommonType = {\r\n    caption: '客服开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NewCustomerDev: TaskCommonType = {\r\n    caption: '新客服开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","export * from './CType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CType } from './CType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CCommonType } from './commonType/CCommonType';\r\nimport { Marketing, Trial, NonReagent, Reagent, BagOrderCancel, BagOrder, Signback, NotUptoStandard, RepeatPurchase, CustomerDev, CustomerInfoDev, NewCustomerDev, Graduation } from './templets';\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    reagent: Reagent,\r\n    nonreagent: NonReagent,\r\n    signback: Signback,\r\n\r\n    bagorder: BagOrder,\r\n    bagordercancel: BagOrderCancel,\r\n    marketing: Marketing,\r\n    notuptostandard: NotUptoStandard,\r\n    repeatpurchase: RepeatPurchase,\r\n    trial: Trial,\r\n\r\n    customerdev: CustomerDev,\r\n    customerinfodev: CustomerInfoDev,\r\n    newcustomerdev: NewCustomerDev,\r\n    graduation: Graduation,\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const CustomerInfoDev: TaskCommonType = {\r\n    caption: '客服信息开发',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Graduation: TaskCommonType = {\r\n    caption: '毕业清洗',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { async } from 'q';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.getTaskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{description}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        let { cCustomer } = this.controller.cSalesTask.cApp;\r\n        let onshowCreateCustomer = async () => await cCustomer.showCreateCustomer();\r\n\r\n        return <div>\r\n            <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n                onClick={this.controller.aiClick}>\r\n                <div className=\"font-weight-bold\">帮我找找机会</div>\r\n            </LMR>\r\n            <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"vcard\" size=\"lg\" fixWidth={true} />}\r\n                onClick={onshowCreateCustomer}>\r\n                <div className=\"font-weight-bold\">新建客户</div>\r\n            </LMR>\r\n        </div>\r\n    }\r\n\r\n    private page = ((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无任务类型！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: Tuid;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    private task: Task;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: any) => {\r\n        this.task = {\r\n            id: null,\r\n            type: type,\r\n            biz: null,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: null\r\n        }\r\n        this.cSalesTask.cSalesTaskBiz.start(this.task)\r\n    }\r\n\r\n    returnTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '原因', placeholder: '请输入取消原因！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >提交</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav, BoxId } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, biz, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> </small></div>\r\n                <LMR right={<small>  {tv(status, (v) => v.name)}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.description || '#'))}</small>}\r\n                    left={<small>{tv(task, (v) => tv(v.biz, (vs) => vs.description || '#'))}</small>}>\r\n                </LMR>\r\n\r\n            </LMR>\r\n\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        this.controller.showDetailFromId(param.task.obj);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    private tasks: any;\r\n    async open(tasks: any) {\r\n        if (tasks.length > 0) {\r\n            this.tasks = tasks;\r\n        }\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR className='small' left={<small className=\"text-muted\"><EasyDate date={date} /></small>}\r\n                right={<small>{tv(status, (v) => v.name)}</small>}>\r\n            </LMR>\r\n            <LMR left={<small>{tv(task, v => tv(v.biz, vs => vs.description))}</small>}\r\n                right={<small>{tv(task, v => tv(v.type, vs => vs.description))}</small>}></LMR>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        this.controller.showTaskDetailEdit(param.task.obj);\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={this.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, LMR, List, FA, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectBiz } from './CSelectBiz';\r\n\r\nexport class VSelectBiz extends VPage<CSelectBiz> {\r\n\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderItem = (model: any, index: number) => {\r\n        let { biz, type } = model;\r\n        let left = <div className='text-info mr-3' >{tv(type, (obj) => this.controller.cSalesTask.getTaskIcon(biz.obj.name))}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{tv(biz, obj => obj.description)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskBiz = async (model: any) => {\r\n        await this.controller.selectTaskBiz(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private page = () => {\r\n        let { taskType, taskBizs } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">正在筹备中</div>;\r\n        return <Page header={taskType.description || taskType.name} headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={taskBizs} item={{ render: this.renderItem, onClick: this.onClickTaskBiz }} />\r\n        </Page>\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Tuid, Controller, Map } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectBiz extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private mapTaskBiz: Map;\r\n    taskBizs: any[];\r\n    taskType: TaskType;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.mapTaskBiz = cUqSalesTask.map('taskbiz');\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.task = task;\r\n        this.taskType = task.type;\r\n        await this.getBizFromTaskTypeId(this.taskType);\r\n        this.openVPage(VSelectBiz);\r\n    }\r\n\r\n    //搜索任务类型\r\n    private async getBizFromTaskTypeId(taskType: TaskType) {\r\n        let ret = await this.mapTaskBiz.query({ type: taskType });\r\n        this.taskBizs = ret.ret;\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskBiz = async (taskbiz: any) => {\r\n        this.task.biz = taskbiz.biz.obj;\r\n        this.cSalesTask.cApp.cCustomer.start(this.task)\r\n    }\r\n\r\n    //返回添加任务页面\r\n    returnTaskBiz = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProduct extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private createproduct: CreateProduct\r\n    async open(param: CreateProduct) {\r\n        this.createproduct = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n\r\n    private onCreateTaskProduct = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        this.createproduct.note = context.data.note;\r\n        await this.controller.createTaskProduct(this.createproduct);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n\r\n    private productItem = (param: CreateProduct) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加产品\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                {this.productItem(param)}\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProduct} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, Schema, tv, List } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VProductDetail extends VPage<CSalesTask> {\r\n    private products: any[];\r\n\r\n    async open(param: any) {\r\n\r\n        this.products = param;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return this.render();\r\n    });\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderItem = (param: any, index: number) => {\r\n        //param.product.assure();\r\n        //let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product.obj;\r\n        return tv(param.product, (product) => {\r\n            let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n            return <div className=\"d-block mb-4 px-2\">\r\n                <div className=\"py-2\">\r\n                    <div><strong>{description}</strong></div>\r\n                    <div>{descriptionC}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div className=\"row\">\r\n                            {this.productPropItem('CAS', CAS)}\r\n                            {this.productPropItem('纯度', purity)}\r\n                            {this.productPropItem('分子式', molecularFomula)}\r\n                            {this.productPropItem('分子量', molecularWeight)}\r\n                            {this.productPropItem('产品编号', origin)}\r\n                            {tv(brand, this.renderBrand)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无产品</div>;\r\n        return <Page header=\"产品详情\" headerClassName='bg-primary'>\r\n            <div>\r\n                <List before=\"\" none={none} items={this.products} item={{ render: this.renderItem }} />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct, Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProject extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private task: Task;\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCreateTaskProject = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.createTaskProject(this.task, context.data.note);\r\n        this.closePage();\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加项目\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProject} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page, List, tv } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\n\r\nexport class VProjectDetail extends VPage<CSalesTask> {\r\n\r\n    private projects: any;\r\n\r\n    async open(projects: any) {\r\n        this.projects = projects;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return this.render();\r\n    });\r\n\r\n    private renderItem = (param: any, index: number) => {\r\n        return tv(param.project, (project) => {\r\n            let { name } = project;\r\n            return <div className=\"px-3\" >{name}</div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无项目</div>;\r\n        return <Page header=\"项目详情\" headerClassName=\"bg-primary py-1\">\r\n            < List before={''} none={none} items={this.projects} item={{ render: this.renderItem }} />\r\n        </Page >\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Schema, Form, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CreateProduct } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nconst schema: Schema = [\r\n    { name: 'note', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateProductPack extends VPage<CSalesTask> {\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            note: { widget: 'textarea', label: '备注', placeholder: '' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    private form: Form;\r\n    private createproduct: CreateProduct\r\n    async open(param: CreateProduct) {\r\n        this.createproduct = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n\r\n    private onCreateTaskProduct = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        this.createproduct.note = context.data.note;\r\n        await this.controller.createTaskProduct(this.createproduct);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n\r\n    private productItem = (param: CreateProduct) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = param.product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(param: CreateProduct) {\r\n        return <Page header=\"添加产品包装\" footer={null} headerClassName='bg-primary'>\r\n            <div className=\"mx-3\">\r\n                {this.productItem(param)}\r\n                <Form ref={v => this.form = v}\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreateTaskProduct} >添加</button>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, Tuid, Action, FA } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CType, createTaskTypes } from 'salestask/types/createTypes';\r\nimport { CSelectType } from './type';\r\nimport { Task, TaskField, TaskType, BizType, CreateProduct } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\nimport { CSelectBiz } from './type/CSelectBiz';\r\nimport { VCreateCheck } from './views/VCreateCheck';\r\nimport { VCreateProduct } from './views/VCreateProduct';\r\nimport { async } from 'q';\r\nimport { VProductDetail } from './views/VProductDetail';\r\nimport { CCommonType } from './types/commonType';\r\nimport { VCreateProject } from './views/VCreateProject';\r\nimport { VProjectDetail } from './views/VProjectDetail';\r\nimport { VCreateProductPack } from './views/VCreateProductPack';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSelectType: CSelectType;\r\n    cSalesTaskBiz: CSelectBiz;\r\n\r\n    private taskTypes: { [type: string]: CType } = {};\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    protected createTaskProductAction: Action;\r\n    protected createTaskProjectAction: Action;\r\n    private taskTuid: Tuid;\r\n    private tuidCustomer: Tuid;\r\n    private taskTypeTuid: Tuid;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n    private qeurySearchTaskProduct: Query;\r\n    private qeurySearchTaskProject: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n        this.cSelectType = new CSelectType(this, undefined);\r\n        this.cSalesTaskBiz = new CSelectBiz(this, undefined);\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n        this.createTaskProductAction = cUqSalesTask.action('CreateTaskProduct');\r\n        this.createTaskProjectAction = cUqSalesTask.action('CreateTaskProject');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n        this.qeurySearchTaskProduct = cUqSalesTask.query(\"SearchTaskProduct\");\r\n        this.qeurySearchTaskProject = cUqSalesTask.query(\"SearchTaskProject\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchTaskByKey(param);\r\n    }\r\n\r\n    //搜索开始------------------------------------------------\r\n    //搜索所有未处理任务\r\n    searchTaskByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n    //搜索单个任务\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理结果的记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, tasks);\r\n    }\r\n    //获取类型的图表\r\n    getTaskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            if (typeName == 'phone') {\r\n                return <FA name='fax' size=\"lg\" fixWidth={true} />;\r\n            } else {\r\n                return <FA name='car' size=\"lg\" fixWidth={true} />;\r\n            }\r\n        }\r\n        return tt.icon;\r\n    }\r\n    //获取任务类型\r\n    getCTaskType(typeName: string): CType {\r\n        return this.taskTypes[typeName];\r\n    }\r\n    //获取任务类型\r\n    getCommonType(bizName: string): CCommonType {\r\n        let model = this.getCTaskType(bizName);\r\n        return model as CCommonType;\r\n    }\r\n    //搜索结束------------------------------------------------\r\n\r\n\r\n    //显示开始------------------------------------------------\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        let tt = this.getCTaskType(task.biz.obj.name);\r\n        if (tt !== undefined) tt.showDetailEdit(task);\r\n    }\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.biz.obj.name).showDetailFromId(task.id);\r\n    }\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        let name = task.biz.obj ? task.biz.obj.name : task.biz.name;\r\n        this.getCTaskType(name).showComplet(task);\r\n    }\r\n    //显示结束------------------------------------------------\r\n\r\n\r\n    //处理任务开始------------------------------------------------\r\n    //完结任务\r\n    async finishTask(task: Task) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: task.fields\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n    }\r\n\r\n    //添加并完结任务\r\n    createAndFinishTask = async (task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.showTaskComplet(newtask);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n\r\n    //显示选择产品页面\r\n    showPorductSelect = async (task: Task) => {\r\n        let { cProduct } = this.cApp;\r\n        let product = await cProduct.call();\r\n\r\n        let createproduct = {\r\n            task: task,\r\n            product: product,\r\n            note: null\r\n        }\r\n        this.openVPage(VCreateProduct, createproduct);\r\n    }\r\n\r\n    //添加产品\r\n    createTaskProduct = async (createProduct: CreateProduct) => {\r\n        let { product, task, note } = createProduct;\r\n        note = note ? note : undefined;\r\n        let param = { taskid: task.id, productid: product.productid, note: note };\r\n        this.createTaskProductAction.submit(param);\r\n    }\r\n\r\n    //显示产品列表\r\n    showTaskProductDetail = async (task: Task) => {\r\n        let products = await this.qeurySearchTaskProduct.table({ taskid: task.id });\r\n        /*\r\n        products.map((v, index) => {\r\n            await v.product.assure();\r\n            let aa = v.product;\r\n            let aaa = 1;\r\n        })*/\r\n        await this.openVPage(VProductDetail, products);\r\n    }\r\n\r\n    //添加包装-显示\r\n    showPorductPackSelect = async (task: Task) => {\r\n        let { cProduct } = this.cApp;\r\n        let product = await cProduct.call();\r\n\r\n        let createproduct = {\r\n            task: task,\r\n            product: product,\r\n            note: null\r\n        }\r\n        this.openVPage(VCreateProductPack, createproduct);\r\n    }\r\n\r\n\r\n    //添加包装\r\n    createTaskProjectPack = async (task: Task, note: string) => {\r\n        let param = { taskid: task.id, note: note };\r\n        await this.createTaskProjectAction.submit(param);\r\n    }\r\n\r\n    //显示包装列表\r\n    showTaskProjectPackDetail = async (task: Task) => {\r\n        let projects = await this.qeurySearchTaskProject.table({ taskid: task.id });\r\n        this.openVPage(VProjectDetail, projects);\r\n    }\r\n\r\n\r\n    //添加项目-显示\r\n    showCreateProject = async (task: Task) => {\r\n        this.openVPage(VCreateProject, task);\r\n    }\r\n\r\n    //添加项目\r\n    createTaskProject = async (task: Task, note: string) => {\r\n        let param = { taskid: task.id, note: note };\r\n        await this.createTaskProjectAction.submit(param);\r\n    }\r\n\r\n    //显示项目列表\r\n    showTaskProjectDetail = async (task: Task) => {\r\n        let projects = await this.qeurySearchTaskProject.table({ taskid: task.id });\r\n        this.openVPage(VProjectDetail, projects);\r\n    }\r\n\r\n    //处理任务结束------------------------------------------------\r\n\r\n\r\n    //添加任务开始------------------------------------------------\r\n    //显示任务类页面\r\n    showSelectTaskType = async () => {\r\n        //return await this.cSalesTaskType.call();\r\n        await this.cSelectType.start();\r\n    }\r\n    //显示选择处理方式的页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n    //添加任务\r\n    createTask = async (param: any, task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.searchTaskByKey('');\r\n    }\r\n\r\n    private createTasks = async (task: Task) => {\r\n        let { customer, type, biz, description, priorty, deadline } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        let bizIds = biz.id;\r\n        priorty = priorty ? 1 : 0;\r\n        deadline = deadline ? deadline : undefined;\r\n        description = description ? description : undefined;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, biz: bizIds, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        task.id = ret.id;\r\n        return task;\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n\r\n    }\r\n    //添加任务结束------------------------------------------------\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n\r\n\r\n    headerClass: 'bg-primary py-1',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n        let { name } = salesTask;\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n        await this.controller.selectCustomer(model);\r\n        //this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer, showCreateCustomer } = this.controller;\r\n        let onshowCreateCustomer = async () => await showCreateCustomer();\r\n\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        let right = <div onClick={onshowCreateCustomer} className=\"cursor-pointer px-3 py-2\"><FA name=\"plus\" /></div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary' right={right}>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, LMR, List, SearchBox, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { async } from 'q';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n        let { name } = salesTask;\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer, showCreateCustomer } = this.controller;\r\n\r\n        let onshowCreateCustomer = async () => await showCreateCustomer();\r\n\r\n        let right = <div onClick={onshowCreateCustomer} className=\"cursor-pointer py-2\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未找到客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' right={right} >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, UiSchema, UiInputItem, UiCheckItem, Context, UiRadio, toUiSelectItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { consts } from 'consts';\r\n\r\n\r\n\r\nconst schema: Schema = [\r\n    { name: 'Name', type: 'string', required: true },\r\n    { name: 'FirstName', type: 'string', required: false },\r\n    { name: 'LastName', type: 'string', required: false },\r\n    { name: 'Salutation', type: 'string', required: false },\r\n    { name: 'Gender', type: 'number', required: true },\r\n    { name: 'BirthDay', type: 'date', required: false },\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreateCustomer extends VPage<CCustomer> {\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            Name: { widget: 'text', label: 'Name', placeholder: ' ' } as UiInputItem,\r\n            FirstName: { widget: 'text', label: 'FirstName', placeholder: ' ' } as UiInputItem,\r\n            LastName: { widget: 'text', label: 'LastName', placeholder: ' ' } as UiInputItem,\r\n            Salutation: { widget: 'text', label: '称谓', placeholder: ' ' } as UiInputItem,\r\n            Gender: {\r\n                widget: 'radio', label: '性别', placeholder: '性别',\r\n                defaultValue: 1,\r\n                list: toUiSelectItems(['1:男', '2:女']),\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            BirthDay: { widget: 'date', label: '生日', placeholder: ' ' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(param: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.createMyCustomer(context.data);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return <Page header=\"新建客户\" headerClassName={consts.headerClass} >\r\n            <Form ref={v => this.form = v} className=\"my-3 mx-3\"\r\n                schema={schema}\r\n                uiSchema={this.uiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\n\r\nexport class VCreateCustomerFinish extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    comeBack = () => {\r\n        this.closePage(2);\r\n    }\r\n    private page = observer((customer: any) => {\r\n        return <Page header='新建客户' headerClassName='bg-primary py-1 px-3'>\r\n            <div className=\"w-100 text-center m-3 text-muted\">\r\n                客户添加成功，请在客户搜索页面查看详情！\r\n            </div>\r\n            <div className=\"w-100 text-center\">\r\n                <label className=\"text-success\" onClick={this.comeBack}> 返回</label>\r\n            </div>\r\n\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\nimport { Task } from 'salestask/model';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\nimport { VCreateCustomer } from './VCreateCustomer';\r\nimport { async } from 'q';\r\nimport { VCreateCustomerFinish } from './VCreateCustomerFinish';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: Tuid;\r\n    private querySearchCustomer: Query;\r\n    private task: Task;\r\n\r\n    private tuidMyCustomer: Tuid;\r\n    private querySearchMyCustomer: Query;\r\n    private actionCreateMyCustomer: Action;\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer, cUqSalesTask } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n\r\n        this.tuidMyCustomer = cUqSalesTask.tuid(\"mycustomer\");\r\n        this.querySearchMyCustomer = cUqSalesTask.query(\"searchmycustomer\");\r\n        this.actionCreateMyCustomer = cUqSalesTask.action(\"CreateMyCustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.pageCustomer = null;\r\n        this.task = task;\r\n        this.openVPage(VCustomerSelect);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchMyCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidMyCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.task.customer = customer;\r\n        this.cApp.cSalesTask.showCrateCheck(this.task);\r\n        //this.cApp.cSalesTask.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    //显示新建客户页面\r\n    showCreateCustomer = () => {\r\n        //this.openVPage(VCreateCustomerFinish);\r\n        this.openVPage(VCreateCustomer);\r\n    }\r\n\r\n    //新建客户\r\n    createMyCustomer = async (param: any) => {\r\n        let par = {\r\n            no: param.BirthDay + param.Name,\r\n            name: param.Name,\r\n            firstName: param.FirstName,\r\n            lastName: param.LastName,\r\n            gender: param.Gender,\r\n            salutation: param.Salutation,\r\n            birthDay: param.BirthDay\r\n        }\r\n        await this.actionCreateMyCustomer.submit(par);\r\n        this.openVPage(VCreateCustomerFinish);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductSelect extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct, returnProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='添加产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: returnProduct }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, Tuid, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\nimport { VProductSelect } from './VProductSelect';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageProduct = null;\r\n        this.openVPage(VProductSelect, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        await this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnProduct = async (product: any): Promise<any> => {\r\n        this.returnCall(product);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, VPage, nav, Image, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport classNames from 'classnames';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, value: any, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-2 my-2 align-items-center  \" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={<div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div>}>\r\n        {caption}<span className=\" ml-3\">{value}</span>\r\n    </LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n    private user: any;\r\n    private inviteCode: any;\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        let { user, inviteCode } = this.controller;\r\n        this.user = user;\r\n        this.inviteCode = inviteCode;\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n\r\n    private userSpan(name: string, nick: string): JSX.Element {\r\n        return nick ?\r\n            <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n            : <b>{name}</b>\r\n    }\r\n\r\n    private meInfo = observer(() => {\r\n        let { showMeDetail, showMessage } = this.controller;\r\n        let { cMessage } = this.controller.cApp\r\n        let count: any = cMessage.count.get();\r\n        let onshowMeDetail = async () => await showMeDetail();\r\n        let onshowMessage = async () => await showMessage();\r\n        let { id, name, nick, icon } = this.user;\r\n        let pointer, badge;\r\n        if (count > 0) {\r\n            pointer = 'cursor-pointer';\r\n            if (count < 100) badge = <u>{count}</u>;\r\n            else badge = <u>99+</u>;\r\n        }\r\n\r\n        return <LMR className=\"py-3 mt-4 cursor-pointer w-100\"\r\n            left={<div onClick={onshowMeDetail}> <Image className=\"w-3c h-3c mr-3\" src={icon} /> </div>}\r\n            right={<div className={classNames('jk-cart ml-1 mr-2', pointer)} onClick={onshowMessage} >\r\n                <div>\r\n                    <FA className=\"text-primary fa-2x\" name=\"envelope-o\" />\r\n                    {badge}\r\n                </div>\r\n            </div>}>\r\n            <div onClick={onshowMeDetail}>\r\n                <div>{this.userSpan(name, nick)}</div>\r\n                <div className=\"small\"><span className=\"text-muted\">邀请码:</span> {this.inviteCode}</div>\r\n            </div>\r\n        </LMR>;\r\n    });\r\n\r\n    private page = observer(() => {\r\n        let { cSalesTask, cMessage } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let { showTeam, showOrderHistory, achievemen } = this.controller;\r\n\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n        let onshowTeam = async () => await showTeam();\r\n        let onshowOrderHistory = async () => await showOrderHistory(this.user.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                component: <this.meInfo />\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('tag', 'text-info', '已完成任务', undefined, onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('line-chart', 'text-danger', '个人业绩', achievemen + \" ￥\", onshowOrderHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                component: rowCom('sitemap', 'text-info', '我的团队', undefined, onshowTeam),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let footer = <button type=\"button\" className=\"btn btn-danger flex-grow-1 mx-3 my-1\" onClick={this.logout} ><FA name=\"sign-out\" size=\"lg\" /> 退出</button>;\r\n        return <div>\r\n            <PropGrid className=\"\" rows={rows} values={null} alignValue=\"right\" />\r\n            <div className=\"mt-3 d-flex\">{footer}</div>\r\n        </div>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, ImageSchema, StringSchema, UiSchema, UiTextItem, UiImageItem, Edit, nav, userApi, LMR, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VMeDetail extends VPage<CMe> {\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'icon', type: 'image' } as ImageSchema,\r\n        { name: 'nick', type: 'string' } as StringSchema,\r\n    ];\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            icon: { widget: 'image', label: '头像' } as UiImageItem,\r\n            nick: { widget: 'text', label: '昵称', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n        }\r\n    }\r\n\r\n    @observable private data: any;\r\n    async open(position: any) {\r\n        let { nick, icon } = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        };\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    private page = () => {\r\n        return <Page header='个人信息' headerClassName='bg-primary py-1' >\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged}\r\n            />\r\n            <LMR className=\"d-flex px-3 py-2 bg-white align-items-center cursor-pointer\"\r\n                right={this.controller.inviteCode}>\r\n                邀请码\r\n            </LMR>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, StringSchema, UiSchema, UiTextItem, Edit, LMR, List, EasyDate, tv } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { consts } from 'consts';\r\nimport { CMe } from './CMe';\r\n\r\nexport class VAchievement extends VPage<CMe> {\r\n\r\n    private achievements: any;\r\n    async open(param: any) {\r\n        this.achievements = param;\r\n        this.openPage(this.page, param);\r\n    }\r\n\r\n    private renderItem(model: any, index: number) {\r\n        let { date, customer, product, pack, quantity, price } = model;\r\n        let left = <small className=\"text-muted\"><EasyDate date={date} /><span className=\"ml-3\">{tv(customer, v => v.name)}</span></small>;\r\n        let right = <small className=\"text-muted\"><div className=\"px-3\">  {quantity} * {price}￥</div></small>;\r\n        return <div className=\"d-block\">\r\n            <div>\r\n                <LMR className=\"px-3 py-2 \" left={left} right={right}></LMR>\r\n            </div>\r\n            <div>\r\n                {tv(product, v => <div className=\"px-3 py-2 \"><div>{v.description}</div> <div>{v.descriptionC}</div></div>)}\r\n                {tv(pack, v => <div className=\"px-3 py-2 \"><div>{v.radiox} * {v.radioy} {v.unit}</div></div>)}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无记录</div>;\r\n        return <Page header=\"业绩\" headerClassName={consts.headerClass}>\r\n            <List none={none} items={this.achievements} item={{ render: this.renderItem, onClick: null }} />\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav, loadAppUqs } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\nimport { VTeam } from './VTeam';\r\nimport { async } from 'q';\r\nimport { VMeDetail } from './VMeDetail';\r\nimport { VTeamDetail } from './VTeamDetail';\r\nimport { VAchievement } from './VAchievement';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    inviteCode: string;\r\n    position: any;\r\n    achievemen: number;\r\n\r\n    private querySearchPosition: Query;\r\n    private querySearchAchievement: Query;\r\n    private querySearchOrderHistory: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask } = this.cApp;\r\n        this.querySearchPosition = cUqSalesTask.query(\"searchposition\");\r\n        this.querySearchAchievement = cUqSalesTask.query(\"SearchAchievement\");\r\n        this.querySearchOrderHistory = cUqSalesTask.query(\"SearchOrderHistory\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.load();\r\n        nav.clear();\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    //加载邀请码\r\n    load = async () => {\r\n        this.position = await this.querySearchPosition.table({});\r\n        let code = String(this.position[0].code + 100000000);\r\n        let p1 = code.substr(1, 4);\r\n        let p2 = code.substr(5);\r\n        this.inviteCode = p1 + ' ' + p2;\r\n        await this.searchAchievement(this.user.id);\r\n    }\r\n\r\n    //显示我的个人信息\r\n    showMeDetail = async () => {\r\n        this.openVPage(VMeDetail)\r\n    }\r\n\r\n    //搜索我的邀请码\r\n    searchPosition = async () => {\r\n        let position = await this.querySearchPosition.table({});\r\n        return position;\r\n    }\r\n\r\n    //显示我的团队\r\n    showTeam = async () => {\r\n        let { cTeam } = this.cApp\r\n        await cTeam.start();\r\n    }\r\n\r\n    //显示业绩\r\n    showAchievement = async (param: any) => {\r\n        this.openVPage(VAchievement, param);\r\n    }\r\n\r\n    //搜索业绩\r\n    searchAchievement = async (userid: number) => {\r\n        let param = { user: userid };\r\n        let achievement = await this.querySearchAchievement.table(param);\r\n        if (achievement.length > 0) {\r\n            this.achievemen = achievement[0].SaleVolume\r\n        }\r\n    }\r\n\r\n    //显示订单历史记录\r\n    showOrderHistory = async (userid: number) => {\r\n        let list = await this.searchOrderHistory(userid);\r\n        this.openVPage(VAchievement, list);\r\n    }\r\n\r\n    //订单记录\r\n    searchOrderHistory = async (userid: number) => {\r\n        let param = { user: 47 };\r\n        let list = await this.querySearchOrderHistory.table(param);\r\n        return list;\r\n    }\r\n    //显示消息\r\n    showMessage = async () => {\r\n        await this.cApp.cMessage.start();\r\n    }\r\n\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Schema, Context, StringSchema } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CStart } from './CStart';\r\nimport { consts } from 'consts';\r\n\r\n\r\nconst schema: Schema = [\r\n    { name: 'invitacode', type: 'string', required: true, maxLength: 8 } as StringSchema,\r\n    { name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VStart extends VPage<CStart> {\r\n\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            invitacode: { widget: 'text', label: '邀请码', placeholder: '请输入邀请码' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', className: 'btn btn-primary w-8c' },\r\n        }\r\n    }\r\n\r\n    async open(position: any) {\r\n\r\n        this.openPage(this.page, position);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onCreatePosition = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.createPosition(context.form.data);\r\n\r\n    }\r\n\r\n    private onEnter = async (name: string, context: Context): Promise<any> => {\r\n        if (name === 'invitacode') {\r\n            await this.onCreatePosition();\r\n        }\r\n    }\r\n\r\n    private page = observer((position: any) => {\r\n        //let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCreatePosition}>保存</button>;\r\n        return <Page header='轻代理' headerClassName={consts.headerClass}>\r\n            <Form ref={v => this.form = v} className=\"m-3\"\r\n                schema={schema}\r\n                uiSchema={this.uiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n                onEnter={this.onEnter}\r\n            />\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { CStart } from './CStart';\r\nimport { VPage, Page, FA } from 'tonva';\r\nimport { consts } from 'consts';\r\n\r\nexport class VOK extends VPage<CStart> {\r\n    async open(position: any) {\r\n\r\n        this.openPage(this.page, position);\r\n    }\r\n\r\n    private page = (position: any) => {\r\n        return <Page header=\"通过\" headerClassName={consts.headerClass}>\r\n            <div className=\"p-5 text-center\">\r\n                <p className=\"text-primary mb-5\">欢迎加入轻代理体系。 &nbsp; <FA name=\"hand-peace-o\" size=\"2x\" className=\"text-danger\" /></p>\r\n                <button className=\"btn btn-outline-primary w-6c\" onClick={this.controller.startApp}>开始体验</button>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CStart } from './CStart';\r\nimport { VPage, Page, FA } from 'tonva';\r\nimport { consts } from 'consts';\r\n\r\nexport class VError extends VPage<CStart> {\r\n    async open(position: any) {\r\n        await this.openPage(this.page, position);\r\n    }\r\n\r\n    private page = (position: any) => {\r\n        return <Page header=\"无法通过\" back=\"none\" headerClassName={consts.headerClass}>\r\n            <div className=\"p-5 text-center\">\r\n                <p className=\"text-primary mb-5\">\r\n                    <FA name=\"minus-circle\" size=\"2x\" className=\"text-danger\" />\r\n                    <br /><br />\r\n                    无效的邀请码</p>\r\n                <button className=\"btn btn-outline-primary w-6c\" onClick={this.controller.startApp}>返回</button>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VStart } from './VStart';\r\nimport { VOK } from './VOK';\r\nimport { VError } from './VError';\r\nimport { isNumber } from 'util';\r\n\r\n\r\n/**\r\n *\r\n */\r\nexport class CStart extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n\r\n    private tuidUser: Tuid;\r\n    private querySearchPosition: Query;\r\n    private actionPosition: Action;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, } = this.cApp;\r\n        this.tuidUser = cUqSalesTask.tuid(\"$user\")\r\n        this.querySearchPosition = cUqSalesTask.query(\"searchposition\");\r\n        this.actionPosition = cUqSalesTask.action(\"CreatePosition\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        // await this.openVPage(VPositionOK);\r\n        // return;\r\n        var isPosition: Boolean;\r\n        isPosition = await this.isPosition();\r\n        if (!isPosition) {\r\n            nav.clear();\r\n            await this.openVPage(VStart, param);\r\n        }\r\n        else {\r\n            await this.cApp.cSalesTask.start();\r\n        }\r\n    }\r\n\r\n    //判断是否有邀请码\r\n    isPosition = async () => {\r\n        let position = await this.searchPosition();\r\n        if (position && position.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //搜索识别码\r\n    searchPosition = async () => {\r\n        let position = await this.querySearchPosition.table({});\r\n        return position;\r\n    }\r\n\r\n    startApp = async () => {\r\n        await this.cApp.start();\r\n    }\r\n\r\n    //新建识别码\r\n    createPosition = async (param: any) => {\r\n        let { invitacode } = param;\r\n        if (isNaN(invitacode) === true) {\r\n            await this.openVPage(VError);\r\n            return;\r\n        }\r\n        let position = await this.actionPosition.submit({ invitacode: invitacode });\r\n        let { succeed } = position;\r\n        this.ceasePage();\r\n        if (succeed === 1) {\r\n            await this.tuidUser.save(this.user.id, this.user);\r\n            await this.openVPage(VOK, position);\r\n        } else if (succeed === -1) {\r\n            await this.openVPage(VError, position);\r\n        }\r\n        return position;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, List, LMR, tv, FA } from 'tonva';\r\nimport { CMe } from './CMe';\r\nimport { CTeam } from './CTeam';\r\n\r\nexport class VTeam extends VPage<CTeam> {\r\n\r\n    private team: any;\r\n    async open(team: any) {\r\n        this.team = team;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private userSpan(name: any, nick: string): JSX.Element {\r\n        return nick ?\r\n            <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n            : <b>{name}</b>\r\n    }\r\n\r\n\r\n    private renderItem = (team: any, index: number) => {\r\n\r\n        let { showPeerDetail } = this.controller;\r\n        let onshowPeerDetail = async () => await showPeerDetail(team);\r\n\r\n        let { children } = team;\r\n        let codes = tv(children, v => v.name);\r\n        return <LMR className=\"px-3 py-2 \" onClick={onshowPeerDetail}\r\n            left={<FA name='user' className=' my-2 mr-3 text-info' />}\r\n            right={<div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div>}>\r\n            <div className=\"font-weight-bold \">{this.userSpan(codes, team.assigned)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = () => {\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无团队</div>;\r\n        return <Page header='我的团队' headerClassName='bg-primary py-1' >\r\n            <List before={''} none={none} items={this.team} item={{ render: this.renderItem }} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, ItemSchema, StringSchema, UiSchema, UiTextItem, Edit, LMR } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { consts } from 'consts';\r\nimport { CTeam } from './CTeam';\r\n\r\nexport class VTeamDetail extends VPage<CTeam> {\r\n\r\n    private schema: ItemSchema[] = [\r\n        { name: 'assigend', type: 'string' } as StringSchema,\r\n    ];\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            assigend: { widget: 'text', label: '昵称', placeholder: '好的别名更方便记忆' } as UiTextItem,\r\n        }\r\n    }\r\n\r\n    @observable private data: any;\r\n    private peer: any;\r\n    async open(param: any) {\r\n        let { assigned, children } = param;\r\n        this.peer = children;\r\n        this.data = {\r\n            assigend: assigned,\r\n        };\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema: ItemSchema, newValue: any, preValue: any) => {\r\n        let { name } = itemSchema;\r\n        await this.controller.savePeerAssigned(this.peer, newValue);\r\n        this.data[name] = newValue;\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"粉丝信息\" headerClassName={consts.headerClass}>\r\n            <Edit\r\n                schema={this.schema}\r\n                uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n            <LMR className=\" bg-white pl-3 py-2\"\r\n                left={<div><span>销量</span></div>}>\r\n                <div className=\" w-100 pl-3\">1000000</div>\r\n            </LMR>\r\n        </Page>\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Map, Tuid, Action, nav, loadAppUqs } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\nimport { VTeam } from './VTeam';\r\nimport { async } from 'q';\r\nimport { VMeDetail } from './VMeDetail';\r\nimport { VTeamDetail } from './VTeamDetail';\r\n\r\n/**\r\n *\r\n */\r\nexport class CTeam extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n\r\n    private qeurySearchTeam: Query;\r\n    private actionSavePeerAssigned: Action;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask } = this.cApp;\r\n        this.qeurySearchTeam = cUqSalesTask.query(\"searchteam\");\r\n        this.actionSavePeerAssigned = cUqSalesTask.action(\"savePeerassigned\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart() {\r\n        let team = await this.searchTeam();\r\n        this.openVPage(VTeam, team);\r\n    }\r\n\r\n    //搜索我的团队\r\n    searchTeam = async () => {\r\n        let team = await this.qeurySearchTeam.table({});\r\n        return team;\r\n    }\r\n\r\n    //显示粉丝信息\r\n    showPeerDetail = async (team: any) => {\r\n        this.openVPage(VTeamDetail, team);\r\n    }\r\n\r\n    //保存粉丝自定义信息\r\n    savePeerAssigned = async (peer: any, newValue: any) => {\r\n        let param = { peer: peer.id, Assigned: newValue };\r\n        this.actionSavePeerAssigned.submit(param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, List, LMR, tv, FA, EasyDate } from 'tonva';\r\nimport { CMessage } from './CMessage';\r\n\r\nexport class VMessage extends VPage<CMessage> {\r\n\r\n    private message: any;\r\n    async open(message: any) {\r\n        this.message = message;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderItem = (model: any, index: number) => {\r\n        let { date, note, peer } = model;\r\n        let left = <small className=\"text-muted\"><EasyDate date={date} /></small>;\r\n        let rigth = <small className=\"text-muted\">{tv(peer, v => v.name)}</small>;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR left={left} right={rigth}></LMR>\r\n            <LMR > {note}</LMR>\r\n        </div>\r\n    }\r\n\r\n    private page = () => {\r\n        let none = <div className=\"my-3 mx-2 text-muted\"></div>;\r\n        return <Page header='消息' headerClassName='bg-primary py-1' >\r\n            <List before={''} none={none} items={this.message} item={{ render: this.renderItem }} />\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, Controller, Action, PageItems } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { async } from 'q';\r\nimport { VMessage } from './VMessage';\r\nimport { observable } from 'mobx';\r\n\r\n/**\r\n *\r\n */\r\nclass PageMessage extends PageItems<any> {\r\n\r\n    private searchQuery: Query;\r\n\r\n    constructor(searchQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchQuery = searchQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\nexport class CMessage extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageMessage: PageMessage;\r\n    private querySearchMessage: Query;\r\n    private querySearchNowMessage: Query;\r\n    private actionUpdateNowMessage: Action;\r\n    count = observable.box<number>(0);\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask } = this.cApp;\r\n        this.querySearchMessage = cUqSalesTask.query(\"SearchMessage\");\r\n        this.querySearchNowMessage = cUqSalesTask.query(\"SearchNowMessage\");\r\n        this.actionUpdateNowMessage = cUqSalesTask.action(\"UpdateNowMessage\");\r\n        this.searchNowMessage();\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.pageMessage = null;\r\n        await this.showMessage();\r\n    }\r\n\r\n    //搜索未读信息\r\n    searchNowMessage = async () => {\r\n        let messages = await this.querySearchNowMessage.table({});\r\n        if (messages && messages.length > 0) {\r\n            this.count.set(messages[0].count);\r\n        } else {\r\n            this.count.set(0);\r\n        }\r\n    }\r\n\r\n    //更新消息\r\n    updateNowMessage = async () => {\r\n        await this.actionUpdateNowMessage.submit({});\r\n        await this.searchNowMessage();\r\n        let a = 0;\r\n    }\r\n\r\n    //显示消息\r\n    showMessage = async () => {\r\n        await this.searchMessage();\r\n        this.openVPage(VMessage, this.pageMessage);\r\n        await this.updateNowMessage();\r\n    }\r\n\r\n    //搜索消息\r\n    searchMessage = async () => {\r\n        this.pageMessage = new PageMessage(this.querySearchMessage);\r\n        await this.pageMessage.first({});\r\n    }\r\n\r\n\r\n}","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/type';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CType } from 'salestask/types/createTypes';\r\nimport { CMe } from 'me/CMe';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\nimport { CStart } from 'start/CStart';\r\nimport { CTeam } from 'me/CTeam';\r\nimport { CMessage } from 'message/CMessage';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n    cTeam: CTeam;\r\n    cStart: CStart;\r\n    cMessage: CMessage;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n        this.cTeam = new CTeam(this, undefined);\r\n        this.cStart = new CStart(this, undefined);\r\n        this.cMessage = new CMessage(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        //this.cSalesTask.start();\r\n\r\n        /** 启动邀请码页面 */\r\n        this.cStart.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs, TabProp } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.calcSum();\r\n        this.openPage(this.render);\r\n\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe, cMessage } = this.controller;\r\n        let faceTabs: any[] = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user', load: cMe.load, notify: cMessage.count }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify, load } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n                load: load,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n\r\n    count = observable.box<number>(0);\r\n    protected calcSum = () => {\r\n        this.count.set(0);\r\n    }\r\n\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}