{"version":3,"sources":["ui/salestask.tsx","salestask/views/VMain.tsx","salestask/views/VSalesTaskExtension.tsx","salestask/views/VTaskHistory.tsx","salestask/types/share/VDetailTop.tsx","salestask/types/share/VCreateTop.tsx","salestask/types/share/VActionsBottom.tsx","salestask/types/share/VDetailContent.tsx","salestask/types/commonType/VFinish.tsx","salestask/types/CType.tsx","salestask/types/大包装报价跟踪/VCreate.tsx","salestask/types/typeA/index.tsx","salestask/views/VCreateCheck.tsx","salestask/types/commonType/VCreate.tsx","salestask/types/commonType/CCommonType.tsx","salestask/types/templets/visit/common1.tsx","salestask/types/templets/visit/common2.tsx","salestask/types/templets/visit/Visit.tsx","salestask/types/templets/visit/Exhibition.tsx","salestask/types/templets/phone/NonReagent.tsx","salestask/types/createTypes.ts","salestask/types/templets/phone/Reagent.tsx","salestask/type/VSelectType.tsx","salestask/type/VAi.tsx","salestask/type/CSelectType.tsx","salestask/model/tasks.ts","salestask/views/VSalesTaskInvalid.tsx","salestask/views/VEmployeeHistory.tsx","salestask/views/VCustomerHistory.tsx","salestask/type/VSelectBiz.tsx","salestask/type/CSelectBiz.tsx","salestask/CSalesTask.tsx","consts.ts","customer/VCustomerSelect.tsx","customer/VCustomerDetail.tsx","customer/VCustomerList.tsx","customer/CCustomer.tsx","tools/productImage.tsx","product/VProductList.tsx","product/CProduct.tsx","me/VMe.tsx","me/CMe.tsx","CSalesTaskApp.tsx","ui/main.tsx","ui/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["ui_salestask","tuid","salestask","content","values","desciption","customer","type","sourceid","react","Object","dist","VMain_VMain","_super","VMain","_this","apply","this","arguments","onScrollBottom","tslib_es6","onSalesTaskClick","param","task","id","biz","description","remindDate","deadline","controller","showTaskDetailEdit","onSalesTaskAdd","showSelectTaskType","_a","sent","renderSalesTask","salesTask","index","typeName","priorty","cnFlag","classnames_default","my-1 mr-3","text-danger","text-info","left","className","getTaskIcon","right","date","v","name","page","index_module","tasks","undefined","none","add","onClick","item","render","tasksNow","dateTasksList","header","headerClassName","length","before","items","map","list","key","prototype","open","member","VSalesTaskExtension_schema","required","VSalesTaskExtension_SomeDay","SomeDay","dateVisible","value","title","onChange","evt","val","currentTarget","day2","Date","setDate","getDate","setValue","onDateChange","style","height","defaultValue","toDateString","mobx_module","VSalesTaskExtension_VSalesTaskExtension","VSalesTaskExtension","uiSchema","resulttype","visible","widget","label","WidgetClass","result","placeholder","rows","submit","onExtensionTask","model","form","buttonClick","onFormButtonClick","context","data","extensionTask","_b","closePage","product","footer","ref","schema","onButtonClick","openPage","VTaskHistory_VTaskHistory","VTaskHistory","renderHistory","taskhistory","status","principal","user","cnRowCustor","VDetailTop_right","VDetailTop_VDetailTop","VDetailTop","cSalesTask","showCustomerDetail","showTaskHistory","component","push","VCreateTop_VCreateTop","VCreateTop","itemss","VActionsBottom_VActionsBottom","VActionsBottom","showTaskComplet","showTaskExtension","showTaskInvalid","VDetailContent_VDetailContent","VDetailContent","completuiSchema","getCTaskType","obj","taskCommonType","fields","fieldName","fixWidth","selectItem","find","VFinish_VFinish","VFinish","onCompletionTask","completSchema","fieldValues","finishTask","requiredFlag","CType_CType","CType","icon","renderComplet","caption","renderCompletContent","renderView","renderDetailEdit","renderDetailTop","renderActionsBottom","renderDetailContent","renderDetailValues","renderCreateTop","showDetailFromId","taskid","Promise","loadTask","showDetailEdit","showComplet","showCreate","VCreate_schema","VCreate_VCreate","VCreate","onAddSalesTask","createTask","typeA_TypeA","TypeA","internalStart","openVPage","VCreateCheck_VCreateCheck","VCreateCheck","onAddTask","onFinishTask","createAndFinishTask","cApp","onClickCustoemr","commonType_VCreate_VCreate","CCommonType_CCommonType","CCommonType","res","call","showCrateCheck","common1","size","radioClassName","common2","description2","Visit","priortya","Exhibition","NonReagent","taskTypeConstuctors","typeA","reagent","nonreagent","visit","exhibition","VSelectType_VSelectType","VSelectType","renderList","onClickTaskType","selectTaskType","ai","aiClick","tasktypelist","VAi_VAi","VAi","finished","setTimeout","CSelectType_CSelectType","CSelectType","cSalesTaskBiz","start","returnTaskType","returnCall","cUqSalesTask","tuidTaskType","customerid","searchByKey","search","tasks_Tasks","Tasks","taskArr","array","deep","_i","taskArr_1","postPone","remove","t","lodash_default","a","clone","dateTasks","findIndex","splice","len","i","VSalesTaskInvalid_schema","VSalesTaskInvalid_VSalesTaskInvalid","VSalesTaskInvalid","onInvalidTask","VEmployeeHistory_VEmployeeHistory","VEmployeeHistory","vs","onTaskClick","VCustomerHistory_VCustomerHistory","VCustomerHistory","VSelectBiz_VSelectBiz","VSelectBiz","renderItem","onClickTaskBiz","selectTaskBiz","taskType","taskBizs","ret","CSelectBiz_CSelectBiz","CSelectBiz","taskbiz","cCustomer","returnTaskBiz","mapTaskBiz","getBizFromTaskTypeId","query","CSalesTask_CSalesTask","PageSalesTask","searchsalestskQuery","firstSize","pageSize","load","pageStart","setPageStart","CSalesTask","taskTypes","searchTaskByKey","qeurySearchTask","table","taskTuid","searchTaskCompletion","qeurySearchTaskCompletion","qeurySearchHistory","showEmployeeHistory","qeurySearchEmployeeHistory","showCustomerHistory","qeurySearchCustomerHistory","tt","createTasks","newtask","completionTaskAction","cSelectType","customerId","typeId","bizIds","sourceID","sourceType","sourceNo","addTaskAction","tab","cUqCustomer","tuidCustomer","taskTypeTuid","taskBook","book","action","extensionTaskAction","createTaskTypes","consts","VCustomerSelect_VCustomerSelect","VCustomerSelect","onClickCustomer","selectCustomer","pageCustomer","onSearch","renderCustomer","VCustomerDetail_VCustomerDetail","VCustomerDetail","vAlign","alignValue","VCustomerList_VCustomerList","VCustomerList","CCustomer_PageCustomer","PageCustomer","searchCustomerQuery","CCustomer_CCustomer","CCustomer","querySearchCustomer","first","loadCustomerDetail","returnCustomer","imagePath","altimagePath","ProductImage","props","chemicalId","src","substr","altImage","VProductList_VProductList","VProductList","renderBrand","brand","productPropItem","renderProduct","descriptionC","CAS","purity","molecularFomula","molecularWeight","origin","imageUrl","pageProduct","more","CProduct_PageProduct","PageProduct","searchProductQuery","CProduct_CProduct","CProduct","querySearchProduct","salesRegion","cUqProduct","rowCom","iconName","iconColor","VMe_VMe","VMe","logout","showLogout","CMe_CMe","CMe","CSalesTaskApp_CSalesTaskApp","CSalesTaskApp","getCUq","cProduct","cMe","color","selected","src_ui","appName","CApp","main","VHome","faceTabs","notify","tabs","uqs","百灵威系统工程部/salestask","src_App_0","App","onLogined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","catch","error","react_dom","document","getElementById","URL","toString","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.66d37a87.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TuidUI, tv, UqUI } from 'tonva';\r\n\r\nexport const salestaskUI: TuidUI = {\r\n    content: (values: any) => {\r\n        let { desciption, customer, type, sourceid } = values;\r\n        return <>\r\n            {tv(desciption)}{tv(customer)}{tv(type)}{tv(sourceid)}\r\n        </>\r\n    }\r\n}\r\n\r\nconst uqUI: UqUI = {\r\n    tuid: {\r\n        salestask: salestaskUI,\r\n    },\r\n}\r\n\r\nexport default uqUI;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { VPage, Page, PageItems, Image } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { List, LMR, EasyDate, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from 'tonva';\r\nimport { Task } from 'salestask/model';\r\n\r\nexport class VMain extends VPage<CSalesTask> {\r\n\r\n    private tasklist: any;\r\n    async open(param: any) {\r\n\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let task = {\r\n            id: param.id,\r\n            type: param.type,\r\n            biz: param.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: param.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    //添加任务\r\n    private onSalesTaskAdd = async () => {\r\n        await this.controller.showSelectTaskType();\r\n    }\r\n\r\n    private renderSalesTask = (salesTask: any, index: number) => {\r\n\r\n        let { description, deadline, biz, customer, type, typeName, priorty } = salesTask;\r\n        let cnFlag = classNames({\r\n            'my-1 mr-3': true,\r\n            'text-danger': priorty > 0,\r\n            'text-info': !(priorty > 0)\r\n        })\r\n\r\n        let left = <div className={cnFlag}>{this.controller.getTaskIcon(typeName)}</div>;\r\n        let right = <div className=\"text-right\">\r\n            {deadline && <small className=\"text-muted\">时限：<EasyDate date={deadline} /></small>}\r\n        </div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <LMR className=\"\" right={right}>\r\n                <div className=\"font-weight-bold\">{tv(customer, (v) => <>{v.name}</>)}</div>\r\n            </LMR>\r\n            <LMR className=\"\" right={<div className=\"text-muted\"><small>{tv(type, (v) => <>{v.description}</>)}</small></div>}>\r\n                <div className=\"text-muted\" ><small>{tv(biz, (v) => <>{v.description}</>)}</small></div>\r\n            </LMR>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let { tasks } = this.controller;\r\n        if (tasks === undefined) return null;\r\n\r\n        let none = <div className=\"my-3 mx-2 text-muted\">无任务</div>;\r\n        let add = <div onClick={this.onSalesTaskAdd} className=\"cursor-pointer px-3\"><FA name=\"plus\" /></div>;\r\n\r\n        let item = { render: this.renderSalesTask, onClick: this.onSalesTaskClick };\r\n        let { tasksNow, dateTasksList } = tasks;\r\n        return <Page header=\"销售助手\" onScrollBottom={this.onScrollBottom} right={add} headerClassName=\"bg-primary py-1\">\r\n            {tasksNow.length > 0 && <List before={''} none={none} items={tasksNow} item={item} />}\r\n            {\r\n                dateTasksList.map((v, index: number) => {\r\n                    let { date, list } = v;\r\n                    if (list.length === 0) return null;\r\n                    return <React.Fragment key={index}>\r\n                        <div className=\"small text-muted pt-3 px-3 pb-2 text-center\"><EasyDate date={date} /></div>\r\n                        <List before={''} none={none} items={list} item={item} />\r\n                    </React.Fragment>;\r\n                })\r\n            }\r\n        </Page>\r\n    });\r\n\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Form, UiSchema, UiInputItem, Context, UiCustom, UiIdItem, UiRadio, Widget } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { UiTextAreaItem } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport { Task } from '../model';\r\nimport { observable } from 'mobx';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'string', required: false },\r\n    { name: 'date', type: 'string', required: true },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\nclass SomeDay extends Widget {\r\n    @observable dateVisible = false;\r\n    private list = [{ value: 1, title: '明天' }, { value: 2, title: '后天' }];\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        let val = evt.currentTarget.value;\r\n        this.dateVisible = val === '0';\r\n        var day2 = new Date();\r\n        if (val === '1') {\r\n            day2.setDate(day2.getDate() + 1);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        } else if (val === '2') {\r\n            day2.setDate(day2.getDate() + 2);\r\n            this.setValue(new Date(evt.currentTarget.value));\r\n        }\r\n    }\r\n\r\n    private onDateChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"form-control\" style={{ height: 'auto' }}>\r\n            {this.list.map((v, index) => {\r\n                return <label className=\"my-1\"><input type=\"radio\" value={v.value} name=\"a\" onChange={this.onChange} /> {v.title} &nbsp; </label>\r\n            })}\r\n            <div>\r\n                <label className=\"my-1\"><input type=\"radio\" value={0} name=\"a\" onChange={this.onChange} /> 日期 &nbsp; </label>\r\n                {this.dateVisible && <input type=\"date\" defaultValue={(new Date).toDateString()} onChange={this.onDateChange} />}\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport class VSalesTaskExtension extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            date: {\r\n                widget: 'custom',\r\n                label: '提醒日期',\r\n                WidgetClass: SomeDay,\r\n            } as UiCustom,\r\n            result: { widget: 'textarea', label: '备注', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n\r\n    private onExtensionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype, date } = context.form.data;\r\n        await this.controller.extensionTask(this.task, result, resulttype, date);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((product: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onExtensionTask} >推迟</button>;\r\n        return <Page header=\"推迟\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VTaskHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { date, status, principal, result } = taskhistory;\r\n        let right = <small className=\"text-muted\">{principal.id !== nav.user.id && <span className=\"text-muted small\"></span>}{tv(status, (v) => v.name)} </small>;\r\n        return <div className=\"d-block p-3\">\r\n            <LMR left={<small className=\"text-muted\">{<EasyDate date={date} />} </small>}\r\n                right={<small className=\"text-muted\">{right}</small>}>\r\n            </LMR>\r\n            <div>{result}</div>\r\n        </div>;\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【未处理】</div>;\r\n        return <Page header=\"处理详情\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA, StringProp, EasyDate } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { propTypes } from 'mobx-react';\r\nimport { Task } from '../../model';\r\n\r\nconst cnRow = 'w-100 py-3';\r\nconst cnRowCustor = classNames(cnRow, 'cursor-pointer');\r\nconst right = <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>;\r\n\r\nexport class VDetailTop extends View<CType> {\r\n\r\n    render(task: Task) {\r\n\r\n        let { showCustomerDetail, showTaskHistory } = this.controller.cSalesTask;\r\n        let { type, customer, description, deadline, id } = task;\r\n\r\n        let onShowSalesTaskHistory = async () => await showTaskHistory(id);\r\n        let onClickCustomer = async () => await showCustomerDetail(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={cnRowCustor} onClick={onClickCustomer}\r\n                    left={<div className=\"mr-2\"> <FA name=\"user\" className=\"text-info mr-2 pt-1\" /> </div>}\r\n                    right={right}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        if (deadline) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'deadline',\r\n                component: <LMR className={cnRow}\r\n                    left={<div className=\"mr-2\"> <FA name=\"clock-o\" className=\"text-info mr-2 pt-1 \" /> </div>}>\r\n                    {<EasyDate date={deadline} />}\r\n                </LMR>,\r\n            } as ComponentProp);\r\n        }\r\n        rows.push({\r\n            type: 'component',\r\n            name: 'customer',\r\n            component: <LMR className={cnRowCustor} onClick={onShowSalesTaskHistory}\r\n                left={<span><FA className=\"text-warning\" name=\"hand-o-right\" /> &nbsp; 详情</span>}\r\n                right={right} />,\r\n            //label: '执行过程',\r\n        } as ComponentProp);\r\n\r\n        if (description) {\r\n            rows.push({\r\n                type: 'component',\r\n                name: 'description',\r\n                component: <div className=\"w-100 py-3\">{description}</div>,\r\n            } as ComponentProp);\r\n        }\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VCreateTop extends View<CType> {\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cSalesTask;\r\n        let { customer } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        return <PropGrid className=\"my-2\" rows={rows} values={task} />;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { PropGrid, Prop, LMR, ComponentProp, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { Task } from '../../model';\r\n\r\nexport class VActionsBottom extends View<CType> {\r\n\r\n    render(task: Task) {\r\n        let { showTaskComplet, showTaskExtension, showTaskInvalid } = this.controller.cSalesTask;\r\n        let tasks = {\r\n            id: task.id,\r\n            type: task.type,\r\n            biz: task.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: task.customer\r\n        }\r\n        let onProcess = async () => await showTaskComplet(tasks);\r\n        let onPostpond = async () => await showTaskExtension(tasks);\r\n        let onInvalid = async () => await showTaskInvalid(tasks);\r\n\r\n        return <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onProcess} >&nbsp;处理&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onPostpond} >推迟</button>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={onInvalid} >取消</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { View, Widget, UiSelectBase } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { LMR, FA } from 'tonva';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { CCommonType } from '../commontype/CCommonType';\r\n\r\nexport class VDetailContent extends View<CType> {\r\n\r\n    render(task: Task): JSX.Element {\r\n        let model = this.controller.cSalesTask.getCTaskType(task.biz.obj.name);\r\n\r\n        let ss: CCommonType = model as CCommonType;\r\n\r\n        let { completuiSchema } = ss.taskCommonType;\r\n\r\n        let { fields } = task;\r\n        if (fields === undefined) return <></>;\r\n\r\n        return <div className='w-100'>\r\n            {fields.map((v, index) => {\r\n                let { fieldName, value } = v;\r\n                let { label, list } = completuiSchema.items[fieldName] as UiSelectBase;\r\n                let left = <div className=''><FA name='caret-right' className='small text-info' fixWidth={true} />{label || fieldName}</div>;\r\n                let selectItem = list.find(v => v.value === value);\r\n                return <div className='row bg-white py-2' key={index}>\r\n                    <div className=\"col-4 align-self-center\">{left}</div>\r\n                    <div className=\"col-8\">{selectItem ? selectItem.title : value} </div>\r\n                </div>\r\n            })}\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\n\r\nexport class VFinish extends VPage<CCommonType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private onCompletionTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { completSchema } = this.controller.taskCommonType;\r\n        let fieldValues = completSchema.map((v, index) => {\r\n            let { name } = v;\r\n            return {\r\n                fieldName: name,\r\n                value: context.form.data[name]\r\n            };\r\n        })\r\n        this.salestask.fields = fieldValues;\r\n        await this.controller.cSalesTask.finishTask(this.salestask);\r\n        this.closePage(2);\r\n    }\r\n\r\n    render(task: Task) {\r\n        this.salestask = task;\r\n        let { completSchema, completuiSchema } = this.controller.taskCommonType;\r\n        return <div className=\"mx-3\">\r\n            <Form ref={v => this.form = v}\r\n                schema={completSchema}\r\n                uiSchema={completuiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={false}\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onCompletionTask} >完结</button>\r\n        </div>\r\n\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller, Page } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { VDetailTop } from './share/VDetailTop';\r\nimport { VCreateTop } from './share/VCreateTop';\r\nimport { VActionsBottom } from './share/VActionsBottom';\r\nimport { Task } from '../model';\r\nimport { VDetailContent } from './share/VDetailContent';\r\nimport { VFinish } from './commonType/VFinish';\r\n\r\nexport abstract class CType extends Controller {\r\n    caption: string;\r\n    cSalesTask: CSalesTask;\r\n    icon: any = 'plus';\r\n\r\n    //显示任务明细--无操作\r\n    async showDetailFromId(taskid: number): Promise<void> {\r\n        let task = await this.cSalesTask.loadTask(taskid);\r\n        this.openPage(\r\n            this.renderDetailValues(task)\r\n        );\r\n    }\r\n    //显示明细--有操作\r\n    async showDetailEdit(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderDetailEdit(tasks)\r\n        );\r\n    }\r\n    //完结任务\r\n    async showComplet(task: Task): Promise<void> {\r\n        let tasks = await this.cSalesTask.loadTask(task.id);\r\n        this.openPage(\r\n            this.renderComplet(tasks)\r\n        );\r\n    }\r\n\r\n    private renderComplet = (task: Task): JSX.Element => {\r\n        let { caption } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {this.renderCompletContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderCompletContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VFinish, task);\r\n    }\r\n\r\n    private renderDetailEdit = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderActionsBottom, renderDetailContent } = this;\r\n        return <Page header={caption} footer={renderActionsBottom(task)} headerClassName='bg-primary'  >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    private renderDetailValues = (task: Task): JSX.Element => {\r\n        let { caption, renderDetailTop, renderDetailContent } = this;\r\n        return <Page header={caption} headerClassName='bg-primary' >\r\n            {renderDetailTop(task)}\r\n            {renderDetailContent(task)}\r\n        </Page >\r\n    }\r\n\r\n    protected renderDetailTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailTop, task);\r\n    }\r\n\r\n    protected renderDetailContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetailContent, task);\r\n    }\r\n\r\n    protected renderActionsBottom = (task: Task): JSX.Element => {\r\n        return this.renderView(VActionsBottom, task);\r\n    }\r\n\r\n    //创建任务\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openPage(<Page header={task.biz.name}>没有继承showCreate！</Page>);\r\n    }\r\n\r\n    renderCreateTop = (task: Task): JSX.Element => {\r\n        return this.renderView(VCreateTop, task);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { UiSchema, UiInputItem } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CType } from '../CType';\r\nimport { Task } from '../../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'priorty', type: 'number', required: false },\r\n    { name: 'deadline', type: 'string', required: false },\r\n    //{ name: 'submit', type: 'submit' },\r\n];\r\n\r\nexport class VCreate extends VPage<CType> {\r\n\r\n    private salestask: Task\r\n    private form: Form;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n\r\n    async open(task: Task) {\r\n        this.salestask = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.salestask);\r\n        this.closePage(1);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary'  >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import { CType } from '../CType';\r\nimport { VDetail } from './VDetail';\r\nimport { Task } from '../../model';\r\nimport { VCreate } from '../大包装报价跟踪/VCreate';\r\n\r\nexport class TypeA extends CType {\r\n    protected internalStart(param?: any): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, LMR, Prop, ComponentProp, FA, tv, PropGrid } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\nimport { CSalesTask } from 'salestask/CSalesTask';\r\n\r\nexport class VCreateCheck extends VPage<CSalesTask> {\r\n\r\n    private task: Task\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddTask = async (model: any) => {\r\n        this.task.description = undefined;\r\n        this.task.deadline = undefined;\r\n        this.controller.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    private onFinishTask = async () => {\r\n        this.task.priorty = 0;\r\n        await this.controller.createAndFinishTask(this.task);\r\n        this.closePage();\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    private itemss = \"cursor-pointer my-2 w-100\";\r\n    render(task: Task) {\r\n        let { showCustomerDetail } = this.controller.cApp.cSalesTask;\r\n        let { customer, type, biz } = task;\r\n\r\n        let onClickCustoemr = async () => await showCustomerDetail(customer.id);\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"user\" className=\"text-info mr-2 pt-1 \" /> </div>}\r\n                    right={<div className=\"text-right\"><i className=\"fa fa-chevron-right\" /></div>}>\r\n                    {tv(customer, v => <>{v.name}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'type',\r\n                component: <LMR className={this.itemss} onClick={onClickCustoemr}\r\n                    left={<div> <FA name=\"circle\" className=\"text-info mr-2 pt-1\" /> </div>}>\r\n                    {tv(type, v => <>{v.description}</>)}\r\n                </LMR>,\r\n            } as ComponentProp,\r\n        ];\r\n        let footer = <div className=\"d-flex px-1\">\r\n            <div className=\"flex-grow-1 align-self-center justify-content-start\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.onAddTask} >&nbsp;新建&nbsp;</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info ml-2 align-self-center\" onClick={this.onFinishTask} >处理</button>\r\n        </div>\r\n\r\n        let header = <div>{this.task.biz.description}&nbsp;</div>;\r\n\r\n        return <Page header={header} footer={footer} headerClassName='bg-primary'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={task} />\r\n        </Page>\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Schema, Form, Context, UiIdItem, UiCheckItem, FA } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../../model';\r\nimport { CCommonType } from './CCommonType';\r\n\r\nexport class VCreate extends VPage<CCommonType> {\r\n\r\n    private task: Task;\r\n    private form: Form;\r\n\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onAddSalesTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { description, priorty, deadline } = context.form.data;\r\n        this.task.description = description;\r\n        this.task.priorty = priorty;\r\n        this.task.deadline = deadline;\r\n        await this.controller.cSalesTask.createTask(context.form.data, this.task);\r\n        this.closePage(5);\r\n    }\r\n\r\n    private page = observer((param: any) => {\r\n        return this.render(param);\r\n    });\r\n\r\n    render(param: any) {\r\n        let { schema, uiSchema } = this.controller.taskCommonType;\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onAddSalesTask}>保存</button>;\r\n        return <Page header={this.controller.caption} footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                {this.controller.renderCreateTop(param)}\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    requiredFlag={false}\r\n                />\r\n            </div>\r\n        </Page >\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CType } from '../CType';\r\nimport { VPage } from 'tonva';\r\nimport { FA } from 'tonva';\r\nimport { VDetail } from './VDetail';\r\nimport { VCreateCheck } from '../../views/VCreateCheck';\r\n//import { VAdd } from './VCreate';\r\nimport { Task } from '../../model';\r\nimport { TaskCommonType } from '../taskCommonType';\r\nimport { VCreate } from './VCreate';\r\n\r\nexport class CCommonType extends CType {\r\n    taskCommonType: TaskCommonType;\r\n\r\n    constructor(taskCommonType: TaskCommonType, res: any) {\r\n        super(res);\r\n        this.taskCommonType = taskCommonType;\r\n        this.icon = taskCommonType.icon;\r\n        this.caption = taskCommonType.caption;\r\n    }\r\n\r\n    protected internalStart(param?: TaskCommonType): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    /**\r\n    protected renderContent = (task: Task): JSX.Element => {\r\n        return this.renderView(VDetail, task);\r\n    }\r\n    */\r\n\r\n    async showCreate(task: Task): Promise<void> {\r\n        this.openVPage(VCreate, task);\r\n        return;\r\n    }\r\n    //显示查询客户页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { FA, UiRadio } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem } from 'tonva';\r\n\r\nexport const common1: TaskCommonType = {\r\n    caption: 'Common1',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }], radioClassName: 'w-min-6c d-inline-block' } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiCheckItem, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const common2: TaskCommonType = {\r\n    caption: 'Common2',\r\n    icon: <FA name='plus' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '内容', placeholder: '请填写任务内容' } as UiInputItem,\r\n            priorty: { widget: 'checkbox', label: '重要性', placeholder: '重要性' } as UiCheckItem,\r\n            deadline: { widget: 'date', label: '要求完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n\r\n            description2: { widget: 'radio', label: '描述2', defaultValue: 1, list: [{ value: 0, title: '女' }, { value: 1, title: '男' }] } as UiRadio,\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Visit: TaskCommonType = {\r\n    caption: '拜访客户',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '拜访结果', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Exhibition: TaskCommonType = {\r\n    caption: '会展活动',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'priortya', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '会展评价', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很好' }] } as UiRadio,\r\n            priortya: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { FA, toUiSelectItems } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const NonReagent: TaskCommonType = {\r\n    caption: '大包装报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: {\r\n                widget: 'radio', label: '重要性', defaultValue: 0,\r\n                list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'number', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            description: {\r\n                widget: 'radio', label: '研究领域', placeholder: '研究领域',\r\n                defaultValue: 1,\r\n                list: toUiSelectItems(['1:有机化学', '2:生物', '3:甲醇', '4:无机']),\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            priorty: {\r\n                widget: 'radio', label: '状态', defaultValue: 1,\r\n                list: [\r\n                    { value: 1, title: '有效' },\r\n                    { value: 0, title: '无效' }\r\n                ]\r\n            } as UiRadio,\r\n            deadline: {\r\n                widget: 'radio', label: '研究方向', placeholder: '研究方向', defaultValue: 1,\r\n                list: [\r\n                    { title: '大客户', value: 1 },\r\n                    { title: '大客户2', value: 2 },\r\n                    { title: '大客户3', value: 3 },\r\n                    { title: '大客户4', value: 4 },\r\n                    { title: '大客户5', value: 5 },\r\n                ],\r\n                radioClassName: 'w-min-6c d-inline-block'\r\n            } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","export * from './CType';\r\n\r\nimport { 试剂报价跟踪 } from './试剂报价跟踪';\r\nimport { TypeA } from './typeA';\r\nimport { 大包装报价跟踪 } from './大包装报价跟踪';\r\nimport { CType } from './CType';\r\nimport { CSalesTask } from 'salestask';\r\nimport { TaskCommonType } from './taskCommonType';\r\nimport { CCommonType } from './commonType/CCommonType';\r\nimport { common1, common2, NonReagent, Reagent, Visit, Exhibition } from './templets';\r\n\r\ninterface CTaskTypeConstructor {\r\n    new(res: any): CType;\r\n}\r\n\r\nconst taskTypeConstuctors: { [type: string]: CTaskTypeConstructor | TaskCommonType } = {\r\n    typeA: TypeA,\r\n    reagent: Reagent,\r\n    nonreagent: NonReagent,\r\n    visit: Visit,\r\n    exhibition: Exhibition,\r\n    common1: common1,\r\n    common2: common2,\r\n};\r\n\r\nexport function createTaskTypes(cSalesTask: CSalesTask): { [type: string]: CType } {\r\n    let res: any = undefined;\r\n    let ret: { [type: string]: CType } = {};\r\n\r\n    for (let i in taskTypeConstuctors) {\r\n        let t = taskTypeConstuctors[i];\r\n        if (typeof t === 'function') {\r\n            let tt = ret[i] = new (t as any)(res);\r\n            tt.cSalesTask = cSalesTask;\r\n            if (!tt.caption) tt.caption = i;\r\n        }\r\n        else {\r\n            let tt = ret[i] = new CCommonType(t, res);\r\n            tt.cSalesTask = cSalesTask;\r\n        }\r\n    }\r\n    return ret;\r\n}","import * as React from 'react';\r\nimport { FA } from 'tonva';\r\nimport { TaskCommonType } from '../../taskCommonType';\r\nimport { UiSchema, UiInputItem, UiRadio } from 'tonva';\r\n\r\nexport const Reagent: TaskCommonType = {\r\n    caption: '试剂报价跟踪',\r\n    icon: <FA name='flask' size=\"lg\" fixWidth={true} />,\r\n    schema: [\r\n        { name: 'priorty', type: 'number', required: false },\r\n        { name: 'deadline', type: 'string', required: false },\r\n        { name: 'description', type: 'string', required: false },\r\n    ],\r\n    uiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            deadline: { widget: 'date', label: '完成时间', placeholder: '要求完成时间' } as UiInputItem,\r\n            description: { widget: 'text', label: '备注', placeholder: '请填写任务备注' } as UiInputItem,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema,\r\n    completSchema: [\r\n        { name: 'description', type: 'string', required: false },\r\n        { name: 'priorty', type: 'number', required: false },\r\n    ],\r\n    completuiSchema: {\r\n        items: {\r\n            priorty: { widget: 'radio', label: '重要性', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '重要' }] } as UiRadio,\r\n            description: { widget: 'radio', label: '客户情况', defaultValue: 0, list: [{ value: 0, title: '一般' }, { value: 1, title: '很有钱' }] } as UiRadio,\r\n            submit: { widget: 'button', label: '提交', }\r\n        }\r\n    } as UiSchema\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\n\r\nexport class VSelectType extends VPage<CSelectType> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderList = (model: any, index: number) => {\r\n        let { description, name } = model;\r\n        let left = <div className='text-info mr-3' >{this.controller.cSalesTask.getTaskIcon(name)}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{description}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskType = async (model: any) => {\r\n        await this.controller.selectTaskType(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = ((customer: any) => {\r\n        let { tasktypelist } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">无任务类型！</div>;\r\n        return <Page header=\"新建任务\" headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={tasktypelist} item={{ render: this.renderList, onClick: this.onClickTaskType }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectType } from './CSelectType';\r\nimport { LMR, List, FA } from 'tonva';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VAi extends VPage<CSelectType> {\r\n    @observable private finished: boolean;\r\n    async open() {\r\n        this.finished = false;\r\n        this.openPage(this.page);\r\n        setTimeout(() => {\r\n            this.finished = true;\r\n        }, 3000);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        return <Page header=\"AI\">\r\n            <div className=\"p-3\">\r\n                {\r\n                    this.finished === false ?\r\n                        <>\r\n                            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                            好阿，我来算算，稍等......\r\n                    </>\r\n                        :\r\n                        <>\r\n                            <i className=\"fa fa-frown-o fa-2x fa-fw text-warning\"></i> 没有找到适合你的机会！\r\n                </>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { TuidMain, Controller } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { VSelectType } from './VSelectType';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectType extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private tuidTaskType: TuidMain;\r\n    private taskBook: any;\r\n    private tasks: [];\r\n    private customerid: number;\r\n    private task: Task;\r\n    @observable tasktypelist: any;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.tuidTaskType = cUqSalesTask.tuid(\"tasktype\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        this.customerid = param;\r\n        await this.searchByKey('');\r\n        this.openVPage(VSelectType, param);\r\n    }\r\n\r\n    //搜索任务类型\r\n    async searchByKey(key: string) {\r\n\r\n        this.tasktypelist = await this.tuidTaskType.search(key, 0, 100);\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskType = async (type: TaskType) => {\r\n        this.task = {\r\n            id: null,\r\n            type: type,\r\n            biz: null,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: null\r\n        }\r\n        this.cSalesTask.cSalesTaskBiz.start(this.task)\r\n    }\r\n\r\n    returnTaskType = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import { observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Task } from './task';\r\n\r\ninterface DateTasks {\r\n    date: Date;\r\n    list: Task[];\r\n}\r\n\r\nexport class Tasks {\r\n    @observable tasksNow: Task[];\r\n    @observable dateTasksList: DateTasks[];\r\n\r\n    constructor(taskArr: Task[]) {\r\n        this.tasksNow = observable.array([], { deep: true });\r\n        this.dateTasksList = observable.array([], { deep: true });\r\n\r\n        for (let task of taskArr) {\r\n            this.add(task);\r\n        }\r\n    }\r\n\r\n    postPone(date: Date, task: Task) {\r\n        this.remove(task);\r\n        let t = _.clone(task);\r\n        t.remindDate = date;\r\n        this.add(t);\r\n    }\r\n\r\n    add(task: Task) {\r\n        let { remindDate } = task;\r\n        if (!remindDate) {\r\n            this.tasksNow.push(task);\r\n            return;\r\n        }\r\n        let dateTasks = this.dateTasksList.find(v => v.date === remindDate);\r\n        if (dateTasks === undefined) {\r\n            dateTasks = { date: remindDate, list: [task] };\r\n            // 插入到合适的地方\r\n            this.dateTasksList.push(dateTasks);\r\n        }\r\n        else {\r\n            dateTasks.list.push(task);\r\n        }\r\n    }\r\n\r\n    remove(task: Task) {\r\n        let index = this.tasksNow.findIndex(v => v.id === task.id);\r\n        if (index >= 0) {\r\n            this.tasksNow.splice(index, 1);\r\n            return;\r\n        }\r\n        let len = this.dateTasksList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let dt = this.dateTasksList[i];\r\n            let { list } = dt;\r\n            index = list.findIndex(v => v.id === task.id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                if (list.length === 0) {\r\n                    this.dateTasksList.splice(i, 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, Form, Schema, UiSchema, Context, UiTextAreaItem } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { observer } from 'mobx-react';\r\nimport { Task } from '../model';\r\n\r\nconst schema: Schema = [\r\n    { name: 'resulttype', type: 'id', required: false },\r\n    { name: 'result', type: 'string', required: false },\r\n];\r\n\r\n\r\nexport class VSalesTaskInvalid extends VPage<CSalesTask> {\r\n\r\n    private form: Form;\r\n    private task: Task;\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            resulttype: { visible: false },\r\n            result: { widget: 'textarea', label: '结果', placeholder: '请输入处理结果！', rows: 12 } as UiTextAreaItem,\r\n            submit: { widget: 'button', label: '提交', },\r\n        }\r\n    }\r\n    async open(task: Task) {\r\n        this.task = task;\r\n        this.openPage(this.page, task);\r\n    }\r\n\r\n    private onInvalidTask = async (model: any) => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { result, resulttype } = context.form.data;\r\n        await this.controller.onInvalidTask(this.task, result, resulttype);\r\n        this.closePage(2);\r\n    }\r\n\r\n    private page = observer((salestask: any) => {\r\n        let footer = <button type=\"button\" className=\"btn btn-primary w-100\" onClick={this.onInvalidTask} >取消</button>;\r\n        return <Page header=\"取消\" footer={footer} headerClassName='bg-primary' >\r\n            <div className=\"App-container container text-left\">\r\n                <Form ref={v => this.form = v} className=\"my-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                />\r\n            </div>\r\n        </Page >\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VEmployeeHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, biz, result } = taskhistory;\r\n\r\n        return <div className=\"d-block p-3\">\r\n            <LMR >\r\n                <div><small className=\"text-muted\"><EasyDate date={date} /> </small></div>\r\n                <LMR right={<small>  {tv(status, (v) => v.name)}</small>}\r\n                    left={<div><span><FA name='user' className='mr-3 text-info' ></FA></span>{tv(task, (v) => tv(v.customer, (vs) => vs.name))}</div>} >\r\n                </LMR>\r\n                <LMR right={<small>{tv(task, (v) => tv(v.type, (vs) => vs.description || '#'))}</small>}\r\n                    left={<small>{tv(task, (v) => tv(v.biz, (vs) => vs.description || '#'))}</small>}>\r\n                </LMR>\r\n\r\n            </LMR>\r\n\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            biz: tasks.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showDetailFromId(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"已完成任务\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, FA } from 'tonva';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerHistory extends VPage<CSalesTask> {\r\n\r\n    async open(tasks: any) {\r\n        this.openPage(this.page, tasks);\r\n    }\r\n\r\n    private renderHistory = (taskhistory: any, index: number) => {\r\n        let { task, date, status, principal, result } = taskhistory;\r\n        // right={tv(principal)}\r\n        return <div className=\"d-block p-3\">\r\n            <LMR className='small' left={<small className=\"text-muted\"><EasyDate date={date} /></small>}\r\n                right={<small>{tv(status, (v) => v.name)}</small>}>\r\n            </LMR>\r\n            <LMR left={<small>{tv(task, v => tv(v.biz, vs => vs.description))}</small>}\r\n                right={<small>{tv(task, v => tv(v.type, vs => vs.description))}</small>}></LMR>\r\n        </div >;\r\n    }\r\n\r\n    //选择任务\r\n    private onSalesTaskClick = async (param: any) => {\r\n        let tasks = param.task.obj;\r\n        let task = {\r\n            id: tasks.id,\r\n            type: tasks.type,\r\n            biz: tasks.biz,\r\n            description: null,\r\n            remindDate: null,\r\n            deadline: null,\r\n            customer: tasks.customer\r\n        }\r\n        this.controller.showTaskDetailEdit(task);\r\n    }\r\n\r\n    private page = observer((tasks: any) => {\r\n\r\n        let none = <div className=\"m-3 text-muted small\">【无记录】</div>;\r\n        return <Page header=\"交流记录\" >\r\n            <List before={''} none={none} items={tasks.tasks} item={{ render: this.renderHistory, onClick: this.onSalesTaskClick }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, LMR, List, FA, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSelectBiz } from './CSelectBiz';\r\n\r\nexport class VSelectBiz extends VPage<CSelectBiz> {\r\n\r\n    async open() {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderItem = (model: any, index: number) => {\r\n        let { biz, type } = model;\r\n        let left = <div className='text-info mr-3' >{tv(type, (obj) => this.controller.cSalesTask.getTaskIcon(obj.name))}</div>\r\n        return <LMR className=\"px-3 py-2\" left={left}>\r\n            <div className=\"font-weight-bold\">{tv(biz, obj => obj.description)}</div>\r\n        </LMR>\r\n    }\r\n\r\n    private onClickTaskBiz = async (model: any) => {\r\n        await this.controller.selectTaskBiz(model);\r\n        //this.ceasePage(1);\r\n    }\r\n\r\n    private ai = () => {\r\n        return null;\r\n        return <LMR className=\"p-3 bg-white mb-1 cursor-pointer\" left={<FA className=\"text-success mr-3 mt-1\" name=\"android\" size=\"lg\" fixWidth={true} />}\r\n            onClick={this.controller.aiClick}>\r\n            <div className=\"font-weight-bold\">帮我找找机会</div>\r\n        </LMR>\r\n    }\r\n\r\n    private page = () => {\r\n        let { taskType, taskBizs } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">正在筹备中</div>;\r\n        return <Page header={taskType.description || taskType.name} headerClassName='bg-primary' >\r\n            {this.ai()}\r\n            <List none={none} items={taskBizs.ret} item={{ render: this.renderItem, onClick: this.onClickTaskBiz }} />\r\n        </Page>\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { TuidMain, Controller, Map } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { CSalesTask } from '../CSalesTask';\r\nimport { VAi } from './VAi';\r\nimport { VSelectBiz } from './VSelectBiz';\r\nimport { TaskType, Task } from 'salestask/model';\r\n\r\n/**\r\n *\r\n */\r\nexport class CSelectBiz extends Controller {\r\n\r\n    cSalesTask: CSalesTask;\r\n    private mapTaskBiz: Map;\r\n    taskBizs: any;\r\n    taskType: TaskType;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cSalesTask: CSalesTask, res: any) {\r\n        super(res);\r\n        this.cSalesTask = cSalesTask;\r\n        let { cUqSalesTask } = this.cSalesTask.cApp;\r\n        this.mapTaskBiz = cUqSalesTask.map('taskbiz');\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.task = task;\r\n        this.taskType = task.type;\r\n        await this.getBizFromTaskTypeId(this.taskType);\r\n        this.openVPage(VSelectBiz);\r\n    }\r\n\r\n    //搜索任务类型\r\n    private async getBizFromTaskTypeId(taskType: TaskType) {\r\n        this.taskBizs = await this.mapTaskBiz.query({ type: taskType.id });\r\n    }\r\n\r\n    //返回添加任务页面\r\n    selectTaskBiz = async (taskbiz: any) => {\r\n        this.task.biz = taskbiz.biz.obj;\r\n        this.cSalesTask.cApp.cCustomer.start(this.task)\r\n    }\r\n\r\n    //返回添加任务页面\r\n    returnTaskBiz = async (type: any): Promise<any> => {\r\n        this.returnCall(type);\r\n    }\r\n\r\n\r\n    aiClick = () => {\r\n        this.openVPage(VAi);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Query, TuidMain, Action, FA } from 'tonva';\r\nimport { PageItems, Controller } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VMain } from './views/VMain';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { VSalesTaskExtension } from './views/VSalesTaskExtension';\r\nimport { VTaskHistory } from './views/VTaskHistory';\r\nimport { CType, createTaskTypes } from 'salestask/types/createTypes';\r\nimport { CSelectType } from './type';\r\nimport { Task, TaskField, TaskType, BizType } from './model';\r\nimport { Tasks } from './model/tasks';\r\nimport { VSalesTaskInvalid } from './views/VSalesTaskInvalid';\r\nimport { VEmployeeHistory } from './views/VEmployeeHistory';\r\nimport { VCustomerHistory } from './views/VCustomerHistory';\r\nimport { CSelectBiz } from './type/CSelectBiz';\r\nimport { VCreateCheck } from './views/VCreateCheck';\r\nimport { any } from 'prop-types';\r\n\r\nclass PageSalesTask extends PageItems<any> {\r\n\r\n    private searchsalestskQuery: Query;\r\n\r\n    constructor(searchsalestskQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchsalestskQuery = searchsalestskQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchsalestskQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n/**\r\n *\r\n */\r\nexport class CSalesTask extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    cSelectType: CSelectType;\r\n    cSalesTaskBiz: CSelectBiz;\r\n\r\n    private taskTypes: { [type: string]: CType } = {};\r\n    @observable tasks: Tasks;\r\n    protected completionTaskAction: Action;\r\n    protected extensionTaskAction: Action;\r\n    protected addTaskAction: Action;\r\n    private taskTuid: TuidMain;\r\n    private tuidCustomer: TuidMain;\r\n    private taskTypeTuid: TuidMain;\r\n    private qeurySearchTask: Query;\r\n    private qeurySearchHistory: Query;\r\n    private qeurySearchEmployeeHistory: Query;\r\n    private qeurySearchCustomerHistory: Query;\r\n    private qeurySearchTaskCompletion: Query;\r\n\r\n    private taskBook: any;\r\n\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n        this.cSelectType = new CSelectType(this, undefined);\r\n        this.cSalesTaskBiz = new CSelectBiz(this, undefined);\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.taskTuid = cUqSalesTask.tuid(\"task\");\r\n        this.tuidCustomer = cUqCustomer.tuid('customer');\r\n        this.taskTypeTuid = cUqSalesTask.tuid(\"tasktype\");\r\n\r\n        this.taskBook = cUqSalesTask.book(\"taskbook\");\r\n        this.completionTaskAction = cUqSalesTask.action('CompletionTask');\r\n        this.extensionTaskAction = cUqSalesTask.action('ExtensionTask');\r\n        this.addTaskAction = cUqSalesTask.action('AddTask');\r\n\r\n        this.qeurySearchTask = cUqSalesTask.query(\"searchtask\");\r\n        this.qeurySearchHistory = cUqSalesTask.query(\"searchhistorytask\");\r\n        this.qeurySearchEmployeeHistory = cUqSalesTask.query(\"searchhistorytaskbyemployee\");\r\n        this.qeurySearchCustomerHistory = cUqSalesTask.query(\"searchhistorytaskbycustomer\");\r\n        this.qeurySearchTaskCompletion = cUqSalesTask.query(\"searchtaskcompletion\");\r\n\r\n        this.taskTypes = createTaskTypes(this);\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n        await this.searchTaskByKey(param);\r\n    }\r\n\r\n    //搜索开始------------------------------------------------\r\n    //搜索所有未处理任务\r\n    searchTaskByKey = async (key: string) => {\r\n        let tasks = await this.qeurySearchTask.table({});\r\n        this.tasks = new Tasks(tasks);\r\n    }\r\n    //搜索单个任务\r\n    loadTask = async (taskid: number) => {\r\n        let task = await this.taskTuid.load(taskid);\r\n        task.fields = await this.searchTaskCompletion(taskid);\r\n        return task;\r\n    }\r\n    //搜索处理结果的记录\r\n    searchTaskCompletion = async (taskid: number) => {\r\n        return await this.qeurySearchTaskCompletion.table({ taskid: taskid });\r\n    }\r\n    //显示任务沟通记录\r\n    showTaskHistory = async (taskid: number) => {\r\n        let tasks = await this.qeurySearchHistory.table({ taskid: taskid });\r\n        this.openVPage(VTaskHistory, { tasks: tasks });\r\n    }\r\n    //显示员工沟通记录\r\n    showEmployeeHistory = async () => {\r\n        let tasks = await this.qeurySearchEmployeeHistory.table({});\r\n        this.openVPage(VEmployeeHistory, { tasks: tasks });\r\n    }\r\n    //显示客户沟通记录\r\n    showCustomerHistory = async (customerid: number) => {\r\n        let tasks = await this.qeurySearchCustomerHistory.table({ customerid: customerid });\r\n        this.openVPage(VCustomerHistory, { tasks: tasks });\r\n    }\r\n    //获取类型的图表\r\n    getTaskIcon(typeName: string) {\r\n        let tt = this.taskTypes[typeName];\r\n        if (tt === undefined) {\r\n            if (typeName == 'phone') {\r\n                return <FA name='fax' size=\"lg\" fixWidth={true} />;\r\n            } else {\r\n                return <FA name='car' size=\"lg\" fixWidth={true} />;\r\n            }\r\n        }\r\n        return tt.icon;\r\n    }\r\n    //获取任务类型\r\n    getCTaskType(typeName: string): CType {\r\n        return this.taskTypes[typeName];\r\n    }\r\n    //搜索结束------------------------------------------------\r\n\r\n\r\n    //显示开始------------------------------------------------\r\n    //显示销售任务明细页面\r\n    showTaskDetailEdit = async (task: Task) => {\r\n        let tt = this.getCTaskType(task.biz.obj.name);\r\n        if (tt !== undefined) tt.showDetailEdit(task);\r\n    }\r\n    //显示销售任务明细页面\r\n    showDetailFromId = async (task: Task) => {\r\n        this.getCTaskType(task.biz.obj.name).showDetailFromId(task.id);\r\n    }\r\n    //显示任务完结页面\r\n    showTaskComplet = async (task: Task) => {\r\n        let name = task.biz.name ? task.biz.name : task.biz.obj.name;\r\n        this.getCTaskType(name).showComplet(task);\r\n    }\r\n    //显示结束------------------------------------------------\r\n\r\n\r\n    //处理任务开始------------------------------------------------\r\n    //完结任务\r\n    async finishTask(task: Task) {\r\n        //完结任务--后台数据\r\n        let param = {\r\n            taskid: task.id,\r\n            resulttype: \"compl\",\r\n            result: \"完结\",\r\n            fields: task.fields\r\n        };\r\n        await this.completionTaskAction.submit(param);\r\n        this.tasks.remove(task);\r\n        this.closePage(2);\r\n        //完结任务--前台页面\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === taskid);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n    }\r\n\r\n    //添加任务\r\n    createAndFinishTask = async (task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.showTaskComplet(newtask);\r\n    }\r\n\r\n    //显示任务延期页面\r\n    showTaskExtension = async (model: Task) => {\r\n        this.openVPage(VSalesTaskExtension, model);\r\n    }\r\n    //延期任务\r\n    async extensionTask(task: Task, result: string, resulttype: string, date: Date) {\r\n        let param = { taskid: task.id, result: result, remindDate: date };\r\n        await this.extensionTaskAction.submit(param);\r\n        this.tasks.postPone(date, task);\r\n    }\r\n\r\n    //显示拒绝任务页面\r\n    showTaskInvalid = async (model: Task) => {\r\n        this.openVPage(VSalesTaskInvalid, model);\r\n    }\r\n    //拒绝任务\r\n    onInvalidTask = async (task: Task, result: string, resulttype: string) => {\r\n        let param = { taskid: task.id, resulttype: \"Inval\", result: result };\r\n        await this.completionTaskAction.submit(param);\r\n        /*\r\n        let index = this.tasks.findIndex(v => v.id === model.id);\r\n        if (index >= 0) this.tasks.splice(index, 1);\r\n        */\r\n        this.tasks.remove(task);\r\n    }\r\n    //处理任务结束------------------------------------------------\r\n\r\n\r\n    //添加任务开始------------------------------------------------\r\n    //显示任务类页面\r\n    showSelectTaskType = async () => {\r\n        //return await this.cSalesTaskType.call();\r\n        await this.cSelectType.start();\r\n    }\r\n    //显示查询客户页面\r\n    showCrateCheck = async (task: Task) => {\r\n        this.openVPage(VCreateCheck, task);\r\n    }\r\n\r\n    //添加任务\r\n    createTask = async (param: any, task: Task) => {\r\n        let newtask = await this.createTasks(task);\r\n        await this.searchTaskByKey('');\r\n    }\r\n\r\n    private createTasks = async (task: Task) => {\r\n        let { customer, type, biz, description, priorty, deadline } = task;\r\n        let customerId = customer.id;\r\n        let typeId = type.id;\r\n        let bizIds = biz.id;\r\n        priorty = priorty ? 1 : 0;\r\n        deadline = deadline ? deadline : undefined;\r\n        description = description ? description : undefined;\r\n        //添加任务--后台数据\r\n        let model = { id: undefined, description: description, customer: customerId, type: typeId, biz: bizIds, sourceID: \"\", sourceType: \"\", sourceNo: \"\", priorty: priorty, deadline: deadline };\r\n        let ret = await this.addTaskAction.submit(model);\r\n        task.id = ret.id;\r\n        return task;\r\n        /** \r\n        //添加任务--前台页面\r\n        this.tasks.unshift({\r\n            id: ret.id,\r\n            description: description,\r\n            customer: this.tuidCustomer.boxId(customerId),\r\n            type: this.taskTypeTuid.boxId(typeId),\r\n            sourceID: \"\",\r\n            sourceType: \"\",\r\n            sourceNo: \"\",\r\n            priorty: priorty,\r\n            deadline: deadline\r\n        });\r\n        */\r\n\r\n    }\r\n    //添加任务结束------------------------------------------------\r\n\r\n    //显示客户明细页面\r\n    showCustomerDetail = async (customerId: any) => {\r\n        let { cCustomer } = this.cApp;\r\n        cCustomer.showCustomerDetail(customerId);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMain);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n\r\n","export const consts = {\r\n\r\n    uqSalesTask: '百灵威系统工程部/salestask',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, FA } from 'tonva';\r\n\r\nexport class VCustomerSelect extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n        let { name } = salesTask;\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\"></div>\r\n            <div>{name}</div>\r\n        </LMR >\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n        await this.controller.selectCustomer(model);\r\n        //this.ceasePage();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageCustomer } = this.controller;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header=\"选择客户\" headerClassName='bg-primary'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2\"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\n\r\nexport class VCustomerDetail extends VPage<CCustomer> {\r\n\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showCustomerHistory } = cSalesTask;\r\n        let onshowCustomerHistory = async () => await showCustomerHistory(customer.id);\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\"\r\n                    left={< div > <small><FA name='university' className='text-info' /></small> &nbsp;北京大学</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: <LMR className=\"cursor-pointer w-100 py-3\" onClick={onshowCustomerHistory}\r\n                    left={< div > <small><FA name='hand-o-right' className='text-info' /></small> &nbsp;沟通记录</div>}\r\n                    right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>\r\n                </LMR >,\r\n            } as ComponentProp,\r\n            {\r\n                type: 'string',\r\n                name: 'no',\r\n                label: '编号',\r\n                vAlign: \"center\",\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'name',\r\n                label: '姓名',\r\n                vAlign: \"stretch\",\r\n            } as StringProp,\r\n\r\n            {\r\n                type: 'string',\r\n                name: 'gender',\r\n                label: '性别',\r\n                vAlign: \"stretch\"\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '生日'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: '领域',\r\n                vAlign: 'center'\r\n            } as StringProp,\r\n            {\r\n                type: 'string',\r\n                name: 'birthday',\r\n                label: 'TOP单位',\r\n                vAlign: \"stretch\",\r\n            } as StringProp\r\n        ];\r\n\r\n\r\n        return <Page header=\"客户详情\">\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CCustomer } from './CCustomer';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\n\r\nexport class VCustomerList extends VPage<CCustomer> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderCustomer(salesTask: any, index: number) {\r\n\r\n        let { name } = salesTask;\r\n\r\n        return <LMR className=\"px-3 py-2 \" left={<FA name='user' className=' my-2 mr-3 text-info' />}>\r\n            <div className=\"font-weight-bold\">{}</div>\r\n            <div>{name}</div>\r\n        </LMR>\r\n\r\n    }\r\n\r\n    private onClickCustomer = async (model: any) => {\r\n\r\n        await this.controller.showCustomerDetail(model.id);\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n\r\n        let { pageCustomer } = this.controller;\r\n        let add = <div className=\"cursor-pointer\"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">请搜索客户！</div>;\r\n        return <Page header='客户' headerClassName='bg-primary py-1 px-3' >\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2  \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索客户姓名、单位\" />\r\n\r\n            <List before={''} none={none} items={pageCustomer} item={{ render: this.renderCustomer, onClick: this.onClickCustomer }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { VCustomerSelect } from './VCustomerSelect';\r\nimport { VCustomerDetail } from './VCustomerDetail';\r\nimport { observer } from 'mobx-react';\r\nimport { VCustomerList } from './VCustomerList';\r\nimport { Task } from 'salestask/model';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\n\r\n//页面类\r\nclass PageCustomer extends PageItems<any> {\r\n\r\n    private searchCustomerQuery: Query;\r\n\r\n    constructor(searchCustomerQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchCustomerQuery = searchCustomerQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchCustomerQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CCustomer extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageCustomer: PageCustomer;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n    private task: Task;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqCustomer.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(task: Task) {\r\n        this.pageCustomer = null;\r\n        this.task = task;\r\n        this.openVPage(VCustomerSelect);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageCustomer = new PageCustomer(this.querySearchCustomer);\r\n        this.pageCustomer.first({ key: key });\r\n    }\r\n\r\n    //加载客户明细\r\n    loadCustomerDetail = async (customerid: number) => {\r\n        return await this.tuidCustomer.load(customerid);\r\n    }\r\n\r\n    //查询客户--通过ID\r\n    showCustomerDetail = async (customerid: number) => {\r\n        let customer = await this.loadCustomerDetail(customerid);\r\n        this.openVPage(VCustomerDetail, customer);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    selectCustomer = async (customer: any): Promise<any> => {\r\n        this.task.customer = customer;\r\n        this.cApp.cSalesTask.showCrateCheck(this.task);\r\n        //this.cApp.cSalesTask.getCTaskType(this.task.biz.name).showCreate(this.task);\r\n    }\r\n\r\n    //选择客户--给调用页面返回客户id\r\n    returnCustomer = async (customer: any): Promise<any> => {\r\n        this.returnCall(customer);\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageCustomer = null;\r\n        return this.renderView(VCustomerList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Image } from 'tonva';\r\n\r\nconst imagePath = \"http://www.jkchemical.com/static/Structure/\";\r\nconst altimagePath = \"http://www.jkchemical.com/static/Structure/999.png\";\r\n\r\ninterface ProductImageProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    chemicalId: string;\r\n}\r\n\r\nexport function ProductImage(props: ProductImageProps) {\r\n\r\n    let { style, className, chemicalId } = props;\r\n    return <Image src={chemicalId && (imagePath + chemicalId.substr(0, 3) + '/' + chemicalId + '.png')} style={style} className={className} altImage={altimagePath} />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, Page, PageItems } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\nimport { tv } from 'tonva';\r\nimport { ProductImage } from 'tools/productImage';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    //每个视图都有一个render方法， 用于自定义页面\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private renderBrand = (brand: any) => {\r\n        return this.productPropItem('品牌', brand.name);\r\n    }\r\n\r\n    private productPropItem = (caption: string, value: any) => {\r\n        if (value === null || value === undefined) return null;\r\n        return <>\r\n            <div className=\"col-4 col-sm-2 col-lg-4 text-muted pr-0 small\">{caption}</div>\r\n            <div className=\"col-8 col-sm-4 col-lg-8\">{value}</div>\r\n        </>;\r\n    }\r\n    private renderProduct = (product: any, index: number) => {\r\n        let { brand, description, descriptionC, CAS, purity, molecularFomula, molecularWeight, origin, imageUrl } = product;\r\n        return <div className=\"d-block mb-4 px-2\">\r\n            <div className=\"py-2\">\r\n                <div><strong>{description}</strong></div>\r\n                <div>{descriptionC}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ProductImage chemicalId={imageUrl} className=\"w-100\" />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        {this.productPropItem('CAS', CAS)}\r\n                        {this.productPropItem('纯度', purity)}\r\n                        {this.productPropItem('分子式', molecularFomula)}\r\n                        {this.productPropItem('分子量', molecularWeight)}\r\n                        {this.productPropItem('产品编号', origin)}\r\n                        {tv(brand, this.renderBrand)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    private onScrollBottom = async () => {\r\n\r\n        await this.controller.pageProduct.more();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { pageProduct } = this.controller;\r\n        let add = <div className=\"cursor-pointer \"><FA name=\"plus\" /></div>;\r\n        let none = <div className=\"my-3 mx-2 text-warning\">未搜索到产品</div>;\r\n\r\n        return <Page header='产品' onScrollBottom={this.onScrollBottom} headerClassName='bg-primary py-1 px-3'>\r\n            <SearchBox className=\"px-1 w-100  mt-2 mr-2 \"\r\n                size='md'\r\n                onSearch={(key: string) => this.controller.searchByKey(key)}\r\n                placeholder=\"搜索品名、编号、CAS、MDL等\" />\r\n            <List before={''} none={none} items={pageProduct} item={{ render: this.renderProduct, onClick: null }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProductList } from './VProductList';\r\n\r\n//页面类\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProductQuery: Query;\r\n\r\n    constructor(searchProductQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 10;\r\n        this.searchProductQuery = searchProductQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProductQuery.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class CProduct extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    @observable pageProduct: PageProduct;\r\n    private querySearchProduct: Query;\r\n    @observable customerlist: any;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqProduct } = this.cApp;\r\n        this.querySearchProduct = cUqProduct.query(\"searchProduct\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(null, param);\r\n    }\r\n\r\n    //查询客户--通过名称\r\n    searchByKey = async (key: string) => {\r\n\r\n        this.pageProduct = new PageProduct(this.querySearchProduct);\r\n        this.pageProduct.first({ key: key, salesRegion: 1 });\r\n    }\r\n\r\n    render = observer(() => {\r\n        this.pageProduct = null;\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, PageItems, Nav, nav } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, List, EasyDate, SearchBox, StringProp, ComponentProp, Prop, PropGrid, FA } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nfunction rowCom(iconName: string, iconColor: string, caption: string, onClick: any) {\r\n    return <LMR className=\"cursor-pointer w-100 py-3 align-items-center\" onClick={onClick}\r\n        left={<FA name={iconName} className={'mr-3 ' + iconColor} fixWidth={true} size=\"lg\" />}\r\n        right={< div className=\"w-2c text-right\" > <i className=\"fa fa-chevron-right\" /></div >}>{caption}</LMR>;\r\n}\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(customer: any) {\r\n\r\n        this.openPage(this.page, customer);\r\n    }\r\n\r\n    render(member: any): JSX.Element {\r\n        return <this.page />;\r\n    }\r\n\r\n    private logout = () => {\r\n        nav.showLogout();\r\n    }\r\n\r\n    private page = observer((customer: any) => {\r\n        let { cSalesTask } = this.controller.cApp\r\n        let { showEmployeeHistory } = cSalesTask;\r\n        let onshowEmployeeHistory = async () => await showEmployeeHistory();\r\n\r\n        let rows: Prop[] = [\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('tag', 'text-info', '已完成任务', onshowEmployeeHistory),\r\n            } as ComponentProp,\r\n            {\r\n                type: 'component',\r\n                name: 'customer',\r\n                component: rowCom('line-chart', 'text-danger', '销量', undefined),\r\n            } as ComponentProp,\r\n        ];\r\n\r\n        let right = < div className='mr-3' ><FA name='bars' /></div>;\r\n        let footer = <button type=\"button\" className=\"btn btn-danger w-100\" onClick={this.logout} >退出</button>;\r\n        return <Page header='我的' footer={footer} headerClassName='bg-primary py-1 px-3'>\r\n            <PropGrid className=\"my-2\" rows={rows} values={customer} alignValue=\"right\" />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Query, tv, TuidMain, Action } from 'tonva';\r\nimport { PageItems, Controller, nav, Page, Image } from 'tonva';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { observer } from 'mobx-react';\r\nimport { VMe } from './VMe';\r\n\r\n/**\r\n *\r\n */\r\nexport class CMe extends Controller {\r\n\r\n    cApp: CSalesTaskApp;\r\n    private tuidCustomer: TuidMain;\r\n    private querySearchCustomer: Query;\r\n\r\n    //构造函数\r\n    constructor(cApp: CSalesTaskApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqSalesTask, cUqCustomer } = this.cApp;\r\n        this.tuidCustomer = cUqSalesTask.tuid(\"customer\");\r\n        this.querySearchCustomer = cUqCustomer.query(\"searchcustomer\");\r\n    }\r\n\r\n    //初始化\r\n    protected async internalStart(param: any) {\r\n\r\n        this.openVPage(VMe, param);\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VMe);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}\r\n","//import * as React from 'react';\r\nimport { User, nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { CSalesTask } from 'salestask';\r\nimport { consts } from './consts';\r\nimport { CSelectType } from './salestask/type';\r\nimport { CCustomer } from 'customer/CCustomer';\r\nimport { CProduct } from 'product/CProduct';\r\nimport { CType } from 'salestask/types/createTypes';\r\nimport { CMe } from 'me/CMe';\r\nimport { CCommonType } from 'salestask/types/commonType';\r\n\r\n\r\nexport class CSalesTaskApp extends CApp {\r\n\r\n    /** 定义 QU*/\r\n    cUqSalesTask: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqProduct: CUq;\r\n\r\n    /** 定义 Conctorlle*/\r\n    cSalesTask: CSalesTask;\r\n    cCustomer: CCustomer;\r\n    cProduct: CProduct;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart(param?: any) {\r\n\r\n        /** 初始化 QU*/\r\n        this.cUqSalesTask = this.getCUq(consts.uqSalesTask);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n\r\n        /** 初始化 Conctrolle*/\r\n        this.cCustomer = new CCustomer(this, undefined);\r\n        this.cProduct = new CProduct(this, undefined);\r\n        this.cSalesTask = new CSalesTask(this, this.res);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        /** 启动销售任务列表*/\r\n        this.cSalesTask.start();\r\n\r\n        /** 启动主程序*/\r\n        await super.internalStart(param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CSalesTaskApp } from 'CSalesTaskApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSalesTaskApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n\r\n    render = (param?: any): JSX.Element => {\r\n        let { cSalesTask, cCustomer, cProduct, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '任务', content: cSalesTask.tab, icon: 'home', notify: undefined/*store.homeCount*/ },\r\n            { name: 'member', label: '客户', content: cCustomer.tab, icon: 'vcard' },\r\n            { name: 'member', label: '产品', content: cProduct.tab, icon: 'flask' },\r\n            { name: 'member', label: '我', content: cMe.tab, icon: 'user' }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI, CApp } from 'tonva';\r\nimport salestaskUI from './salestask';\r\nimport { CSalesTaskApp } from '../CSalesTaskApp';\r\nimport { VHome } from './main';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/salestask\",\r\n    CApp: CSalesTaskApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '百灵威系统工程部/salestask': salestaskUI,\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n        /*\r\n        let page = <Page header={false}>\r\n          <Tabs tabs={faceTabs} />\r\n        </Page>\r\n        nav.push(page);\r\n        */\r\n        //let b = new B('b');\r\n        //await b.d();\r\n        //nav.push(<div>ddd</div>)\r\n    }\r\n    public render() {\r\n        // notLogined={this.onLogined}\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nclass B extends A {\r\n  constructor(b:string) {\r\n    super(b);\r\n  }\r\n  //get super() {return this.A}\r\n  async test():Promise<string> {return 'B'}\r\n  async superTest() {\r\n    console.log('superTest: ' + super.t())\r\n    return super.test()\r\n  }\r\n  t() {return 'tb'}\r\n  async d() {\r\n    console.log(super.test);\r\n    console.log(this.test);\r\n    console.log(super.t);\r\n    console.log(this.t);\r\n    console.log('A.test ' + await this.superTest());\r\n    console.log('B.test ' + await this.test());\r\n    console.log('A.t ' + super.t());\r\n    console.log('B.t ' + this.t());\r\n  }\r\n}\r\n*/","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}